    1 CALL CLEAR 
    2 A$ = "3C4299A1A199423C"  :: CALL CHAR ( 64 , A$ ) 
    3 CALL CHAR ( 128 , "FF8083838383BFBFFF01C1C1C1C1FDFDBFBF8383838380FFFDFDC1C1C1C101FF" ) 
    4 CALL CLEAR  :: CALL SCREEN ( 5 )  :: CALL COLOR ( 0 , 16 , 5 , 1 , 16 , 5 , 2 , 16 , 5 , 3 , 16 , 5 , 4 , 16 , 5 , 5 , 16 , 5 , 6 , 16 , 5 , 7 , 16 , 5 , 8 , 16 , 5 ) 
    5 CALL COLOR ( 13 , 16 , 9 )  :: DISPLAY AT ( 1 , 11 )  : "19" 
    6 CALL HCHAR ( 1 , 16 , 128 )  :: CALL HCHAR ( 1 , 17 , 129 )  :: CALL HCHAR ( 2 , 16 , 130 )  :: CALL HCHAR ( 2 , 17 , 131 )  :: DISPLAY AT ( 1 , 17 )  : "84" 
    7 DISPLAY AT ( 5 , 8 )  : "MARTIN VOGLER"  :  : "   HOMECOMPUTER TI-99/4A" 
    8 DISPLAY AT ( 10 , 9 )  : "PRAESENTIERT:" 
    9 DISPLAY AT ( 15 , 1 )  : "         airfight 2" 
   10 DISPLAY AT ( 24 , 6 )  : "** MOMENT BITTE **" 
   11 FOR VERZOEG = 1 TO 1500  :: NEXT VERZOEG  :: CALL CLEAR  :: CALL CHARSET 
   12 CALL SCREEN ( 4 ) 
   13 CALL COLOR ( 2 , 1 , 1 )  :: CALL COLOR ( 2 , 1 , 2 )  :: CALL COLOR ( 2 , 1 , 3 )  :: CALL COLOR ( 2 , 1 , 4 )  :: CALL COLOR ( 2 , 1 , 5 ) 
   14 CALL COLOR ( 2 , 1 , 6 )  :: CALL COLOR ( 2 , 1 , 7 )  :: CALL COLOR ( 2 , 1 , 8 )  :: CALL COLOR ( 2 , 1 , 9 )  :: CALL COLOR ( 2 , 1 , 10 )  :: CALL COLOR ( 2 , 1 , 11 ) 
  100 CALL CLEAR 
  110 A = 92  :: C = 120  :: PO = 1 
  111 D = 0  :: FI = 0 
  120 CALL COLOR ( 13 , 5 , 2 ) 
  121 CALL COLOR ( 3 , 5 , 2 ) 
  122 CALL COLOR ( 4 , 5 , 2 ) 
  130 CALL CHAR ( 131 , "00000000000000FF" )  :: CALL HCHAR ( 24 , 1 , 131 , 32 ) 
  135 DISPLAY AT ( 24 , 1 ) SIZE ( 3 )  : D 
  140 CALL SCREEN ( 2 ) 
  160 CALL CHAR ( 92 , "000000000021303F1F070000000000000000000000F0A2FAFEFA42E000000000" ) 
  170 CALL CHAR ( 36 , "183D7F7F3D180403010000000000000018BCFCFEB93676BF1E18" ) 
  180 CALL CHAR ( 60 , "064F09000A800A000581034089216008110250034FC08882A089C208041002F1" ) 
  185 CALL CHAR ( 40 , "3C7EFFFFFFFF7E3C242424281428140000000000000000000000000000000000" ) 
  190 CALL CHAR ( 64 , "110250034FC08882A089C208041002F1064F09000A800A000581034089216008" ) 
  195 CALL CHAR ( 124 , "0000000000000000000000000000000000000000000080E08000" ) 
  200 CALL CHAR ( 68 , "0F000000030C00000100000000000000FF1F3FDF1F2F499111212101" ) 
  210 CALL CHAR ( 72 , "0000000000081D1D1F3B376EDE7D1D0200006060F0F0F8B8B87C7CFEFFFEC000" ) 
  220 CALL CHAR ( 96 , "0000000001030200011B1F0F00000000000008C49679FCF0F8D0800000000000" ) 
  230 CALL CHAR ( 100 , "0000000101010101000000000100000070207070F47CF47070707060E0C00000" ) 
  240 CALL CHAR ( 104 , "04081A260F07171B0C0600000000000000000080C080C0E0F070307060000000" ) 
  250 CALL CHAR ( 108 , "00000E84BFFFBF8A1F0000000000000000000000C0F0F8180800000000000000" ) 
  260 CALL CHAR ( 136 , "00040C0E1E1B3737377B7B7DFD3E1F01000000001018B8FCBCDCDEEFFAF04080" ) 
  270 CALL CHAR ( 112 , "0000000000010B1F0F3F9E6B2310000000000000F0F8D88000C0C08000000000" ) 
  280 CALL CHAR ( 116 , "00000307060E0E0E0E2F3E2F0E0E040E00000080000000008080808080000000" ) 
  290 CALL CHAR ( 120 , "000000060E0C0E0F07030103010000000000000000006030D8E8E0F0E4581020" ) 
  300 CALL CHAR ( 132 , "000000003C7EFFFFFFFF7E3C18181818000000000008183C7E3C7EFF18181818" ) 
  310 CALL MAGNIFY ( 4 )  :: A = 92  :: E = 0  :: F = 0 
  320 CALL SPRITE ( # 9 , 36 , 16 , 15 , 90 , 0 , 1 ) 
  330 CALL SPRITE ( # 13 , 36 , 16 , 40 , 1 , 0 , 2 ) 
  340 CALL SPRITE ( # 10 , 92 , 10 , 169 , 12 ) 
  350 CALL SPRITE ( # 14 , 72 , 5 , 161 , 220 ) 
  360 CALL SPRITE ( # 15 , 68 , 11 , 1 , 225 ) 
  370 CALL SPRITE ( # 20 , 136 , 5 , 129 , 80 ) 
  380 CALL SPRITE ( # 8 , 132 , 4 , 161 , 180 ) 
  390 CALL KEY ( 1 , K , S ) 
  400 IF S = 0 THEN 390
  410 E = 0  :: F = 10  :: CALL MOTION ( # 10 , E , F ) 
  420 FOR T = 8 TO 20 STEP 6  :: CALL MOTION ( # T , 0 , - 2 )  :: NEXT T 
  430 CALL JOYST ( 1 , X , Y ) 
  431 IF X = 4 AND Y = 0 THEN 1300
  440 CALL POSITION ( # 10 , N , M )  :: IF ( N < = 256 AND N > = 179 ) OR ( N > = 170 AND N < = 180 ) THEN 1400
  452 CALL COINC ( # 10 , # 12 , 15 , B ) 
  453 IF B = - 1 THEN GOTO 1480
  500 IF Y = - 4 THEN GOSUB 840ELSE 510
  505 GOTO 430
  510 IF Y = 4 THEN GOSUB 550
  540 GOTO 430
  550 IF A = 120 THEN 560ELSE 570
  560 A = 88 
  570 CALL PATTERN ( # 10 , A + 4 ) 
  580 IF A = 88 THEN 590ELSE 610
  590 E = 0  :: F = 10  :: C = 130  :: O = 0 
  600 P = - 2  :: GOTO 820
  610 IF A = 92 THEN 620ELSE 640
  620 E = - 10  :: F = 10  :: C = 120  :: P = - 1 
  630 GOTO 820
  640 IF A = 96 THEN 650ELSE 670
  650 E = - 10  :: F = 0  :: C = 110  :: P = 0 
  660 GOTO 820
  670 IF A = 100 THEN 680ELSE 700
  680 E = - 10  :: F = - 10  :: C = 120  :: P = 1 
  690 GOTO 820
  700 IF A = 104 THEN 710ELSE 730
  710 E = 0  :: F = - 10  :: C = 130  :: P = 2 
  720 GOTO 820
  730 IF A = 108 THEN 740ELSE 760
  740 E = 10  :: F = - 10  :: C = 140  :: P = 1 
  750 GOTO 820
  760 IF A = 112 THEN 770ELSE 790
  770 E = 10  :: F = 0  :: C = 160  :: P = 0 
  780 GOTO 820
  790 IF A = 116 THEN 800ELSE 820
  800 E = 10  :: F = 10  :: C = 140  :: P = - 1 
  810 GOTO 820
  820 A = A + 4 
  822 CALL MOTION ( # 10 , E , F ) 
  825 IF PO = 1 THEN 826ELSE 831
  826 RANDOMIZE  :: CALL SPRITE ( # 12 , 92 , INT ( ( RND * 7 ) + 8 ) , 192 , INT ( ( RND * 241 ) + 10 ) , - ( INT ( ( RND * 3 ) + 1 ) ) , INT ( ( RND * 9 ) + 7 ) )  :: PO = 0 
  831 FOR T = 8 TO 20 STEP 6  :: CALL MOTION ( # T , O , P )  :: NEXT T 
  832 RETURN 
  840 IF A = 92 THEN 850ELSE 860
  850 A = 124 
  860 CALL PATTERN ( # 10 , A - 4 ) 
  870 IF A = 96 THEN 880ELSE 900
  880 E = 0  :: F = 10  :: C = 130  :: P = - 2 
  890 GOTO 1110
  900 IF A = 100 THEN 910ELSE 930
  910 E = - 10  :: F = 10  :: C = 120  :: P = - 1 
  920 GOTO 1110
  930 IF A = 104 THEN 940ELSE 960
  940 E = - 10  :: F = 0  :: C = 110  :: P = 0 
  950 GOTO 1110
  960 IF A = 108 THEN 970ELSE 990
  970 E = - 10  :: F = - 10  :: C = 120  :: P = 1 
  980 GOTO 1110
  990 IF A = 112 THEN 1000ELSE 1020
 1000 E = 0  :: F = - 10  :: C = 130  :: P = 2 
 1010 GOTO 1110
 1020 IF A = 116 THEN 1030ELSE 1050
 1030 E = 10  :: F = - 10  :: C = 140  :: P = 1 
 1040 GOTO 1110
 1050 IF A = 120 THEN 1060ELSE 1080
 1060 E = 10  :: F = 0  :: C = 150  :: P = 0 
 1070 GOTO 1110
 1080 IF A = 124 THEN 1090ELSE 1110
 1090 E = 10  :: F = 10  :: C = 140  :: P = - 1 
 1100 GOTO 1110
 1110 A = A - 4 
 1120 CALL MOTION ( # 10 , E , F ) 
 1121 FOR T = 8 TO 20 STEP 6  :: CALL MOTION ( # T , O , P )  :: NEXT T 
 1122 RETURN 
 1130 CALL MOTION ( # 10 , 0 , 0 ) 
 1140 CALL SOUND ( 10 , 341 , 1 , 137 , 1 , - 5 , 1 ) 
 1150 CALL SOUND ( 10 , 294 , 1 , 131 , 1 , - 7 , 1 ) 
 1160 FOR T = 1 TO 3 
 1170 CALL SOUND ( 11 + T , 110 , 1 , 112 , 1 , - 7 , 1 )  :: NEXT T 
 1180 CALL PATTERN ( # 10 , 60 ) 
 1190 CALL SOUND ( 80 , 110 , 1 , - 6 , 1 ) 
 1200 CALL SOUND ( 222 , 110 , 1 , - 7 , 1 ) 
 1210 CALL PATTERN ( # 10 , 64 ) 
 1220 CALL SOUND ( 11 , 111 , 1 , - 6 , 1 ) 
 1230 CALL DELSPRITE ( ALL )  :: PO = 1 
 1240 FI = FI + 1  :: IF FI = 5 THEN GOTO 1600
 1241 GOTO 310
 1300 CALL POSITION ( # 10 , N , M )  :: CALL SPRITE ( # 11 , 124 , 10 , N , M , 10 * E , 10 * F ) 
 1305 CALL COINC ( # 11 , # 12 , 10 , U )  :: IF U = - 1 THEN 1500
 1306 CALL COINC ( # 11 , # 12 , 10 , U )  :: IF U = - 1 THEN 1500
 1307 CALL COINC ( # 11 , # 12 , 10 , U )  :: IF U = - 1 THEN 1500
 1310 CALL COINC ( # 11 , # 12 , 10 , U )  :: IF U = - 1 THEN 1500
 1311 CALL COINC ( # 11 , # 12 , 10 , U )  :: IF U = - 1 THEN 1500
 1312 CALL COINC ( # 11 , # 12 , 10 , U )  :: IF U = - 1 THEN 1500
 1320 CALL COINC ( # 12 , # 11 , 10 , U )  :: IF U = - 1 THEN 1500 :: CALL DELSPRITE ( # 11 ) 
 1330 GOTO 440
 1400 IF ( N > = 170 AND N < = 180 ) THEN 1130 :: A = 92  :: Y = - 4  :: GOTO 500
 1480 CALL MOTION ( # 10 , 0 , 0 ) 
 1481 CALL MOTION ( # 12 , 0 , 0 ) 
 1482 CALL SOUND ( 10 , 341 , 1 , 137 , 1 , - 5 , 1 ) 
 1483 CALL SOUND ( 10 , 294 , 1 , 131 , 1 , - 7 , 1 ) 
 1484 FOR T = 1 TO 3 
 1485 CALL SOUND ( 11 + T , 110 , 1 , 112 , 1 , - 7 , 1 )  :: NEXT T 
 1486 CALL PATTERN ( # 10 , 60 ) 
 1487 CALL PATTERN ( # 12 , 60 ) 
 1488 CALL SOUND ( 80 , 110 , 1 , - 6 , 1 ) 
 1489 CALL SOUND ( 222 , 110 , 1 , - 7 , 1 ) 
 1490 CALL PATTERN ( # 10 , 64 ) 
 1491 CALL PATTERN ( # 12 , 64 ) 
 1492 CALL SOUND ( 11 , 111 , 1 , - 6 , 1 ) 
 1493 CALL DELSPRITE ( ALL )  :: PO = 1 
 1494 FI = FI + 1  :: IF FI = 5 THEN 1600 :: GOTO 310
 1500 CALL DELSPRITE ( # 11 ) 
 1510 CALL MOTION ( # 12 , 0 , 0 ) 
 1520 CALL POSITION ( # 12 , N , M ) 
 1530 CALL SOUND ( - 33 , 222 , 1 , - 6 , 1 ) 
 1540 CALL PATTERN ( # 12 , 60 ) 
 1550 CALL SOUND ( - 111 , 110 , 1 , - 7 , 1 ) 
 1560 CALL PATTERN ( # 12 , 64 ) 
 1570 CALL SOUND ( - 222 , 110 , 1 , - 6 , 1 ) 
 1580 CALL DELSPRITE ( # 12 ) 
 1590 PO = 1  :: D = D + 10 
 1591 DISPLAY AT ( 24 , 1 ) SIZE ( 4 )  : D  :: GOTO 430
 1600 CALL DELSPRITE ( ALL ) 
 1601 CALL CHARSET 
 1602 CALL SCREEN ( 11 ) 
 1603 DISPLAY AT ( 5 , 1 )  : "GAME-OVER" 
 1604 FOR T = 1 TO 100 
 1605 CALL SOUND ( T , 222 + ( 3 * T ) , 1 ) 
 1608 NEXT T 
 1609 PRINT "PRESS BUTTON TO START A NEW GAME!!!" 
 1610 CALL KEY ( 1 , K , S ) 
 1611 IF S < > 0 THEN 100ELSE 1610
