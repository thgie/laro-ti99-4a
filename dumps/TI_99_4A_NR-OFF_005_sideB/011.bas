   10  !  ##  ##  ##   ##  ##  ##
   15  !  #######################
   20  !  ##                   ##
   25  !  ##BURG DES SCHRECKENS##
   30  !  ##                   ##
   35  !  ## ----------------- ##
   40  !  ##                   ##
   45  !   ## VON L. SCHATZER ##
   50  !    ## (APRIL 1984)  ##
   55  !     ##             ##
   60  !     ##-------------##
   65  !     ##   1.TEIL    ##
   70  !     ##             ##
   75  !     #################
   80 GOTO 95 :: A , B , PAUSE , Z , I , T , T1 , J , F , X , Y , X1 , Y1 , I1 , PAT , K , S , TUER , Z$ , Z1$ , Z2$ , Z3$ , Z4$ , Z5$ , Z6$ , A$ 
   85 GOTO 95 :: CALL CLEAR  :: CALL SCREEN  :: CALL COLOR  :: CALL KEY  :: CALL CHAR  :: CALL CHARSET  :: CALL SPRITE  :: CALL MOTION  :: CALL PATTERN  :: CALL MAGNIFY  :: CALL DELSPRITE  :: CALL SOUND 
   90  ! @P-
   95 ON WARNING NEXT 
  100 RANDOMIZE 
  105 CALL CLEAR 
  110 CALL MAGNIFY ( 3 ) 
  115 CALL SCREEN ( 11 ) 
  120 CALL CHAR ( 64 , "3C42BDA1A1BD423C" ) 
  125 DISPLAY AT ( 1 , 1 )  : TAB ( 5 )  ; "BURG DES SCHRECKENS"  : TAB ( 5 )  ; "-------------------"  : TAB ( 5 )  ; "(1.TEIL)"  : TAB ( 5 )  ; "--------" 
  130 DISPLAY AT ( 6 , 1 )  : "@ 1984 BY"  : "         L.SCHATZER"  :  : "   GRAFISCHE GESTALTUNG:"  : "        M.PILLOUD" 
  135  ! 
  140 RESTORE 530
  145 READ Z , Z$ 
  150 IF Z = 0 THEN 170
  155 CALL CHAR ( Z , Z$ ) 
  160 CALL KEY ( 0 , K , S )  :: IF S = 1 THEN 485
  165 GOTO 145
  170 CALL SCREEN ( 2 ) 
  175 CALL CLEAR 
  180 CALL COLOR ( 5 , 16 , 1 , 6 , 16 , 1 , 7 , 16 , 1 , 8 , 16 , 1 ) 
  185  ! 
  190 RESTORE 610
  195 CALL COLOR ( 14 , 2 , 2 , 9 , 2 , 2 , 12 , 2 , 2 , 10 , 2 , 2 , 13 , 2 , 2 ) 
  200 READ Z1$ , Z2$ , Z3$ , Z4$ , Z5$ , Z6$ 
  205 DISPLAY AT ( 1 , 1 )  : Z1$  ; Z2$  ; Z3$  ; Z4$  ; Z5$  ; Z6$ 
  210 Z1$ , Z2$ , Z3$ , Z4$ , Z5$ , Z6$ = "" 
  215 RESTORE 525
  220 CALL SPRITE ( # 25 , 112 , 2 , 105 , 113 , 0 , 0 , # 26 , 112 , 2 , 105 , 129 , 0 , 0 , # 27 , 112 , 2 , 121 , 113 , 0 , 0 , # 28 , 112 , 2 , 121 , 129 , 0 , 0 ) 
  225 CALL COLOR ( 11 , 5 , 1 )  :: CALL COLOR ( # 25 , 5 , # 26 , 5 , # 27 , 5 , # 28 , 5 ) 
  230 CALL COLOR ( 1 , 5 , 1 , 9 , 13 , 6 , 10 , 9 , 1 , 12 , 6 , 13 , 13 , 15 , 9 ) 
  235 FOR PAUSE = 1 TO 50  :: NEXT PAUSE 
  240 REM  BLITZ & DONNER
  245 CALL COLOR ( 14 , 12 , 1 )  :: CALL SCREEN ( 16 ) 
  250 FOR PAUSE = 1 TO 100  :: NEXT PAUSE 
  255 CALL SOUND ( 1000 , - 7 , 0 ) 
  260 GOSUB 515
  265 CALL COLOR ( 14 , 2 , 2 ) 
  270 CALL SCREEN ( 2 ) 
  275 FOR I = 3 TO 30 STEP 3  :: CALL SOUND ( 300 , - 7 , I )  :: NEXT I 
  280 CALL SOUND ( - 4250 , - 5 , 25 ) 
  285 CALL MOTION ( # 25 , 0 , - 1 , # 27 , 0 , - 1 , # 26 , 0 , 1 , # 28 , 0 , 1 ) 
  290 T1 = 2 ^ ( 1 / 3 ) 
  295 FOR I = 1 TO 4 
  300 T = 220 
  305 FOR J = 1 TO 10 
  310 CALL SOUND ( - 4200 , T , 5 , - 5 , 25 ) 
  315 T = T * T1 
  320 CALL KEY ( 0 , K , S )  :: IF S THEN 485
  325 NEXT J 
  330 NEXT I 
  335 CALL KEY ( 0 , K , S )  :: IF S = 1 THEN 485
  340 CALL DELSPRITE ( # 25 , # 26 , # 27 , # 28 ) 
  345 CALL MAGNIFY ( 4 ) 
  350 GOSUB 515
  355 CALL SOUND ( - 4250 , - 5 , 25 ) 
  360 FOR I = 11 TO 20 
  365 I1 = - 1 * ( I / 2 = INT ( I / 2 ) ) 
  370 CALL SPRITE ( # I , 116 + I1 * 16 , 2 , 110 , 111 , RND * - 15 - 5 , RND * 30 - 15 ) 
  375 CALL KEY ( 0 , K , S )  :: IF S = 1 THEN 485
  380 NEXT I 
  385 FOR I = 1 TO 2 
  390 F = 2 
  395 X1 = INT ( RND * - 20 - 5 ) 
  400 Y1 = INT ( 50 * RND - 25 ) 
  405 CALL SPRITE ( # I * 2 - 1 , 92 , F , 193 , 129 , 0 , 0 , # I * 2 , 100 , F , 193 , 161 , 0 , 0 ) 
  410 CALL MOTION ( # I * 2 - 1 , X1 , Y1 , # I * 2 , X1 , Y1 ) 
  415 NEXT I 
  420 FOR I = 1 TO 3 
  425 CALL SOUND ( - 4250 , - 5 , 25 ) 
  430 FOR I1 = 1 TO 8 
  435 PAT = NOT PAT 
  440 FOR J = 11 TO 20 
  445 CALL PATTERN ( # J , 116 - PAT * 16 ) 
  450 NEXT J 
  455 CALL KEY ( 0 , K , S )  :: IF S THEN 485
  460 NEXT I1 
  465 GOSUB 515
  470 NEXT I 
  475 CALL SOUND ( - 4250 , - 5 , 25 ) 
  480 FOR PAUSE = 1 TO 400  :: NEXT PAUSE 
  485 CALL SOUND ( - 1000 , 440 , 5 ) 
  490 CALL CLEAR 
  495 CALL DELSPRITE ( ALL ) 
  500 CALL CHARSET 
  505 CALL SCREEN ( 8 ) 
  510 GOTO 645
  515 READ A$  :: DISPLAY AT ( 1 , 1 )  : A$ 
  520 RETURN 
  525 DATA "    BURG DES SCHRECKENS" , "UEBERWINDEN SIE DIE GEISTER" , "   FINDEN SIE DEN SCHATZ" , "      WERDEN SIE REICH" , "ODER GEHEN SIE ZUR HOELLE" , , 
  530 DATA 104 , 0103070F1F3F7FFF80C0E0F0F8FCFEFFFFFFFFFFFFFFFFFFFF7F3F3F1F0F0301 
  535 DATA 108 , FFFEFCFCF8F0C080 
  540 DATA 96 , FFFFFFFFFFFFFFFF0000000000000000 
  545 DATA 120 , 0101030307070F0F1F1F3F3F7F7FFFFF8080C0C0E0E0F0F0F8F8FCFCFEFEFFFF 
  550 DATA 36 , FCF0E0C0808000003F0F070301010000 
  555 DATA 128 , FFFFFFFFFFFFFFFFFEFCF8F0E0C080007F3F1F0F07030100 
  560 DATA 112 , FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 
  565 DATA 124 , FFFFFFFFFFFF7F7F7F7F3F3F1F0F0701FFFFFFFFFFFFFEFEFEFCFCF8F0E0C080 
  570 DATA 136 , 8383473F1E3C78F8C0C0C070183E4080F0783C3F3C1E0F07601000C07F000080 
  575 DATA 140 , 073860C1613367CEE0E0F8CFC0E038010E1C383838BA747A04060C1830600000 
  580 DATA 116 , 0000000070B90F070102 , 118 , 000000000E9DF0E0804 
  585 DATA 132 , 000000000001070FB972 , 134 , 000000000080E0F09D4E 
  590 DATA 98 , 0000187E99000000000000997E180000 
  595 DATA 100 , 0000000007CCB870E0B01808 , 102 , 00000000C0781E030102 
  600 DATA 92 , 00000000031E78C0804 , 94 , 00000000E0331D0E070D181 
  605 DATA 0 , 0 
  610 DATA "                                                             hi              hi         hjji          hjji" 
  615 DATA "   hjjjji    hi  hjjjji      kjjjjl   hjji kjjjjl       pppp   hjjjji pppp    ````p$%pjjjjjjp$%p````" 
  620 DATA ````pppppppppppppppp````````ppppppp  ppppppp````````ppppp p  p ppppp````````ppppppp pppp ppppppp```` 
  625 DATA ```xpp pp pppppppp pp ppz``````ypp ppppp$  %ppppp pp{`````xapppppppp    ppppppppaz````yapppppppp    ppppppppa{`` 
  630 DATA `xaapppppppp    ppppppppaaz``yaappppppppppppppppaa{``|aaaaaaaaaaaaaaaaaaaa~``}aaaaaaaaaaaaaaaaaaaa` 
  635 DATA ```````````````````````````````````````````````````````````````````````````````````````````````` 
  640 DATA 0 
  645 DISPLAY ERASE ALL AT ( 1 , 1 )  : "SIE SIND IN DER BURG.       DOCH WAS NUN?"  : "SIE STEHEN IN EINEM SAAL VOR" 
  650 DISPLAY AT ( 4 , 1 )  : "7 VERSCHIEDENEN TUEREN."  : "WELCHE TUER IST D. RICHTIGE?VERSUCHEN SIE ES"  : "HERAUSZUFINDEN."  : "SCHAUEN SIE SICH JEDE TUER  GENAU AN !" 
  655 FOR I = 9 TO 14  :: CALL COLOR ( I , 16 , 14 )  :: NEXT I 
  660 RESTORE 685
  665 READ Z , Z$ 
  670 IF Z = 0 THEN 715
  675 CALL CHAR ( Z , Z$ ) 
  680 GOTO 665
  685 DATA 96 , 030F1C3060C0C080FFFF , 98 , C0F0380C060303018080808080808080 
  690 DATA 100 , 000000001C040400000000000000FFFF0101010101010101 
  695 DATA 104 , 000000FEFE7C381 , 105 , 10107C1010101 , 106 , 00669999999966 , 107 , 3E49497F3E001C000000187E99 
  700 DATA 109 , 00386CAAAAAAAAAA545454547C1010100 
  705 DATA 34 , AFFE0123456789EF 
  710 DATA 0 , 0 
  715 FOR I = 10 TO 24  :: CALL HCHAR ( I , 3 , 111 , 28 )  :: NEXT I 
  720 FOR I = 0 TO 6 
  725 IF I < 3 THEN B = 7  :: A = 11  :: J = I ELSE B = 4  :: A = 18  :: J = I - 3 
  730 DISPLAY AT ( A , B + J * 5 + 1 ) SIZE ( 3 )  : "`ab" 
  735 DISPLAY AT ( A + 1 , B + J * 5 ) SIZE ( 5 )  : "foooc" 
  740 DISPLAY AT ( A + 2 , B + J * 5 ) SIZE ( 5 )  : "fo" & CHR$ ( I + 104 ) & "dc" 
  745 DISPLAY AT ( A + 3 , B + J * 5 ) SIZE ( 5 )  : "foooc" 
  750 DISPLAY AT ( A + 4 , B + J * 5 ) SIZE ( 5 )  : "feeec" 
  755 DISPLAY AT ( A + 5 , B + 2 + J * 5 ) SIZE ( 1 )  : STR$ ( I + 1 ) 
  760 NEXT I 
  765 CALL KEY ( 0 , K , S ) 
  770 IF S = 0 THEN 765
  775 CALL HCHAR ( 1 , 1 , 32 , 224 ) 
  780 DISPLAY AT ( 4 , 1 )  : "HABEN SIE SICH ENTSCHIEDEN? DANN GEBEN SIE DIE NUMMER   EIN:" 
  785 ON WARNING NEXT 
  790 ACCEPT AT ( 6 , 5 ) BEEP SIZE ( 1 ) VALIDATE ( "1234567" )  : TUER 
  795 CALL CLEAR 
  800 DISPLAY AT ( 1 , 1 )  : RPT$ ( CHR$ ( 103 + TUER ) & "o" , 14 ) 
  805 ON TUER GOTO 810, 820, 830, 850, 865, 935, 945
  810 DISPLAY AT ( 3 , 1 )  : "SIE SIND IN DEN BURGGRABEN  GEFALLEN UND ERTRUNKEN." 
  815 GOTO 950
  820 DISPLAY AT ( 3 , 1 )  : "DIES WAR DIE TUER ZUM       FRIEDHOF-UND SIE SIND HIER. IHR SARG STEHT SCHON BEREIT!" 
  825 GOTO 950
  830 DISPLAY AT ( 3 , 1 )  : "GLUECK IM UNGLUECK"  : "DIES IST ZWAR NICHT DER     RICHTIGE WEG,ABER DIE       MONSTERTOILETTE WAR NICHT" 
  835 DISPLAY AT ( 7 , 1 )  : "BESETZT;SO SIND SIE MIT     HEILER HAUT DAVONGEKOMMEN." 
  840 FOR PAUSE = 1 TO 2000  :: NEXT PAUSE 
  845 GOTO 645
  850 DISPLAY AT ( 3 , 1 )  : "SIE SIND IN DIE HOEHLE DER  GEISTER GEKOMMEN."  : "DIESE LASSEN SICH IHR"  : "EINDRINGEN NICHT GEFALLEN," 
  855 DISPLAY AT ( 7 , 1 )  : "SIE WERDEN SO ERSCHRECKT,   DAS SIE AN EINEM HERZANFALL STERBEN." 
  860 GOTO 950
  865  ! 
  870 DISPLAY AT ( 3 , 1 )  : "BRAVO,SIE HABEN DIE RICHTIGETUER ERWISCHT."  : "(DAS ZEICHEN AN DER TUER"  : " ZEIGT EINEN VAMPIR,WIE SIE  IHN AM ANFANG SAHEN.)" 
  875 T1 = 2 ^ ( 1 / 12 ) 
  880 T = 440 
  885 FOR I = 0 TO 12 
  890 CALL SOUND ( - 100 , T , 8 ) 
  895 T = T * T1 
  900 NEXT I 
  905 DISPLAY AT ( 9 , 1 )  : "VON NUN AN KOENNEN SIE VIEL GLUECK GEBRAUCHEN !" 
  910 DISPLAY AT ( 22 , 7 )  : "TASTE DRUECKEN" 
  915 CALL KEY ( 0 , K , S ) 
  920 IF S = 0 THEN 915
  925 CALL CLEAR  :: CALL CHARSET 
  930 STOP  ! RUN "CS1"
  935 DISPLAY AT ( 3 , 1 )  : "DIES IST DIE TUER IN DIE    UNTERWELT."  : "SIE WERDEN QUALVOLL BIS IN  ALLE EWIGKEIT GEBRATEN." 
  940 GOTO 950
  945 DISPLAY AT ( 3 , 1 )  : "SIE SIND IN DER FOLTERKAMMERUND STERBEN EINES QUALVOLLENTODES."  : "(SIE WURDEN VON EINEM ZOMBIE ANGEFALLEN.)" 
  950 DISPLAY AT ( 20 , 1 )  : "DAMIT IST DAS SPIEL FUER SIEZUENDE." 
  955 T1 = 2 ^ ( 1 / 12 ) 
  960 T = 880 
  965 FOR I = 0 TO 12 
  970 CALL SOUND ( - 100 , T , 10 ) 
  975 T = T / T1 
  980 NEXT I 
  985 DISPLAY AT ( 23 , 1 )  : "       TASTE DRUECKEN" 
  990 CALL KEY ( 0 , K , S ) 
  995 IF S = 0 THEN 990
 1000 CALL CLEAR 
 1005 END 
