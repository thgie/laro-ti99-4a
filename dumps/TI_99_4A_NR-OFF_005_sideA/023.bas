   10 KE = 15  :: KV = 30  :: MPC = 3  :: HU = - 20  :: HH = 160 
   20 CALL CLEAR  :: CALL SCREEN ( 8 ) 
   30 DISPLAY AT ( 1 , 10 )  : "MOON-PATROL" 
   40 DISPLAY AT ( 5 , 10 )  : "AUGUST 1983" 
   50 DISPLAY AT ( 6 , 10 )  : "STEFAN FUNK" 
   60 DISPLAY AT ( 7 , 8 )  : "AM WALDGRABEN 6" 
   70 DISPLAY AT ( 8 , 10 )  : "6450 HANAU 9" 
   80 DISPLAY AT ( 9 , 5 )  : "TEL.:(06181)-571227" 
   90 DISPLAY AT ( 15 , 1 )  : "MOECHTEN SIE DIE" 
  100 DISPLAY AT ( 16 , 1 )  : "SPIELANLEITUNG (J;N) ?"  :: ACCEPT AT ( 16 , 24 ) BEEP VALIDATE ( "NjJn" ) SIZE ( 1 )  : AN$ 
  110 IF AN$ = "N" OR AN$ = "n" THEN 230
  120 CALL CLEAR  :: DISPLAY AT ( 1 , 9 )  : "*************"  :: DISPLAY AT ( 2 , 9 )  : "*MOON-PATROL*"  :: DISPLAY AT ( 3 , 9 )  : "*************" 
  130 DISPLAY AT ( 4 , 9 )  : "**ANLEITUNG**"  :: DISPLAY AT ( 5 , 9 )  : "*************" 
  140 DISPLAY AT ( 7 , 1 )  : "FAHREN SIE IHREN"  : "MOON-PATROL CAR"  : "UM DEN FREMDEN PLANETEN," 
  150 DISPLAY AT ( 10 , 1 )  : "AUF DEM SIE"  : "GELANDET SIND,"  : "UM IHN ZU ERFORSCHEN." 
  160 DISPLAY AT ( 13 , 1 )  : "GEHEN SIE DABEI JEDER"  : "GEFAHR AUS DEM WEG." 
  170 DISPLAY AT ( 15 , 1 )  : "S T E U E R U N G" 
  180 DISPLAY AT ( 16 , 1 )  : "FERNBEDIENUNG NACH OBEN"  : "SCHUSS NACH OBEN" 
  190 DISPLAY AT ( 19 , 1 )  : "FERNBEDIENUNG NACH UNTEN"  : "HUEPFEN" 
  200 DISPLAY AT ( 22 , 1 )  : "AKTIONSKNOPF DRUECKEN"  : "SCHUSS NACH RECHTS" 
  210 DISPLAY AT ( 24 , 1 )  : "START DES SPIELS" 
  220 CALL KEY ( 1 , A , B )  :: IF A < > 18 THEN 220
  230 RANDOMIZE 
  240 CALL CLEAR  :: CALL SCREEN ( 2 )  :: CALL MAGNIFY ( 4 ) 
  250 CALL CHAR ( 40 , "00000000010103177F633FFF0863F763000000000003FFE0F09CFEFF610C9E0C" ) 
  260 CALL CHAR ( 64 , "000000000020202028FF3F333E333FFF000028107C10381010FFFCCCECCCFCFF" ) 
  270 CALL CHAR ( 56 , "00000000000010804A3002B10470793000000000000004A012C9021218CEEFC6" ) 
  280 CALL CHAR ( 60 , "0000000000000000000000000101010000000000000000000000000000000080" ) 
  290 CALL CHAR ( 44 , "0000000000000000000000001F3B7EFF000000000000000000000000F8FCCEFF" ) 
  300 CALL CHAR ( 48 , "0000100804043FFFFFFF7F2444848488000084488890FCFFFFFFFE2422111224" ) 
  310 CALL CHAR ( 52 , "00000000000000000000000000000000000000000030FE040000000000000000" ) 
  320 CALL CHAR ( 136 , "003C7EFFFF00DBDB" )  :: CALL COLOR ( 14 , 9 , 1 ) 
  330 CALL CHAR ( 128 , "003C7EFFFF00DBDB" ) 
  340 CALL COLOR ( 2 , 15 , 15 , 13 , 4 , 1 ) 
  350 CALL HCHAR ( 21 , 1 , 45 , 128 ) 
  360 CALL SPRITE ( # 1 , 64 , 16 , 129 , 20 ) 
  370 CALL SPRITE ( # 2 , 44 , 15 , 129 , 70 ) 
  380 CALL SPRITE ( # 3 , 44 , 15 , 129 , 184 ) 
  390 CALL MELODY 
  400 CALL SOUND ( - 100 , - 2 , 0 , 110 , 0 )  :: CALL HCHAR ( 2 , 15 , 136 )  :: CALL SOUND ( 200 , 131 , 30 ) 
  410 IF MPC > 1 THEN CALL SOUND ( - 100 , - 2 , 0 , 110 , 0 )  :: CALL HCHAR ( 2 , 17 , 128 )  :: CALL SOUND ( 200 , 131 , 30 ) 
  420 IF MPC > 2 THEN CALL SOUND ( - 100 , - 2 , 0 , 110 , 0 )  :: CALL HCHAR ( 2 , 19 , 128 ) 
  430 FOR I = 1 TO 300  :: NEXT I  :: CALL SOUND ( - 500 , 262 , 0 , 330 , 0 , 392 , 0 )  :: CALL PATTERN ( # 1 , 40 )  :: CALL COLOR ( # 1 , 7 )  :: FOR I = 1 TO 200  :: NEXT I 
  440 CALL MOTION ( # 2 , 0 , HU , # 3 , 0 , HU )  :: X = 129  :: Y = 20 
  450 GOSUB 480
  460 GOSUB 500
  470 GOTO 450
  480 CALL COINC ( ALL , C )  :: IF C THEN 660
  490 RETURN 
  500 Q = Q + 1  :: IF Q = KE THEN GOSUB 650ELSE IF Q = KV THEN GOSUB 850
  510 SCH = SCH + 1  :: IF SCH = 50 THEN GOSUB 860ELSE IF SCH = 100 THEN 890
  520 CALL JOYST ( 1 , A , B )  :: IF B = - 4 THEN 530ELSE CALL KEY ( 1 , N , M )  :: IF N = 18 THEN 600ELSE RETURN 
  530 CALL SOUND ( - 300 , - 5 , 0 )  :: PZ = PZ + 10  :: X = 100  :: CALL LOCATE ( # 1 , X , Y ) 
  540 IF NU = 0 THEN 580
  550 CALL POSITION ( # Z , N , M )  :: IF M < 80 THEN 710
  560 FOR I1 = 1 TO HH / 8  :: GOSUB 670
  570 NEXT I1  :: GOTO 590
  580 FOR I = 1 TO HH  :: NEXT I 
  590 X = 129  :: CALL LOCATE ( # 1 , X , Y )  :: CALL SOUND ( - 300 , - 3 , 0 )  :: RETURN 
  600 CALL SOUND ( - 100 , - 7 , 0 )  :: CALL SPRITE ( # 4 , 52 , 6 , 129 , 45 , 0 , 30 )  :: PZ = PZ - 1 
  610 CALL POSITION ( # 4 , H , W )  :: IF W < 150 THEN GOSUB 480ELSE 640
  620 GOSUB 500
  630 GOTO 610
  640 CALL DELSPRITE ( # 4 )  :: RETURN 
  650 NU = 1  :: Z = INT ( 2 * RND ) + 1  :: Z = Z + 1  :: CALL COLOR ( # Z , 13 )  :: CALL PATTERN ( # Z , 48 )  :: RETURN 
  660 IF NU = 0 THEN 710ELSE 700
  670 CALL COINC ( ALL , C )  :: IF C = 0 THEN RETURN 
  680 PZ = PZ + INT ( PZ / 10 )  :: CALL DELSPRITE ( # 4 )  :: CALL SOUND ( - 100 , 131 , 0 , 247 , 0 , 330 , 0 , - 7 , 0 ) 
  690 FOR I = 2 TO 3  :: CALL PATTERN ( # I , 44 )  :: CALL COLOR ( # I , 15 )  :: NEXT I  :: NU = 0  :: RETURN 
  700 EE = 0  :: FOR I = 2 TO 3  :: CALL COINC ( # 4 , # I , 100 , C )  :: EE = EE + C  :: NEXT I  :: IF EE < 0 THEN PZ = PZ + INT ( PZ / 10 )  :: CALL SOUND ( - 100 , 131 , 0 , 247 , 0 , 330 , 0 , - 7 , 0 )  :: GOTO 730
  710 GOSUB 740
  720 HH = 160  :: Q , NU , SCH = 0  :: KE = 15  :: KV = 30  :: HU = - 20  :: GOTO 360
  730 CALL DELSPRITE ( # 4 )  :: CALL COLOR ( # Z , 15 )  :: CALL PATTERN ( # Z , 44 )  :: Q , NU = 0  :: GOTO 500
  740 FOR I = 1 TO 3  :: CALL SOUND ( - 100 , - 7 , 0 )  :: NEXT I  :: CALL SOUND ( - 100 , - 5 , 0 )  :: CALL SOUND ( - 100 , - 7 , 0 )  :: CALL SOUND ( - 100 , - 7 , 0 ) 
  750 CALL HCHAR ( 2 , 15 , 32 , 6 ) 
  760 CALL PATTERN ( # 1 , 56 )  :: FOR I = 2 TO 4  :: CALL MOTION ( # I , 0 , 0 )  :: NEXT I  :: FOR P = 1 TO 100  :: NEXT P  :: CALL DELSPRITE ( # 1 )  :: FOR I = 1 TO 500  :: NEXT I  :: CALL DELSPRITE ( ALL ) 
  770 MPC = MPC - 1  :: IF MPC < 1 THEN 780ELSE RETURN 
  780 CALL SOUND ( 500 , 196 , 0 )  :: CALL SOUND ( 500 , 196 , 0 )  :: CALL SOUND ( 100 , 196 , 0 )  :: CALL SOUND ( 500 , 196 , 0 ) 
  790 CALL SOUND ( 500 , 233 , 0 )  :: CALL SOUND ( 100 , 220 , 0 )  :: CALL SOUND ( 250 , 220 , 0 ) 
  800 CALL SOUND ( 250 , 196 , 0 )  :: CALL SOUND ( 250 , 196 , 0 ) 
  810 CALL SOUND ( 250 , 185 , 0 )  :: CALL SOUND ( 1000 , 196 , 0 ) 
  820 CALL CLEAR  :: CALL SCREEN ( 11 )  :: CALL CHARSET  :: DISPLAY AT ( 5 , 9 )  : "AUSWERTUNG" 
  830 DISPLAY AT ( 2 , 5 )  : "M O O N - P A T R O L"  :: DISPLAY AT ( 12 , 7 )  : "SIE ERREICHTEN"  :: DISPLAY AT ( 15 , 7 )  : PZ  ; "PUNKTE" 
  840 CALL KEY ( 1 , A , B )  :: IF A = 18 THEN RUN ELSE 840
  850 NU , Q = 0  :: CALL PATTERN ( # Z , 44 )  :: CALL COLOR ( # Z , 15 )  :: RETURN 
  860 CALL SOUND ( 500 , 262 , 0 )  :: CALL SOUND ( 500 , 392 , 0 )  :: Q , NU = 0  :: PZ = PZ * 2  :: KE = 5  :: KV = 20  :: HU = - 25  :: HH = 110  :: CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 ) 
  870 CALL SCREEN ( 4 )  :: CALL DELSPRITE ( # 4 )  :: FOR I = 1 TO 50  :: NEXT I  :: CALL SCREEN ( 2 ) 
  880 CALL SPRITE ( # 2 , 44 , 15 , 129 , 70 )  :: CALL SPRITE ( # 3 , 44 , 15 , 129 , 184 )  :: FOR I = 1 TO 20  :: NEXT I  :: CALL MOTION ( # 2 , 0 , HU , # 3 , 0 , HU )  :: RETURN 
  890 CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 ) 
  900 CALL DELSPRITE ( # 4 )  :: FOR I = 1 TO 10  :: CALL SOUND ( - 100 , 131 , 0 )  :: CALL SCREEN ( 4 )  :: CALL SOUND ( - 100 , 262 , 0 )  :: NEXT I 
  910 CALL SOUND ( 500 , 262 , 0 )  :: CALL SOUND ( 500 , 392 , 0 )  :: PZ = PZ * 2 
  920 CALL SCREEN ( 2 )  :: SCH , NU , KSCH = 0 
  930 FOR I = 2 TO 3  :: CALL DELSPRITE ( # I )  :: NEXT I  :: CALL CHAR ( 44 , "00000000000000000000006003317800000000000000000000000006C0831E00" ) 
  940 FOR I = 1 TO 100  :: NEXT I  :: MSH = INT ( 10 * RND + 1 )  :: MSH = MSH - 40 
  950 CALL SPRITE ( # 1 , 40 , 7 , X , Y , # 2 , 44 , 8 , 129 , 100 , # 3 , 44 , 8 , 129 , 190 ) 
  960 CALL SOUND ( - 500 , 131 , 0 , 262 , 0 ) 
  970 CALL MOTION ( # 2 , 0 , MSH , # 3 , 0 , MSH ) 
  980 CALL COINC ( ALL , C )  :: IF C THEN 1060
  990 SCH = SCH + 1  :: IF SCH = 25 THEN 1040ELSE CALL JOYST ( 1 , A , B )  :: IF B = - 4 THEN 1000ELSE 980
 1000 X = 100  :: CALL SOUND ( - 1000 , - 6 , 0 )  :: CALL LOCATE ( # 1 , X , Y )  :: PZ = PZ + 10 
 1010 FOR I = 1 TO 80  :: NEXT I 
 1020 CALL SOUND ( - 100 , 131 , 0 ) 
 1030 X = 129  :: CALL LOCATE ( # 1 , X , Y ) 
 1040 KSCH = KSCH + 1  :: IF KSCH = 25 THEN 1090
 1050 SCH = 0  :: MSH = INT ( 10 * RND + 1 )  :: MSH = MSH - 40  :: CALL MOTION ( # 2 , 0 , MSH , # 3 , 0 , MSH )  :: GOTO 980
 1060 CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 )  :: FOR J = 1 TO 50  :: NEXT J 
 1070 CALL DELSPRITE ( # 2 , # 3 ) 
 1080 CALL CHAR ( 44 , "0000000000000000000000001F3B7EFF000000000000000000000000F8FCCEFF" )  :: GOTO 710
 1090 CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 )  :: CALL SCREEN ( 4 )  :: FOR I = 1 TO 3  :: FOR S = - 3 TO - 1  :: CALL SOUND ( - 100 , S , 0 )  :: NEXT S  :: NEXT I 
 1100 FOR I = 1 TO 50  :: NEXT I  :: CALL SOUND ( 500 , 262 , 0 )  :: CALL SOUND ( 500 , 392 , 0 )  :: PZ = PZ * 2 
 1110 CALL SCREEN ( 2 ) 
 1120 CALL DELSPRITE ( # 2 , # 3 ) 
 1130 CALL CHAR ( 44 , "0000000000000000000000003F1F0F03000000000000000000000000FCF0C080" ) 
 1140 CALL CHAR ( 108 , "00000000000000000000070C7FFF3F000000000000000000E043FFFEFCFCFE3F" ) 
 1150 SCH , Q = 0  :: DD = 20  :: CALL SPRITE ( # 3 , 108 , 11 , 100 , 180 , # 2 , 44 , 2 , 137 , 190 ) 
 1160 CALL SOUND ( - 500 , 131 , 0 , 262 , 0 ) 
 1170 CALL MOTION ( # 3 , 0 , - 55 , # 2 , 0 , - 20 ) 
 1180 Q = Q + 1  :: IF Q = 20 THEN GOSUB 1290
 1190 DD = DD + 1  :: IF DD = 20 THEN CALL SPRITE ( # 3 , 108 , 11 , 100 , 180 , 0 , - 55 ) 
 1200 CALL POSITION ( # 2 , K , L )  :: IF L < 30 AND K > 15 THEN 1310
 1210 CALL JOYST ( 1 , A , B )  :: IF B = - 4 THEN 1220ELSE IF B = 4 THEN 1260ELSE 1180
 1220 X = 100  :: CALL LOCATE ( # 1 , X , Y )  :: CALL SOUND ( - 500 , - 6 , 0 ) 
 1230 PZ = PZ + 10  :: FOR I = 1 TO 20  :: CALL COINC ( ALL , C )  :: IF C THEN 1310
 1240 NEXT I 
 1250 X = 129  :: CALL LOCATE ( # 1 , X , Y )  :: CALL SOUND ( - 500 , 131 , 0 )  :: GOTO 1180
 1260 PZ = PZ - 1  :: CALL SPRITE ( # 4 , 60 , 14 , 100 , 20 )  :: CALL SOUND ( - 100 , - 7 , 0 , 131 , 0 )  :: CALL POSITION ( # 3 , K , L )  :: IF L < 80 THEN 1270ELSE 1280
 1270 CALL DELSPRITE ( # 4 , # 3 )  :: CALL SOUND ( - 100 , - 7 , 0 , 1480 , 0 , 220 , 0 , 622 , 0 )  :: DD = 0  :: PZ = PZ + 500  :: GOTO 1180
 1280 CALL SOUND ( - 100 , - 1 , 0 )  :: CALL DELSPRITE ( # 4 )  :: GOTO 1180
 1290 Q = 0  :: SCH = SCH + 1  :: IF SCH = 5 THEN 1330ELSE NM = INT ( 100 * RND + 1 )  :: NM = NM + 90  :: CALL SOUND ( - 100 , - 1 , 0 , 262 , 0 ) 
 1300 CALL SPRITE ( # 2 , 44 , 2 , 137 , NM , 0 , - 25 )  :: RETURN 
 1310 CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 )  :: CALL DELSPRITE ( # 4 , # 2 )  :: X = 140  :: CALL LOCATE ( # 1 , X , Y )  :: X = 129 
 1320 CALL SOUND ( - 100 , - 7 , 0 , 131 , 0 , 220 , 0 , 110 , 0 )  :: GOTO 1080
 1330 CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 )  :: CALL SCREEN ( 4 )  :: FOR I = 1 TO 5  :: CALL SOUND ( - 100 , 131 , 0 )  :: CALL SOUND ( - 100 , 262 , 10 )  :: NEXT I 
 1340 CALL SCREEN ( 2 )  :: FOR J = 1 TO 50  :: NEXT J  :: PZ = PZ * 2  :: CALL SOUND ( 500 , 262 , 0 )  :: CALL SOUND ( 500 , 392 , 0 ) 
 1350 CALL DELSPRITE ( # 2 , # 3 , # 4 ) 
 1360 CALL CHAR ( 44 , "00000000000000000000000000C61610C0000000000000000000000030868630" ) 
 1370 CALL SPRITE ( # 2 , 44 , 8 , 129 , 1 ) 
 1380 CALL SPRITE ( # 3 , 44 , 6 , 129 , 80 ) 
 1390 CALL SPRITE ( # 4 , 44 , 5 , 129 , 170 ) 
 1400 CALL SOUND ( - 500 , 262 , 0 , 131 , 0 ) 
 1410 SCH , Q = 0 
 1420 FOR I = 1 TO 100  :: NEXT I  :: CALL MOTION ( # 2 , 0 , - 30 , # 3 , 0 , - 30 , # 4 , 0 , - 30 ) 
 1430 CALL JOYST ( 1 , A , B )  :: IF B = - 4 THEN 1470
 1440 Q = Q + 1  :: IF Q = 5 THEN GOSUB 1500
 1450 CALL COINC ( ALL , C )  :: IF C THEN 1510
 1460 CALL JOYST ( 1 , A , B )  :: IF B = - 4 THEN 1470ELSE 1440
 1470 X = 100  :: CALL SOUND ( - 500 , - 6 , 0 )  :: CALL LOCATE ( # 1 , X , Y ) 
 1480 PZ = PZ + 10  :: FOR I = 1 TO 75  :: NEXT I 
 1490 X = 129  :: CALL SOUND ( - 500 , - 3 , 0 )  :: CALL LOCATE ( # 1 , X , Y )  :: GOTO 1440
 1500 MSH = INT ( 10 * RND ) + 1  :: MSH = MSH - 35  :: CALL MOTION ( # 2 , 0 , MSH , # 3 , 0 , MSH , # 4 , 0 , MSH )  :: Q = 0  :: SCH = SCH + 1  :: IF SCH = 3 THEN 1520ELSE RETURN 
 1510 CALL MOTION ( # 2 , 0 , 0 , # 3 , 0 , 0 , # 4 , 0 , 0 )  :: CALL SOUND ( - 100 , - 7 , 0 , 262 , 0 )  :: CALL DELSPRITE ( # 2 , # 3 , # 4 )  :: GOTO 1080
 1520 FOR I = 2 TO 4  :: CALL MOTION ( # I , 0 , 0 )  :: NEXT I  :: CALL SCREEN ( 4 )  :: FOR I = 1 TO 5  :: CALL SOUND ( - 100 , 131 , 0 )  :: CALL SOUND ( - 100 , 262 , 0 )  :: CALL SOUND ( - 100 , 523 , 0 )  :: NEXT I 
 1530 FOR J = 1 TO 50  :: NEXT J  :: PZ = PZ * 2  :: CALL SOUND ( 500 , 262 , 0 )  :: CALL SOUND ( 500 , 392 , 0 ) 
 1540 CALL SCREEN ( 2 ) 
 1550 CALL DELSPRITE ( # 2 , # 3 , # 4 ) 
 1560 CALL SPRITE ( # 2 , 64 , 8 , 129 , 192 , 0 , - 10 ) 
 1570 CALL POSITION ( # 2 , X , Y )  :: CALL SOUND ( - 300 , - 1 , 0 , 131 , 0 , 220 , 0 )  :: IF Y > 30 THEN 1570
 1580 CALL SOUND ( - 500 , 131 , 0 , 262 , 0 , 523 , 0 )  :: CALL MOTION ( # 2 , 0 , 0 )  :: FOR I = 1 TO 300  :: NEXT I 
 1590 CALL SOUND ( 250 , 262 , 0 , 330 , 0 ) 
 1600 CALL SOUND ( 250 , 294 , 0 , 349 , 0 ) 
 1610 CALL SOUND ( 500 , 330 , 0 , 392 , 0 ) 
 1620 CALL SOUND ( 500 , 262 , 0 , 330 , 0 ) 
 1630 CALL SOUND ( 500 , 349 , 0 , 440 , 0 ) 
 1640 CALL SOUND ( 1000 , 330 , 0 , 392 , 0 ) 
 1650 FOR I = 1 TO 200  :: NEXT I  :: CALL HCHAR ( 2 , 15 , 32 , 6 ) 
 1660 MPC = MPC + 1  :: IF MPC > 3 THEN MPC = 3 
 1670 CALL DELSPRITE ( ALL )  :: CALL CHAR ( 44 , "0000000000000000000000001F3B7EFF000000000000000000000000F8FCCEFF" )  :: GOTO 720
 1680 SUB MELODY 
 1690 FOR I = 1 TO 300  :: NEXT I 
 1700 FOR MEL = 1 TO 3 
 1710 CALL SOUND ( 200 , 130 , 0 , - 1 , 10 ) 
 1720 CALL SOUND ( 200 , 130 , 0 , - 1 , 10 ) 
 1730 CALL SOUND ( 200 , 195 , 0 , - 1 , 10 ) 
 1740 CALL SOUND ( 100 , 130 , 0 , - 1 , 10 ) 
 1750 CALL SOUND ( 250 , 130 , 0 , - 1 , 10 ) 
 1760 CALL SOUND ( 100 , 130 , 0 , - 1 , 10 ) 
 1770 CALL SOUND ( 250 , 130 , 0 , - 1 , 10 ) 
 1780 CALL SOUND ( 200 , 195 , 0 , - 1 , 10 ) 
 1790 CALL SOUND ( 200 , 195 , 0 , - 1 , 10 ) 
 1800 NEXT MEL 
 1810 CALL SOUND ( 200 , 130 , 0 , - 1 , 10 ) 
 1820 FOR I = 1 TO 300  :: NEXT I 
 1830 SUBEND 
