  100 CALL CLEAR 
  110 CALL MAGNIFY ( 4 ) 
  120 CALL CHAR ( 96 , "030C10204141818E8E81414120100C03C03008048282817171818282040830C" ) 
  130 CALL CHAR ( 100 , "0000000020110F5FFF7F3F" , 102 , "0000000000F018FCFFFEFC" ) 
  140 CALL CHAR ( 104 , "00000702071F121FFFFF7F3F" , 106 , "0000000004E830F0FFFEFCF8" ) 
  150 CALL CHAR ( 108 , "000000000307041F0F07" , 110 , "0000000088D060FEFCF8" ) 
  160 CALL CHAR ( 112 , "000000001009071C0F03" , 114 , "00000000C0C0E030E0D" ) 
  170 CALL CHAR ( 116 , "00000000000000010703" , 118 , "0000000000004080E0C0" ) 
  180 CALL CHAR ( 120 , "001209452F1F4F3F3F4F1F2F55091200004488A2E4F8F2FCFCF2F8F4AA9048" ) 
  190 CALL CHAR ( 124 , "021044102A0154AB2B95" , 126 , "04408C508052AE451AA004" ) 
  200 CALL COLOR ( 14 , 6 , 6 ) 
  210 CALL HCHAR ( 9 , 1 , 136 , 512 ) 
  220 FOR SPI = 1 TO 2 
  230 TREF = 0 
  240 CALL SPRITE ( # 2 , 100 , 4 , 120 , 256 , 0 , - 32 ) 
  250 CALL SPRITE ( # 3 , 104 , 15 , 158 , 1 , 0 , 36 ) 
  260 CALL SPRITE ( # 4 , 108 , 12 , 96 , 1 , 0 , 20 ) 
  270 CALL SPRITE ( # 5 , 112 , 16 , 72 , 256 , 0 , - 16 ) 
  280 CALL SPRITE ( # 6 , 116 , 2 , 46 , 1 , 0 , 8 ) 
  290 CALL KEY ( SPI , K , S )  :: IF K < > 18 THEN 290
  300 CALL SPRITE ( # 7 , 120 , 12 , 16 , 1 , 0 , 1 ) 
  310 CALL SPRITE ( # 1 , 96 , 16 , 160 , 120 ) 
  320 CALL JOYST ( SPI , X , Y ) 
  330 IF TREF > 4 THEN CALL NACHT ( 1 )  :: GOTO 460
  340 CALL POSITION ( # 7 , P , Q )  :: IF Q > 250 THEN CALL NACHT ( 0 )  :: GOTO 460
  350 CALL MOTION ( # 1 , - Y * 2 , 2 * X ) 
  360 CALL KEY ( SPI , K , S ) 
  370 IF K < > 18 THEN 320
  380 CALL SOUND ( - 100 , - 1 , 8 ) 
  390 CALL POSITION ( # 1 , P , Q ) 
  400 IF P > 154 AND P < 162 THEN CALL COINC ( # 1 , # 3 , 3 , TRE )  :: IF TRE THEN CALL TREFFER ( 3 )  :: TREF = TREF + 1 ELSE 320
  410 IF P > 116 AND P < 124 THEN CALL COINC ( # 1 , # 2 , 3 , TRE )  :: IF TRE THEN CALL TREFFER ( 2 )  :: TREF = TREF + 1 ELSE 320
  420 IF P > 92 AND P < 100 THEN CALL COINC ( # 1 , # 4 , 2 , TRE )  :: IF TRE THEN CALL TREFFER ( 4 )  :: TREF = TREF + 1 ELSE 320
  430 IF P > 70 AND P < 80 THEN CALL COINC ( # 1 , # 5 , 2 , TRE )  :: IF TRE THEN CALL TREFFER ( 5 )  :: TREF = TREF + 1 ELSE 320
  440 IF P > 44 AND P < 48 THEN CALL COINC ( # 1 , # 6 , 2 , TRE )  :: IF TRE THEN CALL TREFFER ( 6 )  :: TREF = TREF + 1 ELSE 320
  450 GOTO 320
  460 NEXT SPI 
  470 GOTO 220
  480 SUB TREFFER ( X ) 
  490 CALL PATTERN ( # X , 124 ) 
  500 CALL COLOR ( # X , 10 ) 
  510 CALL SOUND ( 700 , - 7 , 7 ) 
  520 FOR T = 1 TO 300 
  530 NEXT T 
  540 CALL DELSPRITE ( # X ) 
  550 SUBEND 
  560 SUB NACHT ( X ) 
  570 IF X THEN 660
  580 CALL SOUND ( 300 , - 2 , 6 ) 
  590 CALL SCREEN ( 2 ) 
  600 CALL DELSPRITE ( # 7 , # 1 ) 
  610 FOR T = 1 TO 13  :: CALL COLOR ( T , 16 , 2 )  :: NEXT T  :: CALL SOUND ( 500 , 131 , 5 )  :: CALL SOUND ( 500 , 123 , 7 )  :: CALL SOUND ( 1000 , 110 , 10 ) 
  620 CALL COLOR ( 14 , 5 , 5 )  :: CALL COLOR ( # 2 , 2 , # 3 , 2 , # 4 , 2 , # 5 , 2 , # 6 , 2 ) 
  630 DISPLAY AT ( 1 , 1 ) BEEP  : "LEIDER IST ES ZU DUNKEL ZUM WEITERKAEMPFEN,WARTEN SIE   DEN MORGEN AB!" 
  640 FOR Z = 1 TO 3000  :: NEXT Z  :: DISPLAY AT ( 1 , 1 )  : RPT$ ( " " , 28 * 3 )  :: CALL SCREEN ( 8 )  :: CALL COLOR ( 14 , 6 , 6 ) 
  650 CALL COLOR ( 1 , 2 , 1 )  :: SUBEXIT 
  660 CALL SOUND ( 500 , 440 , 7 )  :: CALL SOUND ( 500 , 554 , 7 )  :: CALL SOUND ( 500 , 659 , 7 )  :: CALL SOUND ( 1000 , 880 , 7 , 659 , 7 , 554 , 7 ) 
  670 CALL POSITION ( # 7 , P , Q ) 
  680 IF Q > 250 THEN CALL SOUND ( 200 , 440 , 5 )  :: CALL DELSPRITE ( # 1 , # 7 )  :: GOTO 640
  685 GOTO 670
  690 SUBEND 
