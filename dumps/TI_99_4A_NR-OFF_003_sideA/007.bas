   10  !  PROGRAMMIERT VON
   20  !    HORST FRANKE
   60 DISPLAY AT ( 10 , 8 ) ERASE ALL  : "BITTE WARTEN" 
   65 DEF A = ( X + 16 ) / 6.4 - 3 
   70 FOR I = 1 TO 16 
   80 READ B , A$ 
   90 CALL CHAR ( B , A$ ) 
   95 NEXT I 
   96 DIM S1 ( 4 ) 
  100 DATA 96 , 0B070D0F0607070F 
  110 DATA 97 , D0E0B0F060E0E0F0 
  120 DATA 99 , FEFFFFF8FC3E1E0E 
  130 DATA 104 , 7EDBFFBDC37E2466 
  140 DATA 112 , 003C425A5A423600 
  150 DATA 113 , 00246A2A2A240000 
  160 DATA 114 , 0072456515620000 
  170 DATA 120 , FFFF18244281FFFF 
  180 DATA 116 , 58345810383C7E18 
  190 DATA 98 , 7FFFFF1F3F7C7878 
  200 DATA 102 , 427E4242427E4242 
  210 DATA 123 , 00ADA9EDA9290D00 
  220 DATA 124 , 003A2A3A2222A022 
  230 DATA 115 , 3C4299ADAD954238 
  240 DATA 100 , 0F1E3C78783C1E0F 
  250 DATA 101 , F0783C1E1E3C78F0 
  255 RANDOMIZE 
  260 L$ = " " 
  270 CALL CLEAR 
  280 CALL SCREEN ( 2 ) 
  290 FOR I = 1 TO 8  :: CALL COLOR ( I , 11 , 2 )  :: NEXT I 
  300 CALL COLOR ( 9 , 12 , 2 ) 
  310 CALL COLOR ( 10 , 3 , 2 ) 
  320 CALL COLOR ( 11 , 10 , 2 ) 
  330 CALL COLOR ( 12 , 6 , 2 ) 
  340 PRINT "        K O N G"  :  : 
  350 PRINT "RETTEN SIE h DAS MAEDCHEN t AUS DEN HAENDEN DES GORILLAS`a !"  :  : 
  370 PRINT "t   BONUS: 100 PUNKTE" 
  380 PRINT "r   50" 
  390 PRINT "q   10" 
  400 PRINT "s   50 (SPRUNG UEBER FEUER)" 
  410 PRINT  :  : 
  420 PRINT "TASTENBELEGUNG:" 
  430 PRINT "(6) LINKS"  : "(7) RECHTS"  : "(8) RUNTER"  : "(9) HOCH"  : "(0) SPRUNG"  :  : "DRUECKEN SIE EINE TASTE !" 
  435 CALL KEY ( 0 , KEY , STATUS )  :: IF STATUS = 0 THEN 435
  439 HC = 0 
  440 SC , S , LEV , F = 0 
  450 L = 5 
  460 S = S + 1 
  470 M1X = 4 * LEV + S 
  480 CALL CLEAR 
  490 DISPLAY AT ( 1 , 1 )  : "dd"  ; 
  500 DISPLAY AT ( 2 , 1 )  : "ee"  ; 
  510 FOR I = 1 TO M1X 
  520 MX = INT ( I / 8 ) * 4 + 1  :: MY = ( I - INT ( I / 8 ) * 8 ) * 4 + 1 
  530 DISPLAY AT ( MX , MY )  : "`a" 
  540 DISPLAY AT ( MX + 1 , MY )  : "bc" 
  550 CALL SOUND ( 10 , I * 110 , 0 ) 
  560 NEXT I 
  570 DISPLAY AT ( 21 , 0 )  : "...FERTIG ZUR"  ; M1X  ; ". RUNDE!" 
  580 FOR I = 1 TO 300  :: NEXT I 
  590 GOSUB 10000
  600 DISPLAY AT ( 22 , 1 )  : "h:"  ; L 
  610 DISPLAY AT ( 22 , 6 )  : "SCORE:"  ; SC 
  620 DISPLAY AT ( 22 , 18 )  : "HIGH:"  ; HSC 
  630 DISPLAY AT ( 1 , 8 )  : "{}"  ; 
  640 FOR I = 500 TO 300 STEP - 10 
  650 CALL SOUND ( - 3 , I , 0 ) 
  660 NEXT I 
  670 DISPLAY AT ( 1 , 8 )  : "  "  ; 
  680 X = 144  :: Y = 224 
  685 DEF X1 = INT ( X / 8 + .5 ) 
  686 DEF Y1 = INT ( Y / 8 + .5 ) 
  690 CALL SPRITE ( # 1 , 104 , 4 , X , Y ) 
  710 GOSUB 9000
  715 CALL POSITION ( # 1 , X , Y ) 
  720 DISPLAY AT ( 22 , 3 )  : L  ; 
  730 DISPLAY AT ( 22 , 12 )  : SC  ; 
  740 DISPLAY AT ( 22 , 23 )  : HSC  ; 
  745 IF S1 ( 0 ) < > S THEN CALL FASS ( S1 ( 0 ) , 16 , 88 , 0 , 6 ) 
  750 IF S1 ( 1 ) < > S THEN CALL FASS ( S1 ( 1 ) , 48 , 232 , 0 , - 6 ) 
  760 IF S1 ( 2 ) < > S THEN CALL FASS ( S1 ( 2 ) , 80 , 1 , 0 , 6 ) 
  770 IF S1 ( 3 ) < > S THEN CALL FASS ( S1 ( 3 ) , 112 , 232 , 0 , - 6 ) 
  780 IF S1 ( 4 ) < > S THEN CALL FASS ( S1 ( 4 ) , 144 , 1 , 0 , 6 ) 
  800 IF L$ < > "1" THEN CALL TREFFEN ( X , F , A , S ) 
  810 IF F < > 1 THEN 710
  820 CALL CLEAR 
  830 CALL DELSPRITE ( ALL ) 
  840 L = L - 1 
  850 IF L = 0 THEN 2000
  860 F = 0 
  870 FOR I = 0 TO 4 
  880 S1 ( I ) = 0 
  890 NEXT I 
  900 L$ = " " 
  910 ST$ = " " 
  920 GOTO 470
  999 CALL KEY ( 0 , KEY , STATUS )  :: IF STATUS = 0 THEN 999
 1000 STOP 
 2000 CALL HIGH ( SC , HSC ) 
 2010 CALL FRAGE ( W ) 
 2020 IF W = 1 THEN S = 0  :: GOTO 440
 2030 END 
 3995 IF KEY < > 113 THEN 820
 4000 DISPLAY AT ( 10 , 10 ) ERASE ALL  : "PRIMA"  ; M1X  ; ".TE RUNDE" 
 4020 FOR I = 1 TO 300 
 4025 NEXT I 
 4030 CALL DELSPRITE ( ALL ) 
 4035 SC = SC + S * 100 
 4040 IF S = 5 THEN 5000
 4050 GOTO 460
 5000 CALL CLEAR 
 5010 DISPLAY AT ( 10 , 3 )  : "NUN IST SIE ENDGUELTIG" 
 5020 DISPLAY AT ( 12 , 10 )  : "BEFREIT" 
 5030 FOR I = 1 TO 1000  :: NEXT I 
 5040 GOTO 2000
 9000 CALL KEY ( 0 , KEY , STATUS ) 
 9010 IF KEY > 53 AND KEY < 58 THEN ON KEY - 53 GOTO 11000, 12000, 13000, 14000
 9020 IF KEY = 48 THEN 15000
 9030 RETURN 
10000 CALL CLEAR 
10020 DISPLAY AT ( 1 , 6 )  : "x"  ; 
10030 DISPLAY AT ( 2 , 6 )  : "xxxx"  ; 
10040 DISPLAY AT ( 3 , 6 )  : "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"  ; 
10050 DISPLAY AT ( 4 , 0 )  : "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"  ; 
10060 DISPLAY AT ( 8 , 0 )  : "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"  ; 
10070 DISPLAY AT ( 12 , 0 )  : "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"  ; 
10080 DISPLAY AT ( 16 , 0 )  : "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"  ; 
10090 DISPLAY AT ( 20 , 0 )  : "xxxxxxxxxxxxxxxxxxxxxxxxxxxx"  ; 
10100 DISPLAY AT ( 2 , 0 )  : "pp"  ; 
10110 DISPLAY AT ( 3 , 0 )  : "pp"  ; 
10120 DISPLAY AT ( 2 , 3 )  : "`a"  ; 
10130 DISPLAY AT ( 3 , 3 )  : "bc"  ; 
10140 DISPLAY AT ( 1 , 7 )  : "t"  ; 
10145 RESTORE 10180
10150 READ B , C , A$ 
10160 IF B = 0 THEN 10180
10170 DISPLAY AT ( B , C )  : A$  ;  :: GOTO 10150
10180 DATA 5 , 8 , r , 9 , 2 , r , 15 , 17 , s 
10190 DATA 13 , 4 , r , 13 , 28 , r , 17 , 4 , r 
10200 DATA 17 , 17 , r , 17 , 28 , r , 5 , 23 , q 
10210 DATA 9 , 12 , q , 13 , 14 , q , 17 , 10 , q 
10220 DATA 17 , 23 , q , 3 , 9 , q , 0 , 0 , ende 
10230 FOR I = 5 TO 7  :: DISPLAY AT ( I , 23 )  : "f"  ;  :: DISPLAY AT ( I , 26 )  : "f"  ;  :: NEXT I 
10240 FOR I = 9 TO 11  :: DISPLAY AT ( I , 4 )  : "f"  ;  :: DISPLAY AT ( I , 8 )  : "f"  ;  :: NEXT I 
10250 FOR I = 13 TO 15  :: DISPLAY AT ( I , 26 )  : "f"  ;  :: NEXT I 
10260 FOR I = 17 TO 19  :: DISPLAY AT ( I , 7 )  : "f"  ;  :: NEXT I 
10270 RETURN 
11000 IF L$ = "1" THEN RETURN 
11015 CALL GCHAR ( X1 + 1 , Y1 , KEY ) 
11020 CALL MOTION ( # 1 , 0 , - 8 ) 
11025 CALL SOUND ( 50 , 150 , 0 ) 
11030 CALL TREFFEN ( X , F , A , S ) 
11040 IF F = 1 THEN 820
11050 CALL MOTION ( # 1 , 0 , 0 ) 
11060 CALL POSITION ( # 1 , X , Y ) 
11065 IF KEY < > 32 AND KEY < > 102 THEN 3995
11070 ST$ = "6" 
11080 CALL GCHAR ( X1 + 2 , Y1 + 1 , KEY ) 
11090 IF KEY < > 120 THEN 15200
11100 RETURN 
12000 IF L$ = "1" THEN RETURN 
12010 CALL GCHAR ( X1 + 1 , Y1 + 2 , KEY ) 
12020 CALL MOTION ( # 1 , 0 , 8 ) 
12025 CALL SOUND ( 50 , 150 , 0 ) 
12030 CALL TREFFEN ( X , F , A , S ) 
12040 IF F = 1 THEN 820
12050 CALL MOTION ( # 1 , 0 , 0 ) 
12060 CALL POSITION ( # 1 , X , Y ) 
12065 IF KEY < > 32 AND KEY < > 102 THEN 3995
12070 ST$ = "7" 
12080 CALL GCHAR ( X1 + 2 , Y1 + 1 , KEY ) 
12090 IF KEY < > 120 THEN 15200
12100 RETURN 
13000 CALL GCHAR ( X1 + 3 , Y1 + 1 , KEY ) 
13010 IF L$ = "1" THEN IF KEY = 120 THEN 13300
13020 IF KEY < > 102 THEN RETURN 
13025 L$ = "1" 
13030 CALL MOTION ( # 1 , 20 , 0 ) 
13035 CALL SOUND ( 50 , 2000 , 0 ) 
13060 CALL MOTION ( # 1 , 0 , 0 ) 
13080 RETURN 
13300 L$ = " " 
13310 RESTORE 13370
13320 READ V 
13330 IF V < X THEN 13320
13340 CALL DELSPRITE ( # 1 ) 
13345 FOR I = 1000 TO 600 STEP - 200  :: CALL SOUND ( - 10 , I , 0 )  :: NEXT I 
13350 CALL SPRITE ( # 1 , 104 , 4 , V , Y , 0 , 0 ) 
13360 X = V  :: RETURN 
14000 CALL GCHAR ( X1 + 1 , Y1 + 1 , KEY ) 
14020 IF L$ = "1" THEN IF KEY = 120 THEN 14300
14030 IF KEY < > 102 THEN RETURN 
14040 L$ = "1" 
14050 CALL MOTION ( # 1 , - 20 , 0 ) 
14055 CALL SOUND ( 50 , 2000 , 0 ) 
14080 CALL MOTION ( # 1 , 0 , 0 ) 
14100 RETURN 
14300 L$ = " " 
14310 RESTORE 14370
14320 READ V 
14330 IF V > X THEN 14320
14345 FOR I = 600 TO 1000 STEP 200  :: CALL SOUND ( - 10 , I , 0 )  :: NEXT I 
14350 CALL SPRITE ( # 1 , 104 , 4 , V , Y , 0 , 0 ) 
14360 X = V  :: IF V = 1 THEN 4000ELSE RETURN 
14370 DATA 144 , 112 , 80 , 48 , 16 , 1 
15000 IF L$ = "1" THEN RETURN 
15005 SE = 0 
15010 IF ST$ = "6" THEN SE = - 8 
15020 IF ST$ = "7" THEN SE = 8 
15023 IF SE = - 8 THEN CALL GCHAR ( X1 + 1 , Y1 , KEY )  :: IF KEY < > 32 THEN GOSUB 15700
15025 IF SE = 8 THEN CALL GCHAR ( X1 + 1 , Y1 + 2 , KEY )  :: IF KEY < > 32 THEN GOSUB 15700
15030 CALL MOTION ( # 1 , 0 , 0 ) 
15060 CALL GCHAR ( X1 - 1 , Y1 + 1 , KEY ) 
15070 IF KEY = 114 THEN SC = SC + 50  :: CALL HCHAR ( X1 - 1 , Y1 + 1 , 32 ) 
15080 IF KEY = 113 THEN SC = SC + 10  :: CALL HCHAR ( X1 - 1 , Y1 + 1 , 32 ) 
15090 CALL MOTION ( # 1 , - 5 , SE ) 
15095 FOR I = 550 TO 500 STEP - 10  :: CALL SOUND ( - 10 , I , 0 )  :: NEXT I 
15100 CALL POSITION ( # 1 , X2 , Y2 ) 
15110 CALL GCHAR ( X / 8 + 2 , Y2 / 8 + 1 , KEY ) 
15120 IF KEY < > 120 THEN 15200
15125 CALL POSITION ( # 1 , X2 , Y2 ) 
15130 CALL DELSPRITE ( # 1 ) 
15140 CALL SPRITE ( # 1 , 104 , 4 , X , Y2 , 0 , 0 ) 
15150 Y = Y2 
15153 CALL GCHAR ( X1 , Y1 , KEY ) 
15156 IF KEY < > 32 THEN IF KEY < > 120 THEN 820
15160 RETURN 
15200 CALL MOTION ( # 1 , 32 , 0 ) 
15205 FOR I = 210 TO 110 STEP - 10 
15210 CALL SOUND ( - 110 , - 7 , 5 , I , 0 ) 
15215 NEXT I 
15220 GOTO 820
15700 IF KEY = 115 THEN SC = SC + 50 
15710 RETURN 
15730 END 
16000 SUB FASS ( S , A , B , C , D ) 
16005 DEF E = ( A + 16 ) / 6.4 - 4 
16010 FRAGE = INT ( RND * 10 ) 
16020 IF FRAGE > 1 THEN SUBEXIT 
16025 S = S + 1 
16030 CALL SPRITE ( # ( E + S + 1 ) , 112 , INT ( RND * 14 ) + 3 , A , B , C , D ) 
16040 SUBEND 
17000 SUB TREFFEN ( X , F , A , S ) 
17005 CALL KEY ( 0 , KEY , STATUS )  :: IF KEY = 48 THEN 17050
17010 FOR I = A TO A + S 
17020 CALL COINC ( # 1 , # I , 10 , ST ) 
17030 IF ST THEN F = 1  :: SUBEXIT 
17040 NEXT I 
17050 IF X = 1 THEN IF S = 5 THEN 5000
17060 IF X = 1 THEN 4000
17070 SUBEND 
18000 SUB HIGH ( S , H ) 
18010 IF S < = H THEN DISPLAY AT ( 10 , 1 ) ERASE ALL  : "SIE HABEN KLAEGLICH VERSAGT"  :: SUBEXIT 
18020 DISPLAY AT ( 10 , 7 ) ERASE ALL  : "NEUER HIGHSCORE" 
18030 H = S 
18040 L = LEN ( STR$ ( H ) ) 
18050 DISPLAY AT ( 12 , INT ( ( 28 - L ) / 2 ) )  : H 
18060 CALL SOUND ( 300 , 262 , 4 , 784 , 2 , 1319 , 0 ) 
18070 CALL SOUND ( 300 , 330 , 4 , 988 , 2 , 1661 , 0 ) 
18080 CALL SOUND ( 300 , 392 , 4 , 1047 , 2 , 1977 , 0 ) 
18090 CALL SOUND ( 300 , 523 , 4 , 1568 , 2 , 2639 , 0 ) 
18100 FOR I = 1 TO 100  :: NEXT I 
18110 SUBEND 
18120 SUB FRAGE ( W ) 
18130 DISPLAY AT ( 14 , 2 )  : "WOLLEN SIE NOCHMAL? (J/N)" 
18140 CALL KEY ( 0 , KEY , STATUS ) 
18150 IF KEY = 74 THEN W = 1  :: SUBEXIT 
18160 IF KEY = 78 THEN W = 0  :: SUBEXIT 
18170 GOTO 18140
18180 SUBEND 
