    5 CALL DELSPRITE ( ALL )  :: CALL CLEAR 
   10 PUN = 0 
   15 H$ = "1C3E7FFFFFFFFFFF7F3F1F0F07030101387CFEFFFFFFFFFFFEFCF8F0E0C08080"  :: CALL CHAR ( 96 , H$ ) 
   20 M$ = "E0C1A21408141213131408030302020C869F89C5A69C9F0FFF3F7EFC18387EE3"  :: CALL CHAR ( 100 , M$ ) 
   25 MM$ = "05030201003FC3010103030704040C0080C040CC88F8C0C0C0E0E02020202030"  :: CALL CHAR ( 36 , MM$ ) 
   30 F$ = "838387891147BD87C3733F1F000000000189D1A205C971C1C3E6FEB0909090D8"  :: CALL CHAR ( 104 , F$ ) 
   35 FF$ = "01330D0031120F01030307070202020CC080C080F0ABC6C1C0E0E0F010101800"  :: CALL CHAR ( 40 , FF$ ) 
   40 GW$ = "0E3F7EFFFF7F7E3E3E3F3F3F1F0F070700F0F8FEFFFF732303078EDFFFFEFCC8"  :: CALL CHAR ( 108 , GW$ ) 
   45 KW$ = "0F7F7FF3F0F0787C7E7F7F3F0F030000C0FEFF9F1F1F3F7FFFFFFFFFFFC78000"  :: CALL CHAR ( 112 , KW$ ) 
   50 KW1$ = "030FFFFFFFFFFFFFFFFFFFF0E0C08000E0F0E0E0F8FCFEFFFFFF0F0E04000000"  :: CALL CHAR ( 132 , KW1$ ) 
   55 MS$ = "0107C221100F0301010303010101030080C0404080B0D0D0C8ECE060404040C0"  :: CALL CHAR ( 116 , MS$ ) 
   60 FS$ = "01030508310207090B13070701010101C080C688F8A0C0C0C0E0E06040406080"  :: CALL CHAR ( 120 , FS$ ) 
   65 CALL MAGNIFY ( 3 ) 
   70 CALL CLEAR 
   75 P$ = "E0C0A01008040201000000000000000000000000000000000000000000000000"  :: CALL CHAR ( 124 , P$ ) 
   80 CALL CHAR ( 94 , "FFFFFFFFFFFFFFFF" ) 
   85 CALL CHAR ( 81 , "FFFFFFFFFFFFFFFF" ) 
   90 CALL CHAR ( 33 , "FFFFFFFFFFFFFFFF" ) 
   95 CALL CHAR ( 34 , "8080808080808080" ) 
  100 CALL CHAR ( 35 , "0101010101010101" ) 
  105 CALL CLEAR  :: CALL DELSPRITE ( ALL ) 
  110 M$ = "    AMOR" 
  115 AUT$ = "               PROGRAMMIERT:                J.UFERMANN" 
  120 ID$ = "               IDEE        :                W.UFERMANN" 
  125 CALL SCREEN ( 2 )  :: CALL MAGNIFY ( 4 ) 
  130 CALL COLOR ( 2 , 7 , 2 , 4 , 7 , 2 , 0 , 14 , 2 ) 
  135 CALL CHAR ( 136 , RPT$ ( "9" , 64 ) )  :: CALL CHAR ( 127 , "3C4299A1A199423C" ) 
  140 FOR N = 5 TO 12  :: CALL COLOR ( N , 14 , 1 )  :: NEXT N  :: DISPLAY AT ( 15 , 16 )  : CHR$ ( 127 ) & "PROGRAMM BY"  :: DISPLAY AT ( 17 , 16 )  : AUT$ 
  145 DISPLAY AT ( 20 , 15 )  : ID$ 
  150 DISPLAY AT ( 8 , 16 )  : M$ 
  155 FOR N = 1 TO 25  :: CALL SPRITE ( # N , 136 , 1 , 230 , 60 + 35 * SIN ( N / 4 ) , 0 , 0 )  :: NEXT N 
  160 FOR N = 1 TO 25  :: CALL MOTION ( # N , 30 , 0 )  :: CALL COLOR ( # N , INT ( N / 2 ) + 3 )  :: NEXT N 
  165 FOR I = 1 TO 500  :: NEXT I 
  170 PRINT "   ANWEISUNGEN NOETIG <J/N> " 
  175 ACCEPT AT ( 23 , 28 ) BEEP VALIDATE ( "JN" )  : R$  :: IF R$ = "N" THEN 390
  180 CALL CLEAR  :: CALL DELSPRITE ( ALL )  :: CALL SCREEN ( 2 ) 
  185 CALL COLOR ( 3 , 14 , 2 ) 
  190 PRINT " -AMOR-AMOR-AMOR-AMOR-AMR-"  :  : 
  195 PRINT "- SIE SIND AMOR, DER GOTT     DER LIEBE UND WOLLEN DIE    SCHOENE AUF DER SCHAUKEL    EROBERN." 
  200 PRINT  : "- DAZU MUESSEN SIE ALLE       HERZEN MIT IHREM LIEBES-    PFEIL ABSCHIESSEN. WENN     ALLE HERZEN GETROFFEN       SIND,HABEN SIE" 
  205 PRINT "  IHRE ZUNEIGUNG GEWONNEN." 
  210 PRINT  : "  --EINE BELOHNUNG WINKT--" 
  215 PRINT "- DURCH SCHUSSWINKEL-EINGABE  <1-24> KOENNEN SIE IHREN    PFEIL STEUERN." 
  220 PRINT  :  : "         VIEL GLUECK" 
  225 VV = 200  :: H = 400  :: DV = 600  :: TC = 131  :: TH = 123  :: TE = 165  :: TG = 196  :: TF = 175  :: EE = 330  :: FF = 349  :: GG = 392  :: CC = 262  :: DD = 294  :: XX = 1 
  230 FOR I = 1 TO 2 
  235 CALL SOUND ( H , TC , 0 , EE , 0 ) 
  240 CALL SOUND ( VV , TE , 0 ) 
  245 CALL SOUND ( VV , TG , 0 , EE , 0 ) 
  250 CALL SOUND ( H , TC , 0 , GG , 0 ) 
  255 CALL SOUND ( VV , TE , 0 ) 
  260 CALL SOUND ( VV , TG , 0 ) 
  265 CALL SOUND ( H , TC , 0 , CC , 0 ) 
  270 CALL SOUND ( VV , TE , 0 ) 
  275 CALL SOUND ( VV , TG , 0 , DD , 0 ) 
  280 CALL SOUND ( H , TC , 0 , EE , 0 ) 
  285 CALL SOUND ( VV , TE , 0 ) 
  290 CALL SOUND ( VV , TG , 0 ) 
  295 CALL SOUND ( H , TH , 0 , GG , 0 ) 
  300 CALL SOUND ( VV , TF , 0 ) 
  305 CALL SOUND ( VV , TG , 0 , DD , 0 ) 
  310 CALL SOUND ( H , TH , 0 , GG , 0 ) 
  315 CALL SOUND ( VV , TF , 0 ) 
  320 CALL SOUND ( VV , TG , 0 , GG , 0 ) 
  325 IF XX = 2 THEN 370ELSE 330
  330 CALL SOUND ( H , TC , 0 , EE , 0 ) 
  335 CALL SOUND ( VV , TE , 0 ) 
  340 CALL SOUND ( VV , TG , 0 , DD , 0 ) 
  345 CALL SOUND ( H , TC , 0 , CC , 0 ) 
  350 CALL SOUND ( VV , TE , 0 ) 
  355 CALL SOUND ( VV , TG , 0 ) 
  360 XX = XX + 1 
  365 NEXT I 
  370 CALL SOUND ( H , TC , 0 , CC , 0 ) 
  375 CALL SOUND ( VV , TE , 0 ) 
  380 CALL SOUND ( VV , TG , 0 , EE , 0 ) 
  385 CALL SOUND ( DV , TC , 0 , CC , 0 )  :: CALL CLEAR  :: DISPLAY AT ( 12 , 5 ) SIZE ( 22 )  : "PS. SIE HABEN 8 PFEILE" 
  386 FOR I = 1 TO 800  :: NEXT I 
  390 CALL CLEAR  :: CALL DELSPRITE ( ALL )  :: CALL SCREEN ( 5 ) 
  395 CALL CHAR ( 127 , "" ) 
  400 CALL COLOR ( 1 , 15 , 1 , 5 , 2 , 1 , 6 , 2 , 1 , 7 , 2 , 1 , 8 , 3 , 3 ) 
  405 CALL MAGNIFY ( 3 ) 
  410 CALL HCHAR ( 23 , 1 , 81 , 32 ) 
  415 CALL HCHAR ( 22 , 10 , 81 , 9 ) 
  420 CALL HCHAR ( 22 , 30 , 81 , 3 ) 
  425 CALL HCHAR ( 21 , 10 , 33 , 6 ) 
  430 CALL VCHAR ( 11 , 14 , 33 , 11 ) 
  435 CALL VCHAR ( 11 , 13 , 33 , 11 ) 
  440 CALL VCHAR ( 17 , 12 , 33 , 5 ) 
  445 CALL HCHAR ( 20 , 11 , 33 ) 
  450 CALL HCHAR ( 14 , 12 , 33 ) 
  455 CALL HCHAR ( 11 , 12 , 33 ) 
  460 CALL HCHAR ( 13 , 9 , 33 , 3 ) 
  465 CALL HCHAR ( 10 , 11 , 94 , 4 ) 
  470 CALL HCHAR ( 9 , 11 , 94 , 5 ) 
  475 CALL HCHAR ( 8 , 9 , 94 , 8 ) 
  480 CALL HCHAR ( 7 , 9 , 94 , 14 ) 
  485 CALL HCHAR ( 6 , 8 , 94 , 18 ) 
  490 CALL HCHAR ( 5 , 8 , 94 , 18 ) 
  495 CALL HCHAR ( 4 , 1 , 94 , 31 ) 
  500 CALL HCHAR ( 1 , 1 , 94 , 95 ) 
  505 CALL HCHAR ( 2 , 1 , 94 , 32 ) 
  510 CALL HCHAR ( 3 , 1 , 94 , 31 )  :: CALL HCHAR ( 20 , 17 , 33 , 2 ) 
  515 CALL SPRITE ( # 1 , 96 , 7 , 50 , 80 , 0 , 4 , # 2 , 96 , 7 , 28 , 72 , 0 , 4.4 , # 3 , 96 , 7 , 32 , 112 , 0 , 3.9 , # 4 , 96 , 7 , 24 , 152 , 0 , 4.9 ) 
  520 CALL SPRITE ( # 5 , 96 , 7 , 24 , 216 , 0 , 4 , # 7 , 104 , 16 , 146 , 129 , # 9 , 108 , 16 , 64 , 100 , 0 , 2 , # 10 , 112 , 16 , 73 , 200 , 0 , 2.5 ) 
  525 CALL SPRITE ( # 11 , 132 , 16 , 73 , 215 , 0 , 2.5 , # 14 , 108 , 16 , 60 , 150 , 0 , 1.4 , # 8 , 100 , 16 , 152 , 232 , # 16 , 112 , 16 , 48 , 1 , 0 , 1 ) 
  530 CALL SPRITE ( # 15 , 132 , 16 , 48 , 16 , 0 , 1 , # 17 , 96 , 7 , 16 , 184 , 0 , 5 , # 18 , 96 , 7 , 84 , 88 , 0 , 5 ) 
  535 CALL VCHAR ( 8 , 17 , 34 , 12 )  :: CALL HCHAR ( 2 , 5 , 33 )  :: CALL HCHAR ( 3 , 6 , 33 ) 
  540 CALL HCHAR ( 2 , 22 , 33 , 5 )  :: CALL HCHAR ( 3 , 20 , 33 , 2 )  :: CALL HCHAR ( 4 , 18 , 33 , 2 )  :: CALL HCHAR ( 5 , 17 , 33 ) 
  545 CALL VCHAR ( 8 , 18 , 35 , 12 )  :: CALL HCHAR ( 1 , 17 , 33 )  :: CALL HCHAR ( 2 , 16 , 33 )  :: CALL HCHAR ( 3 , 15 , 33 ) 
  550 CALL HCHAR ( 24 , 5 , 81 , 28 )  :: CALL HCHAR ( 6 , 11 , 33 )  :: CALL HCHAR ( 7 , 12 , 33 )  :: CALL HCHAR ( 8 , 13 , 33 ) 
  555 CALL COLOR ( 4 , 2 , 1 , 5 , 2 , 1 )  :: PF = 8 
  560 DISPLAY AT ( 1 , 1 )  : "PUNKTE"  ; PUN  :: DISPLAY AT ( 1 , 19 )  : "PFEILE:"  ; PF  :: IF PUN > = 350 THEN 740
  565 CALL DELSPRITE ( # 13 )  :: DISPLAY AT ( 24 , 1 )  : "WINKEL: "  :: CALL SPRITE ( # 13 , 124 , 2 , 152 , 232 ) 
  570 IF PF < 1 THEN 945 :: ACCEPT AT ( 24 , 8 ) SIZE ( 2 ) BEEP VALIDATE ( DIGIT )  : W 
  571 IF W > 24 THEN 570
  575 PF = PF - 1  :: CALL HCHAR ( 24 , 1 , 81 , 32 ) 
  580 V0 = 47 
  585 X = - 70  :: T = 0 
  590 V = V0 + X * T 
  595 CALL MOTION ( # 13 , - V , - W ) 
  600 IF - V > V0 THEN 560
  605 CALL COINC ( # 13 , # 1 , 13 , A ) 
  610 IF A = 0 THEN 620
  615 CALL DELSPRITE ( # 13 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: CALL DELSPRITE ( # 1 )  :: PUN = PUN + 50  :: GOTO 560
  620 CALL COINC ( # 13 , # 2 , 13 , B ) 
  625 IF B = 0 THEN 635
  630 CALL DELSPRITE ( # 13 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: CALL DELSPRITE ( # 2 )  :: PUN = PUN + 50  :: GOTO 560
  635 CALL COINC ( # 13 , # 3 , 13 , C ) 
  640 IF C = 0 THEN 650
  645 CALL DELSPRITE ( # 3 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: PUN = PUN + 50  :: CALL DELSPRITE ( # 13 )  :: GOTO 560
  650 CALL COINC ( # 13 , # 4 , 13 , D ) 
  655 IF D = 0 THEN 665
  660 CALL DELSPRITE ( # 4 )  :: CALL DELSPRITE ( # 13 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: PUN = PUN + 50  :: GOTO 560
  665 CALL COINC ( # 13 , # 5 , 13 , E ) 
  670 IF E = 0 THEN 680
  675 CALL DELSPRITE ( # 5 , # 13 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: PUN = PUN + 50  :: GOTO 560
  680 CALL COINC ( # 13 , # 17 , 13 , F ) 
  685 IF F = 0 THEN 695
  690 CALL DELSPRITE ( # 17 , # 13 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: PUN = PUN + 50  :: GOTO 560
  695 CALL COINC ( # 13 , # 18 , 13 , G ) 
  700 IF G = 0 THEN 710
  705 CALL DELSPRITE ( # 13 , # 18 )  :: PUN = PUN + 50  :: CALL SOUND ( 100 , - 6 , 0 )  :: GOTO 560
  710 CALL COINC ( # 13 , # 2 , 13 , H )  :: IF H = 0 THEN 720
  715 CALL DELSPRITE ( # 13 , # 2 )  :: CALL SOUND ( 100 , - 6 , 0 )  :: PUN = PUN + 50  :: GOTO 560
  720  ! 
  725 IF - V > V0 THEN CALL DELSPRITE ( # 13 )  :: GOTO 560
  730 T = T + .3 
  735 GOTO 590
  740 CALL DELSPRITE ( # 1 , # 2 , # 3 , # 4 , # 5 , # 6 , # 7 , # 8 , # 13 , # 18 , # 17 ) 
  745 CALL SPRITE ( # 20 , 120 , 16 , 160 , 176 , # 21 , 116 , 16 , 160 , 192 ) 
  750  ! 
  755 GA = 1150  :: DR = 900  :: HA = 750  :: VI = 400  :: AC = 275 
  760 CALL SOUND ( DR , 196 , 2 , 156 , 2 ) 
  765 CALL SOUND ( 25 , 14000 , 30 ) 
  770 CALL SOUND ( DR , 196 , 2 , 156 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  775 CALL SOUND ( 25 , 14000 , 30 ) 
  780 CALL SOUND ( AC , 196 , 2 , 156 , 2 ) 
  785 CALL SOUND ( AC , 175 , 2 , 147 , 2 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  790 CALL SOUND ( AC , 196 , 2 , 156 , 2 ) 
  795 CALL SOUND ( 500 , 233 , 2 , 196 , 2 ) 
  800 CALL SOUND ( AC , 208 , 2 , 175 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  805 CALL SOUND ( DR , 175 , 2 , 147 , 2 ) 
  810 CALL SOUND ( DR , 175 , 2 , 147 , 2 ) 
  815 CALL SOUND ( AC , 175 , 2 , 147 , 2 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  820 CALL SOUND ( AC , 233 , 2 , 147 , 2 ) 
  825 CALL SOUND ( AC , 208 , 2 , 147 , 2 ) 
  830 CALL SOUND ( VI , 196 , 2 , 156 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  835 CALL SOUND ( AC , 14000 , 30 ) 
  840 CALL SOUND ( DR , 196 , 2 , 156 , 2 ) 
  845 CALL SOUND ( 25 , 1400 , 30 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  850 CALL SOUND ( DR , 196 , 2 , 156 , 2 ) 
  855 CALL SOUND ( 25 , 14000 , 30 )  :: CALL SOUND ( AC , 196 , 2 , 156 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  860 CALL SOUND ( AC , 175 , 2 , 147 , 2 ) 
  865 CALL SOUND ( AC , 196 , 2 , 156 , 2 )  :: CALL SOUND ( VI , 233 , 2 , 196 , 2 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  870 CALL SOUND ( AC , 208 , 2 , 175 , 2 ) 
  875 CALL SOUND ( AC , 175 , 2 , 147 , 2 )  :: CALL SOUND ( AC , 196 , 2 , 156 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  880 CALL SOUND ( AC , 208 , 2 , 175 , 2 ) 
  885 CALL SOUND ( AC , 262 , 2 , 175 , 2 )  :: CALL SOUND ( AC , 233 , 2 , 196 , 2 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  890 CALL SOUND ( AC , 208 , 2 , 156 , 2 ) 
  895 CALL SOUND ( DR , 196 , 2 , 156 , 2 )  :: CALL SOUND ( DR , 233 , 2 , 156 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  900 CALL SOUND ( AC , 14000 , 30 ) 
  905 CALL SOUND ( DR , 262 , 2 , 156 , 2 )  :: CALL SOUND ( DR , 233 , 2 , 156 , 2 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  910 CALL SOUND ( DR , 294 , 2 , 262 , 2 , 175 , 2 ) 
  915 CALL SOUND ( DR , 311 , 2 , 233 , 2 , 196 , 2 )  :: CALL SOUND ( AC , 175 , 2 )  :: CALL PATTERN ( # 20 , 40 , # 21 , 36 ) 
  920 CALL SOUND ( AC , 196 , 2 ) 
  925 CALL SOUND ( AC , 208 , 2 )  :: CALL SOUND ( AC , 262 , 2 )  :: CALL PATTERN ( # 20 , 120 , # 21 , 116 ) 
  930 CALL SOUND ( AC , 233 , 2 )  :: CALL SOUND ( AC , 147 , 2 ) 
  935 CALL SOUND ( DR , 156 , 2 ) 
  940 CALL SOUND ( VI , 156 , 2 ) 
  945 CALL DELSPRITE ( # 13 )  :: DISPLAY AT ( 13 , 19 ) SIZE ( 9 ) BEEP  : "GAME OVER"  :: DISPLAY AT ( 15 , 20 )  : "<TASTE>"  ; 
  946 DISPLAY AT ( 13 , 19 ) SIZE ( 9 ) 
  950 CALL KEY ( 0 , K , S ) 
  955 IF S = 0 THEN 945
  960 GOTO 5
