  100 REM  PROGRAM:HIDDEN PAIRS    
  110 REM     VERSION 1 / GERMAN / NOV. 1982 
  120 REM     COPYRIGHT 1982 BY TEXAS INSTRUMENTS GMBH DEUTSCHLAND   
  130 RANDOMIZE 
  140 DIM A ( 25 ) 
  150 DATA SIEGT! , TASTE , DRUE- , CKEN 
  160 CALL CLEAR 
  170 FOR I = 1 TO 8 
  180 CALL COLOR ( I , 2 , 8 ) 
  190 NEXT I 
  200 CALL COLOR ( 9 , 2 , 11 ) 
  210 CALL COLOR ( 10 , 2 , 5 ) 
  220 CALL COLOR ( 11 , 2 , 7 ) 
  230 CALL COLOR ( 12 , 2 , 16 ) 
  240 CALL COLOR ( 13 , 2 , 13 ) 
  250 CALL COLOR ( 14 , 2 , 14 ) 
  260 CALL COLOR ( 15 , 2 , 8 ) 
  270 CALL COLOR ( 16 , 2 , 5 ) 
  280 CALL CHAR ( 96 , "0" ) 
  290 CALL CHAR ( 101 , "080CFEFFFE0C08" ) 
  300 CALL CHAR ( 34 , "3C4299A1A199423C" ) 
  310 CALL CHAR ( 35 , "000000000000FFFF" ) 
  320 CALL CHAR ( 38 , "FFFF" ) 
  330 CALL CHAR ( 40 , "C0C0C0C0C0C0C0C" ) 
  340 CALL CHAR ( 41 , "0303030303030303" ) 
  350 CALL CHAR ( 60 , "00000000000000FF" ) 
  360 CALL CHAR ( 61 , "808080808080808" ) 
  370 CALL CHAR ( 62 , "000000000000008" ) 
  380 CALL CHAR ( 97 , "808080808080808" ) 
  390 CALL CHAR ( 98 , "00000000000000FF" ) 
  400 CALL CHAR ( 99 , "80808080808080FF" ) 
  410 CALL CHAR ( 100 , "01010101010101FF" ) 
  420 CALL CHAR ( 104 , "0" ) 
  430 CALL CHAR ( 108 , "00004444445428" ) 
  440 CALL CHAR ( 109 , "00003810101038" ) 
  450 CALL CHAR ( 110 , "0000202020203C" ) 
  460 CALL CHAR ( 111 , "00003824242438" ) 
  470 REM  TITLE SCREEN**** 
  480 GOSUB 800
  490 PRINT "     ERINNERN SIE SICH?"  :  : "       [HIDDEN PAIRS]"  :  :  :  :  :  : "  "  ; CHR$ ( 34 )  ; " 1982 TEXAS INSTRUMENTS"  :  :  :  :  : 
  500 PRINT "   DRUECKEN SIE EINE TASTE" 
  510 CALL KEY ( 0 , KEY , ST ) 
  520 IF ST < = 0 THEN 510
  530 GOSUB 800
  540 REM  MAIN MENU****** 
  550 PRINT "     ERINNERN SIE SICH?"  :  : 
  560 CALL HCHAR ( 20 , 6 , 35 , 22 ) 
  570 CALL HCHAR ( 24 , 6 , 38 , 22 ) 
  580 CALL VCHAR ( 21 , 6 , 40 , 3 ) 
  590 CALL VCHAR ( 21 , 27 , 41 , 3 ) 
  600 REM  PRINT :::"      AUSWAHL": 
  610 PRINT  :  :  :  :  : "  1   SPIELANLEITUNG " 
  620 PRINT  : "  2   GEOMETRISCHE FORMEN" 
  630 PRINT  : "  3   LAENDER  " 
  640 PRINT  : "  4   MONSTER " 
  650 PRINT  : "  5   SPIEL BEENDEN"  :  :  :  : 
  655 PRINT "      BITTE WAEHLEN SIE" 
  660 CALL KEY ( 0 , KEY , ST ) 
  670 IF ST < = 0 THEN 660
  680 IF KEY > 48 THEN 710
  690 CALL SOUND ( 100 , 294 , 2 ) 
  700 GOTO 660
  710 IF KEY > 53 THEN 690
  720 IF KEY = 53 THEN 780
  730 IF KEY > 49 THEN 740
  740 IF KEY < > 49 THEN 770
  750 GOSUB 3210
  760 GOTO 530
  770 GOSUB 1290
  780 CALL CLEAR 
  790 STOP 
  800 REM  SCREEN CLEAR*** 
  810 CALL CLEAR 
  820 CALL SCREEN ( 5 ) 
  830 CALL VCHAR ( 1 , 1 , 104 , 48 ) 
  840 CALL VCHAR ( 1 , 31 , 104 , 48 ) 
  850 RETURN 
  860 REM  DISPLAY MESSAGE****     
  870 READ S$ 
  880 H = H + 1 
  890 V = 3 
  900 FOR N = 1 TO LEN ( S$ ) 
  910 CALL HCHAR ( H , V + N , ASC ( SEG$ ( S$ , N , 28 ) ) ) 
  920 NEXT N 
  930 RETURN 
  940 REM  CURSOR**** 
  950 H = 12 
  960 BEG = 6 
  970 CUR = BEG 
  980 IND = BEG 
  990 IF CUR > = BEG THEN 1020
 1000 CUR = BEG 
 1010 GOTO 1040
 1020 IF CUR < = IND THEN 1040
 1030 CUR = IND 
 1040 CALL GCHAR ( H , CUR , G ) 
 1050 CALL HCHAR ( H , CUR , 95 ) 
 1060 IF CURI < > 6 THEN 1090
 1070 CURI = 0 
 1080 CALL HCHAR ( H , CUR , G ) 
 1090 CURI = CURI + 1 
 1100 CALL KEY ( 0 , KEY , ST ) 
 1110 IF ST < = 0 THEN 1050
 1120 CALL HCHAR ( H , CUR , G ) 
 1130 IF KEY = 12 THEN 530
 1140 IF KEY = 6 THEN 1330
 1150 IF KEY < 65 THEN 1200
 1160 IF KEY > 89 THEN 990
 1170 CALL HCHAR ( H , CUR , KEY ) 
 1180 CUR = CUR + 1 
 1190 GOTO 990
 1200 IF KEY = 13 THEN 1220
 1210 GOTO 990
 1220 REM  LOAD INPUT*** 
 1230 S$ = "" 
 1240 FOR N = BEG TO IND 
 1250 CALL GCHAR ( H , N , G ) 
 1260 S$ = S$ & CHR$ ( G ) 
 1270 NEXT N 
 1280 RETURN 
 1290 REM  MAKE BOARD***** 
 1300 GOSUB 800
 1310 PRINT "         EINLESEN..."  :  :  :  :  :  :  :  :  :  :  :  : 
 1320 ON KEY - 49 GOSUB 3130, 3150, 3110
 1330 GOSUB 800
 1340 INPUT " SPIELER NUMMER 1 ? "  : P0$ 
 1350 PRINT " " 
 1360 INPUT " SPIELER NUMMER 2 ? "  : P1$ 
 1370 GOSUB 800
 1380 S1$ = CHR$ ( 97 ) & CHR$ ( 96 ) & CHR$ ( 96 ) & CHR$ ( 96 ) 
 1390 S2$ = CHR$ ( 99 ) & CHR$ ( 98 ) & CHR$ ( 98 ) & CHR$ ( 98 ) 
 1400 S3$ = CHR$ ( 97 ) & CHR$ ( 32 ) & CHR$ ( 32 ) & CHR$ ( 96 ) 
 1410 FOR I = 1 TO 5 
 1420 PRINT TAB ( 8 )  ; S1$  ; S1$  ; S1$  ; S1$  ; S1$ 
 1430 PRINT TAB ( 8 )  ; S3$  ; S3$  ; S3$  ; S3$  ; S3$ 
 1440 PRINT TAB ( 8 )  ; S3$  ; S3$  ; S3$  ; S3$  ; S3$ 
 1450 PRINT TAB ( 8 )  ; S2$  ; S2$  ; S2$  ; S2$  ; S2$ 
 1460 NEXT I 
 1470 PRINT " " 
 1480 CALL HCHAR ( 2 , 10 , 60 , 20 ) 
 1490 CALL VCHAR ( 3 , 30 , 61 , 20 ) 
 1500 CALL HCHAR ( 2 , 30 , 62 ) 
 1510 K = 0 
 1520 FOR I = 65 TO 89 
 1530 CALL HCHAR ( 4 + INT ( ( I - 65 ) / 5 ) * 4 , 11 + 4 * K , I ) 
 1540 IF K < > 4 THEN 1560
 1550 K = - 1 
 1560 K = K + 1 
 1570 NEXT I 
 1580 H = 3 
 1590 S$ = SEG$ ( P0$ , 1 , 5 ) 
 1600 GOSUB 890
 1610 H = 7 
 1620 S$ = SEG$ ( P1$ , 1 , 5 ) 
 1630 GOSUB 890
 1640 CALL HCHAR ( 5 , 6 , 48 ) 
 1650 CALL HCHAR ( 9 , 6 , 48 ) 
 1660 CALL HCHAR ( 4 , 4 , 45 , 5 ) 
 1670 CALL HCHAR ( 8 , 4 , 45 , 5 ) 
 1680 REM  PLAY GAME******** 
 1690 P = 0 
 1700 P0 = 0 
 1710 P1 = 0 
 1720 GOSUB 2000
 1730 CALL HCHAR ( 3 + P * 4 , 3 , 101 ) 
 1740 CALL HCHAR ( 3 + ( 1 - P ) * 4 , 3 , 32 ) 
 1750 GOSUB 940
 1760 GOSUB 2660
 1770 IF FLAG$ = "0" THEN 1730
 1780 GOSUB 2510
 1790 TH = H 
 1800 TV = V 
 1810 TCS = CS 
 1820 TC = C 
 1830 GOSUB 940
 1840 GOSUB 2660
 1850 IF FLAG$ = "0" THEN 1830
 1860 GOSUB 2510
 1870 IF TC = 108 THEN 1900
 1880 IF C = 108 THEN 1900
 1890 IF TC < > C THEN 1920
 1900 GOSUB 2160
 1910 GOTO 1730
 1920 GOSUB 2570
 1930 H = TH 
 1940 V = TV 
 1950 CS = TCS 
 1960 GOSUB 2570
 1970 P = 1 - P 
 1980 GOTO 1730
 1990 RETURN 
 2000 REM  LOAD PATTERNS***** 
 2010 K = 112 
 2020 FOR I = 0 TO 11 
 2030 A ( I ) = K 
 2040 A ( I + 12 ) = K 
 2050 K = K + 4 
 2060 NEXT I 
 2070 A ( 24 ) = 108 
 2080 FOR I = 1 TO 30 
 2090 N = INT ( 25 * RND ) 
 2100 H = INT ( 25 * RND ) 
 2110 T = A ( N ) 
 2120 A ( N ) = A ( H ) 
 2130 A ( H ) = T 
 2140 NEXT I 
 2150 RETURN 
 2160 REM  DISPLAY SCORE AND CHECK FOR WIN***** 
 2170 V = 5 
 2180 IF P = 0 THEN 2230
 2190 P1 = P1 + 1 
 2200 H = 9 
 2210 S$ = STR$ ( P1 ) 
 2220 GOTO 2260
 2230 P0 = P0 + 1 
 2240 H = 5 
 2250 S$ = STR$ ( P0 ) 
 2260 GOSUB 900
 2270 REM  CHECK FOR WIN** 
 2280 IF P1 < 7 THEN 2430
 2290 S$ = SEG$ ( P1$ , 1 , 5 ) 
 2300 CALL HCHAR ( 12 , 3 , 32 , 7 ) 
 2310 H = 12 
 2320 GOSUB 890
 2330 RESTORE 150
 2340 GOSUB 860
 2350 H = 19 
 2360 GOSUB 860
 2370 GOSUB 860
 2380 GOSUB 860
 2390 CALL KEY ( 0 , KEY , ST ) 
 2400 IF ST < = 0 THEN 2390
 2410 IF KEY = 6 THEN 1330
 2420 GOTO 530
 2430 IF P0 < 7 THEN 2460
 2440 S$ = SEG$ ( P0$ , 1 , 5 ) 
 2450 GOTO 2300
 2460 IF P0 < > P1 THEN 2500
 2470 IF P0 < > 6 THEN 2500
 2480 S$ = "KEINER" 
 2490 GOTO 2300
 2500 RETURN 
 2510 REM  UNCOVER SQUARE**** 
 2520 CALL HCHAR ( H , V , C ) 
 2530 CALL HCHAR ( H , V + 1 , C + 1 ) 
 2540 CALL HCHAR ( H + 1 , V , C + 2 ) 
 2550 CALL HCHAR ( H + 1 , V + 1 , C + 3 ) 
 2560 RETURN 
 2570 REM  COVER SQUARE**** 
 2580 FOR I = 1 TO 99 
 2590 L = L 
 2600 NEXT I 
 2610 CALL HCHAR ( H , V , CS ) 
 2620 CALL HCHAR ( H , V + 1 , 32 ) 
 2630 CALL HCHAR ( H + 1 , V , 32 ) 
 2640 CALL HCHAR ( H + 1 , V + 1 , 32 ) 
 2650 RETURN 
 2660 REM  WHAT SQUARE TO TURN***  
 2670 FLAG$ = "0" 
 2680 FOR I = 65 TO 89 
 2690 CS = I 
 2700 IF CS = ASC ( S$ ) THEN 2720
 2710 NEXT I 
 2720 H = INT ( ( I - 65 ) / 5 ) * 4 + 4 
 2730 V = ( ( I - 65 ) - INT ( ( I - 65 ) / 5 ) * 5 ) * 4 + 11 
 2740 C = A ( I - 65 ) 
 2750 CALL GCHAR ( H , V , KEY ) 
 2760 IF KEY < > CS THEN 2780
 2770 FLAG$ = "1" 
 2780 RETURN 
 2790 REM  ANIMALS*** 
 2800 DATA FCFCCCCCFCFE0703 , 3F3F33333F7FE0C , 070C1C346360301 , E030382CC6060C08 , 1F232121231F0101 , F8C48484C4F8808 
 2810 DATA 3F41811F21420408 , FC8281F88442201 , 9F61631F0707037F , F986C6F8E0E0C0FE , 7F7F3F1F0F070301 , FEFEFCF8F0E0C08 
 2820 DATA 8060381F1F18181F , 01061CF8F81818F8 , 0F1F3361C3CFF971 , F0F8CC86C3F39F8E , 804F3F3F7FFFFFFF , 01F2FCFCFEFFFFFF 
 2830 DATA 7F3F1F12244848D8 , FEFCF8482412121B , 9F7F78FCFFFF1F0F , F9FE1E3FFFFFF8F , 1E3E3F202C2A221C , 787CFC0434544438 
 2840 DATA 80F078080C0F0F0F , 010F1E1030F0F0F , 09091F2123272763 , 9090F884C4E4E4C6 , 040810F0F8FCFEFE , 2010080F1F3F7F7F 
 2850 DATA FEFEFEFEFCF8A4A2 , 7F7F7F7F3F1F2545 , 070F0F0721110F01 , E0F0F0E08488F08 , 3F7FFFFFF0E0C08 , FCFEFFFF8F878381 
 2860 DATA 89492913EF0F1F1F , 919294C8F7F0F8F8 , 1F1F1F3F63E1C0C , F8F8F8FCC6870303 , 0000000000010306 , 0F1E3C7CFE8F 
 2870 DATA 0C183060C0C0FFFF , 000000020408F8F , 7C82818181918E8 , 0 , 80C07F3F1F1F1122 , 081CFEFBF9F88806 
 2880 REM  GEOMETRICS** 
 2890 DATA 0103070F1F3F7FFF , 80C0E0F0F8FCFEFF , FF7F3F1F0F070301 , FFFEFCF8F0E0C08 , 00003F3F3F3F3F3F , 0000FCFCFCFCFCFC 
 2900 DATA 3F3F3F3F3F3F , FCFCFCFCFCFC , 000001010307070F , 00008080C0E0E0F , 1F1F3F7F7FFF , F8F8FCFEFEFF , FF7F3F1F0F070301 
 2910 DATA FFFEFCF8F0E0C08 , 0103070F1F3F7FFF , 80C0E0F0F8FCFEFF , 0 , FFFFFFFFFFFFFFFF , FFFFFFFFFFFFFFFF , 0 
 2920 DATA FFFFFFFFFFFFFFFF , 0 , 0 , FFFFFFFFFFFFFFFF , 0103070F1F3F7FFF , FFFFFFFFFFFFFFFF , FFFFFFFFFFFFFFFF 
 2930 DATA FFFEFCF8F0E0C08 , FFFFFFFFFFFFFFFF , 80C0E0F0F8FCFEFF , FF7F3F1F0F070301 , FFFFFFFFFFFFFFFF , FFFEFCF8F0E0C08 
 2940 DATA FF7F3F1F0F070301 , 80C0E0F0F8FCFEFF , 0103070F1F3F7FFF , FFFEFCF8FFEFCF8F , FF7F3F1FFFF7F3F1 , 8FCFEFFFF8FCFEFF 
 2950 DATA F1F3F7FF1F3F7FFF , 0103070F103070F , 80C0E0F0080C0E0F , F07030100F070301 , 0F0E0C08F0E0C08 , 1F3F7FFFF8F0E0C 
 2960 DATA F8FCFEFF1F0F0703 , C0E0F0F8FF7F3F1F , 03070F1FFFFEFCF8 
 2970 REM  STATES***** 
 2980 DATA 1F1F1F1F1F1F1F1F , F8F8F8F8F8F8F8F8 , 0F070301 , F8F8F8F8F870301 
 2990 DATA FC7CFCFCFCFEFF7F , 000000000000008 , 3F1F1F1F0F0703 , C0E0F0F8FCFCFC3E 
 3000 DATA FFFF7F3F1F1F1F1F , E0F0F0F8FCFEFEFC , 1F1F1F1F1F1F , FCFEFFFFFFFF0E1C 
 3010 DATA 01070F0F677F7F0F , E0FEFFFFFFFFFFFF , 3F7F7F3F1F0F0FFF , FFFFFFDFBFB7 
 3020 DATA 00070707070707FF , 00808080F0FFFFFF , 7F3F19 , FFFFFFFCF8703018 
 3030 DATA 00000000FFFF0303 , 00000000FFFFFFFF , 030303 , FFFFFF0F 
 3040 DATA FFFFFFFFFFFF7F7F , C0E0E0E0C0C08080 , 7F7F7F7F7FFFFF8C , 8080FCFEF8FCFFFF 
 3050 DATA FFFF0D , F8F8FCFC7E7E7F7F , 0 , 7F7F3F3F1F1F1E0E 
 3060 DATA 0F070303070F1F1F , F0F8F8F8F8F8F8F8 , 1F0F0703010101 , F8F8F0F0F8F8F0E 
 3070 DATA 0000000000387F3F , 000F3F7F7F7FFFFF , 7FFFFF , FFFFFF1F1F0F03 
 3080 DATA 1818181C1C1E1E1E , 0 , 1F1F1F1F1F1F1F1F , 00F8F8F8F8F8F8F8 
 3090 DATA 0 , 00061E3E3F7F7FFF , 01237FFF , FFFFFEFF 
 3100 REM  LOAD CHARS****
 3110 RESTORE 2790
 3120 GOTO 3160
 3130 RESTORE 2880
 3140 GOTO 3160
 3150 RESTORE 2970
 3160 FOR I = 112 TO 159 
 3170 READ S$ 
 3180 CALL CHAR ( I , S$ ) 
 3190 NEXT I 
 3200 RETURN 
 3210 REM  INSTRUCTIONS**** 
 3215 GOSUB 800
 3220 PRINT " MIT DIESEM SPIEL KOENNEN"  : " SIE 'MEMORY' SPIELEN! ES" 
 3230 PRINT " HAT DAS ZIEL, MOEGLICHST"  : " VIELE QUADRAT-PAARE MIT"  : " GLEICHEM INHALT AUFZU-"  : " DECKEN."  : 
 3240 PRINT  : " DIE SPIELER DUERFEN AB-"  : " WECHSELND ZWEI QUADRATE"  : " ANSEHEN. BEI AUFFINDEN" 
 3245 PRINT " EINES PAARES DUERFEN"  : " WEITERE ZWEI QUADRATE"  : " AUFGEDECKT WERDEN."  : 
 3250 PRINT  : " ES GEWINNT DER SPIELER,"  : " DER ZUERST 7 PAARE GEFUN-"  : " DEN HAT. BEI JE 6 PAAREN"  : " ENDET DAS SPIEL UNENT-"  : " SCHIEDEN." 
 3260 PRINT  :  : "  DRUECKEN SIE EINE TASTE" 
 3270 CALL KEY ( 0 , KEY , ST ) 
 3280 IF ST < = 0 THEN 3270
 3290 RETURN 
