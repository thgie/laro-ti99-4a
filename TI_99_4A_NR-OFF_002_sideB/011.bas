    5  !  FROGGER                     @ 1983 BY                   L. SACER,ALEMANNENSTR.10    4106 THERWIL            _
   10 DISPLAY AT ( 8 , 11 ) ERASE ALL  : "FROGGER"  : TAB ( 11 )  ; "======="  :  :  :  :  :  :  :  :  : TAB ( 6 )  ; "@ 1983,LARO SACER" 
   15 CALL CHAR ( 64 , "3C42BDA1A1BD423C" ) 
   20 DISPLAY AT ( 24 , 8 )  : "TASTE DRUECKEN" 
   25 CALL KEY ( 0 , K , S )  :: IF S < = 0 THEN 25
   30 CALL CLEAR 
   35 CALL CHARSET 
   40 CALL SCREEN ( 8 ) 
   45 DISPLAY AT ( 4 , 6 )  : "BITTE WAEHLEN SIE:"  :  : TAB ( 8 )  ; "1 FUER FROGGER"  :  : TAB ( 8 )  ; "2 FUER ENDE" 
   50 CALL KEY ( 0 , K , S ) 
   55 IF S < = 0 THEN 50
   60 IF K < 49 OR K > 50 THEN CALL SOUND ( 100 , 220 , 10 )  :: GOTO 50
   65 ON K - 48 GOTO 100, 70
   70 CALL CLEAR 
   75 STOP 
  100 ON WARNING NEXT 
  110 CALL CLEAR 
  120 DIM PU ( 2 ) 
  130 PU ( 1 ) , PU ( 2 ) , TAST , SP , SPIELER = 0 
  132 DISPLAY AT ( 10 , 1 )  : "ABFRAGE AUCH UEBER TASTATUR?(J/N):J" 
  134 ACCEPT AT ( 11 , 7 ) BEEP SIZE ( - 1 ) VALIDATE ( "JN" )  : T$ 
  136 IF T$ = "J" THEN TAST = - 1 
  138 CALL CLEAR 
  140 CALL SCREEN ( 2 ) 
  150 CALL MAGNIFY ( 3 ) 
  160 CALL CHAR ( 61 , "000000000000FFFF" ) 
  170 CALL CHAR ( 96 , "F0F" , 97 , "FFFF" , 98 , "000000000000FFFF" ) 
  180 CALL CHAR ( 100 , "0163756733331F07070F1F9FCF6B310080C6AEE6CCCCF8E0E0F0F8F9F3D68C" ) 
  190 CALL CHAR ( 104 , "01030507C3C3DFB7E78F1F1F373319F880C0A0E0C3C3FBEDE7F1F8F8ECCC981F" ) 
  200 CALL CHAR ( 108 , "000000FFFFFFFFFFFFFFFFFFFF" , 110 , "000000CCCCFFFFFFFFFFFFCCCC" ) 
  210 CALL CHAR ( 112 , "FFFFFFFFFFFFFFFF0" ) 
  220 CALL CHAR ( 116 , "0000000038FFFFFFFFFFFF38" , 118 , "000000000C0CFFFFFFFF0C0C" ) 
  230 CALL CHAR ( 120 , "00000C3E63C0" , 121 , "" , 122 , "060F0E18F0E" , 123 , "" ) 
  240 CALL CHAR ( 124 , "00000000307FF8F8F8F87F30" , 126 , "000000000CFFEBEBEBEBFF0C" ) 
  250 CALL CHAR ( 128 , "0000003CFFFFFFFFFFFFFFFF3C0000000000001E1E0CFDFFFFFD0C1E1E" ) 
  252 CALL CHAR ( 132 , "00000000FFF983FE1BFE07FF0000000000000000FF9FFB3FE33E8FFF" ) 
  255 CALL CHAR ( 136 , "000000007FC0DFDBDBDFC07F0000000000000000C0707C7F7F7C70C" ) 
  260 CALL CHAR ( 140 , "01030301005533451341160029130C0480C0C0C000CAE4E2E0CA60E440C5180A" ) 
  270 FOR I = 0 TO 14 
  280 CALL COLOR ( I , 2 , 8 ) 
  290 NEXT I 
  300 DISPLAY AT ( 10 , 3 )  : "ANZAHL SPIELER?(1-2):1" 
  310 ACCEPT AT ( 10 , 24 ) BEEP SIZE ( - 1 ) VALIDATE ( "12" )  : SPIELER 
  320 CALL SCREEN ( 2 ) 
  330 SP = 1 
  340 CALL COLOR ( 1 , 2 , 8 , 9 , 16 , 15 , 10 , 13 , 12 , 11 , 15 , 12 ) 
  350 CALL CLEAR 
  360 IF SPIELER = 2 THEN 390
  370 DISPLAY AT ( 2 , 1 )  : "PUNKTE:" & STR$ ( PU ( 1 ) ) 
  380 GOTO 400
  390 DISPLAY AT ( 2 , 1 )  : "SPIELER 1:" & STR$ ( PU ( 1 ) )  ; TAB ( 15 )  ; "SPIELER 2:" & STR$ ( PU ( 2 ) ) 
  400 CALL HCHAR ( 3 , 1 , 61 , 32 ) 
  410 CALL HCHAR ( 13 , 1 , 113 , 64 ) 
  420 CALL HCHAR ( 15 , 1 , 97 , 32 ) 
  430 FOR I = 16 TO 20 STEP 2 
  440 CALL HCHAR ( I + 1 , 1 , 96 , 32 ) 
  450 CALL HCHAR ( I , 1 , 112 , 32 ) 
  460 NEXT I 
  470 CALL HCHAR ( 22 , 1 , 98 , 32 ) 
  480 CALL HCHAR ( 23 , 1 , 112 , 64 ) 
  490 FOR I = 1 TO 20 
  500 READ Z , F , P1 , P2 , G1 
  510 IF Z = 0 THEN 530
  520 CALL SPRITE ( # I , Z , F , P1 , P2 , 0 , G1 * ( 1 + PU ( SP ) / 200 ) ) 
  530 NEXT I 
  540 DATA 108 , 14 , 161 , 17 , 6.5 , 108 , 6 , 161 , 1 , 6.5 , 108 , 7 , 161 , 164 , 6.5 , 116 , 5 , 145 , 14 , 11 , 116 , 4 , 145 , 1 , 11 
  550 DATA 124 , 16 , 129 , 240 , -11.5 , 124 , 2 , 129 , 255 , -11.5 , 128 , 3 , 113 , 236 , -4.5 , 128 , 6 , 113 , 256 , -4.5 
  560 DATA 120 , 2 , 101 , 1 , 4.5 , 132 , 7 , 81 , 256 , -2 , 132 , 7 , 81 , 16 , -2 , 132 , 7 , 64 , 40 , -4.8 
  565 DATA 132 , 7 , 64 , 57 , -4.8 , 132 , 7 , 64 , 74 , -4.8 , 136 , 16 , 48 , 1 , 7.5 , 136 , 13 , 48 , 96 , 7.5 , 136 , 5 , 32 , 1 , 4.5 
  567 DATA 136 , 14 , 32 , 236 , 4.5 , 136 , 9 , 32 , 140 , 4.5 , 0 
  570 CALL SPRITE ( # 28 , 100 , 13 , 177 , 120 ) 
  580 GOTO 680
  590 FOR DU = 1 TO 19 + TAST * 4 
  600 CALL JOYST ( SP , X , Y ) 
  601 IF NOT TAST THEN 610
  602 CALL KEY ( 3 , K , S ) 
  603 IF K = 69 THEN Y = 4 
  604 IF K = 88 THEN Y = - 3 
  605 IF K = 83 THEN X = - 4 
  606 IF K = 68 THEN X = 4 
  607 GOTO 620
  610 IF Y = - 4 THEN Y = - 3 
  620 CALL MOTION ( # 28 , - 2 * Y , X ) 
  630 IF Y = 0 THEN 650
  640 PAT = NOT PAT  :: CALL PATTERN ( # 28 , 100 - 4 * PAT ) 
  650 CALL POSITION ( # 28 , P , Q )  :: IF P < 10 THEN 760ELSE IF P > 192 THEN 700
  660 CALL COINC ( ALL , O )  :: IF O THEN 700
  670 NEXT DU 
  680 CALL SOUND ( - 4250 , - 3 , 15 ) 
  690 GOTO 590
  700 CALL MOTION ( # 28 , 0 , 0 ) 
  710 CALL COLOR ( # 28 , 7 ) 
  720 CALL SOUND ( - 1000 , 523 , 4 , 622 , 5 , 784 , 4 , - 5 , 9 ) 
  730 CALL PATTERN ( # 28 , 140 ) 
  740 FOR I = 1 TO 400  :: NEXT I 
  750 GOTO 890
  760 CALL MOTION ( # 28 , 0 , 0 ) 
  770 CALL SOUND ( - 500 , 523 , 5 , 262 , 10 , 330 , 10 ) 
  780 CALL SOUND ( 500 , 587 , 5 , 392 , 10 , 494 , 10 ) 
  790 CALL SOUND ( 500 , 659 , 5 , 262 , 10 , 330 , 10 ) 
  800 CALL SOUND ( 500 , 698 , 5 , 349 , 10 , 440 , 10 ) 
  810 CALL SOUND ( 500 , 784 , 5 , 392 , 10 , 494 , 10 ) 
  820 CALL SOUND ( 500 , 880 , 5 , 349 , 10 , 440 , 10 ) 
  830 CALL SOUND ( 500 , 988 , 5 , 392 , 10 , 494 , 10 ) 
  840 CALL SOUND ( 3000 , 1047 , 4 , 262 , 9 , 330 , 9 ) 
  850 CALL DELSPRITE ( ALL ) 
  860 RESTORE 540
  870 PU ( SP ) = PU ( SP ) + 20 
  880 GOTO 350
  890 CALL DELSPRITE ( ALL ) 
  900 CALL CLEAR 
  910 RESTORE 540
  920 IF SPIELER = 1 THEN 950
  930 SP = SP + 1  :: IF SP > SPIELER THEN SP = 1 
  940 IF SP = 2 THEN 350
  950 DISPLAY AT ( 10 , 1 ) BEEP  : "NOCH EIN SPIEL?(J/N):J" 
  960 CALL KEY ( 3 , K , S )  :: CALL KEY ( 1 , K1 , S1 )  :: CALL KEY ( 2 , K2 , S2 ) 
  970 IF K = 13 OR K = 74 OR K1 = 18 OR K2 = 18 THEN 350
  980 IF K < > 78 THEN 960
  985 CALL HCHAR ( 10 , 24 , 78 ) 
  990 GOTO 30
 1000 CALL CLEAR 
 1010 REM 
