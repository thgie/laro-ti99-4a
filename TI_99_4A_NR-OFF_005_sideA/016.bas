  100 CALL CLEAR 
  102 RANDOMIZE 
  105 CALL MAGNIFY ( 1 ) 
  110 GOSUB 10000
  112 DIM M$ ( 3 ) , V$ ( 3 ) , Z$ ( 3 , 20 ) 
  114 GOSUB 12000
  120 CALL SCREEN ( 5 ) 
  125 CALL MAGNIFY ( 1 ) 
  126 POI = 1  :: ST = 4  :: PUN = 0 
  130 GOSUB 11000
  140 CALL SPRITE ( # 1 , 96 , 4 , 136 , 97 , 0 , 0 ) 
  180 CALL JOYST ( 1 , X , Y ) 
  185 CALL KEY ( 0 , K , S )  :: IF K < 49 OR K > 52 THEN 190
  187 ST = K - 47  :: DISPLAY AT ( 24 , 9 )  : ST - 1 
  190 CALL SOUND ( - 4250 , - 5 , 29 ) 
  200 CALL POSITION ( # 1 , P1 , P2 ) 
  210 IF P1 < 64 AND Y > 0 THEN CALL MOTION ( # 1 , 0 , 0 )  :: GOTO 230
  220 CALL MOTION ( # 1 , - Y * ST / 4 , 0 ) 
  225 POI = POI + .3  :: IF INT ( POI ) = POI1 THEN 180
  227 POI1 = INT ( POI ) 
  230 P2 = INT ( ( P1 + 10 ) / 8 )  :: CALL GCHAR ( P2 , 13 , ZE ) 
  232 PUN2 = P2 - 13 
  235 IF ZE = 133 THEN PUN2 = PUN2 + 100  :: GOSUB 14100 :: GOTO 241
  240 IF ZE < > 100 AND ZE < > 101 THEN 2000 ! CALL SOUND(-100,-6,10)
  241 IF PUN2 THEN GOSUB 14000
  280 IF POI > LEN ( M$ ( 1 ) ) - 13 THEN POI = LEN ( M$ ( 1 ) ) - 13  :: GOTO 125
  300 GOSUB 13000
  310 GOTO 180
 1990  !  CRASH
 2000 CALL SOUND ( - 300 , - 7 , 10 ) 
 2005 CALL MOTION ( # 1 , 0 , 0 ) 
 2010 CALL COLOR ( # 1 , 10 ) 
 2020 CALL PATTERN ( # 1 , 97 ) 
 2030 CALL MAGNIFY ( 2 ) 
 2035 FOR I = 1 TO 1000  :: NEXT I 
 2036 CALL DELSPRITE ( # 1 ) 
 2037 POI = 1 
 2040 GOTO 125
 9990 STOP 
10000  !  ZEICHENDEFINITION
10010 RESTORE 10100
10020 READ Z , ZE$ 
10030 IF Z = 0 THEN 10060
10040 CALL CHAR ( Z , ZE$ ) 
10050 GOTO 10020
10060 CALL COLOR ( 1 , 16 , 5 , 2 , 16 , 5 , 3 , 16 , 5 , 4 , 16 , 5 , 5 , 16 , 5 , 6 , 16 , 5 , 7 , 16 , 5 , 8 , 16 , 5 ) 
10070 CALL COLOR ( 9 , 16 , 2 , 10 , 15 , 2 , 11 , 15 , 2 , 12 , 15 , 2 , 13 , 15 , 2 , 14 , 15 , 2 ) 
10090 RETURN 
10100 DATA 32 , 0000000000000000000000000000000000000000000000000000000000000000 
10110 DATA 36 , 000000000007060505050505050505050506070000000000FF00FF 
10120 DATA 40 , A060E00000000000A0A0A0A0A0A0A0A00000000000E060A00000000000FF00FF 
10130 DATA 44 , 0000000000000000000000000000000000000000000000000000000000000000 
10140 DATA 96 , 0020303E3F00000024500472B458220800000000000000000000000000000000 
10150 DATA 100 , 0000000000000000000000100000000000000000000000000000000000000000 
10160 DATA 104 , 1F3F7FFFFFFFFFFF0103070F1F3F7FFF000000000103070FF8FCFEFFFFFFFFFF 
10170 DATA 108 , 80C0E0F0F8FCFEFF0000000080C0E0F0FFFFFFFFFFFFFFFF00000000FFFFFFFF 
10180 DATA 112 , 00000000030F3FFF030F3FFFFFFFFFFF00000000C0F0FCFFC0F0FCFFFFFFFFFF 
10190 DATA 116 , 1F1F3F3F7F7FFFFF0101030307070F0F8080C0C0E0E0F0F0F8F8FCFCFEFEFFFF 
10200 DATA 120 , 18181818183C7EFF242424246C7E7EFF00000000003C747E00000000003C7EFF 
10210 DATA 124 , FF7F3F1F0F070301FFFEFCF8F0E0C0803F0700000000073FFFFF1F03011FFFFF 
10220 DATA 128 , FFFFFFFFFFFCF0C0FFFCF0C000000000FF3F0F0300000000FFFFFFFFFF3F0F03 
10230 DATA 132 , FF7E3C1818181818000000000000000000000000000000000000000000000000 
10240 DATA 136 , 0000000000000000000000000000000000000000000000000000000000000000 
10250 DATA 140 , 0000000000000000000000000000000000000000000000000000000000000000 
10900 DATA 0 , 0 
11000  !  BILDSCHIRM
11010 RESTORE 11100
11020 READ B1$ , B2$ , B3$ , B4$ , B5$ , B6$ 
11030 DISPLAY AT ( 1 , 1 )  : B1$ , B2$ , B3$ , B4$ , B5$ , B6$ 
11040 B1$ , B2$ , B3$ , B4$ , B5$ , B6$ = "" 
11045 DISPLAY AT ( 22 , 22 )  : REK 
11046 DISPLAY AT ( 24 , 9 )  : ST - 1 
11050 RETURN 
11100 DATA "                                                                                                                " 
11110 DATA "                                                              $++++++++++++++*            %ddedddddddeddd)      " 
11120 DATA "      %dddddedddedddd)            %deddddeddddddd)            %dddddddddddedd)            %dddddddddedddd)      " 
11130 DATA "      %dddeddddeddddd)            %ddddddddddddde)            %eddddddedddddd)            %dddddddddddded)      " 
11140 DATA "      %dddddddddddddd)            %srdddddddddddu)            %nnnnnnnnnnnnnn)            &''''''''''''''(      " 
11150 DATA "                            PUNKTE : 0     REK. : 0                                 LIFT   : 4                  " 
12000  !  LANDSCHAFT
12010 RESTORE 12200
12020 FOR P = 1 TO 20 
12030 FOR Q = 1 TO 3 
12040 READ Z$ ( Q , P ) 
12050 NEXT Q 
12060 NEXT P 
12063  !  STRECKE
12065 FOR I = 1 TO 3  :: M$ ( I ) = Z$ ( I , 15 )  :: NEXT I 
12080 RA = INT ( 18 * RND + 1 ) 
12090 FOR Q = 1 TO 3 
12100 M$ ( Q ) = M$ ( Q ) & Z$ ( Q , RA ) 
12110 NEXT Q 
12115 IF LEN ( M$ ( 1 ) ) < = 220 THEN 12080
12130 RETURN 
12200 DATA dddddddd , dddddddd , lddddddu 
12210 DATA dyxdddd , innsmdx , nnnnkqn 
12220 DATA ddddd , ddddd , srddi 
12230 DATA djmdzd , phkqnl , nnnnnn 
12240 DATA d{d , inl , nnn 
12250 DATA dddd , djor , shnn 
12260 DATA dddd , dddd , srdi 
12270 DATA d{d , inl , nnn 
12280 DATA ddivuldd , dunkhnvd , shnnnnwi 
12290 DATA ddddisrdpqlddd , dpoqnnnnnnnvdd , nnnnnnnnnnnkoq 
12300 DATA ddd , ydy , nnn 
12310 DATA dddd , pqlx , nnnn 
12320 DATA dduldddd , ishnvddd , nnnnkooq 
12330 DATA dddusm , poohnw , nnnnnn 
12340 DATA dddddddddddddd , dddddddddddddd , srdddddddddddu 
12350 DATA ddpqnnnnnnnsrd , dd|nn}d , nl{xinn 
12360 DATA dddjqn|nlxinnnnnnnnnnnld , ddph|nn}|}~l , ldilzxxinlxinnn 
12370 DATA dddjqn|nlxinnnnnnnnndd , ddph|nn}|}il , ldil{xxinlxpqnn 
12380 DATA , , 
12390 DATA , , 
12400 DATA 0 
13000  !  LANDSCHAFTSBEWEGUNG
13010 FOR LO = 1 TO 3 
13020 V$ ( LO ) = SEG$ ( M$ ( LO ) , POI , 14 ) 
13030 NEXT LO 
13040 DISPLAY AT ( 16 , 8 ) SIZE ( 14 )  : V$ ( 1 )  :: DISPLAY AT ( 17 , 8 ) SIZE ( 14 )  : V$ ( 2 )  :: DISPLAY AT ( 18 , 8 ) SIZE ( 14 )  : V$ ( 3 ) 
13070 RETURN 
14000  !  PUNKTE
14010 PUN = PUN + PUN2 
14020 DISPLAY AT ( 22 , 9 ) SIZE ( 6 )  : PUN 
14030 IF REK > = PUN THEN 14050
14040 REK = PUN 
14050 RETURN 
14100  ! FANFARE
14120 CALL SOUND ( - 100 , 440 , 10 ) 
14140 RETURN 
