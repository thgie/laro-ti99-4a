  100 GOTO 130 :: DIM P ( 2 )  :: CALL CLEAR  :: CALL MAGNIFY  :: CALL SPIELER  :: CALL TITELBILD  :: CALL START  :: CALL JOYST  :: CALL POSITION  :: CALL GRENZE  :: CALL PUNKTE 
  110 GOTO 130 :: CALL COINC  :: CALL MOTION  :: CALL CHAR  :: CALL SCREEN  :: CALL COLOR  :: CALL PATTERN  :: CALL VCHAR  :: CALL SPRITE  :: CALL KEY  :: CALL SOUND 
  120 GOTO 130 :: SP , V , R , X , Y , HO , BR = CO  ::  ! @P-
  130  ! GRAND-PRIX 2!!
  140 CALL CLEAR  :: CALL MAGNIFY ( 3 ) 
  150 CALL SPIELER ( SP ) 
  160 CALL TITELBILD 
  170 FOR V = 1 TO SP 
  180 CALL START ( V ) 
  190 R = - 4 
  200 CALL JOYST ( V , X , Y ) 
  210 CALL POSITION ( # 14 , HO , BR ) 
  220 IF BR > 148 OR BR < 82 THEN CALL GRENZE ( X , R )  :: IF R = 6 THEN CALL PUNKTE ( V , P ( ) )  :: GOTO 290ELSE 260
  230 IF HO > 164 THEN R = - 4 
  240 IF HO < 60 THEN R = 4 
  250 CALL COINC ( ALL , CO )  :: IF CO THEN R = 6  :: CALL GRENZE ( X , R )  :: CALL PUNKTE ( V , P ( ) )  :: GOTO 290
  260 CALL MOTION ( # 14 , R , X * 2 ) 
  270 P ( V ) = P ( V ) + 1 
  280 GOTO 200
  290 NEXT V 
  300 GOTO 170
  310  ! @P+
  320 SUB TITELBILD  :: GOTO 330 :: X = 0  ::  ! @P-
  330 CALL CHAR ( 96 , "000F01090F0A02030707373F37011F1F00F08090F05040C0E0E0ECFCEC80F8F8" ) 
  340 CALL CHAR ( 140 , RPT$ ( "7F" , 16 ) & "FF" & RPT$ ( "7F" , 14 ) & "FF" ) 
  350 CALL CHAR ( 112 , "80808080808080800101010101010101" ) 
  360 CALL CHAR ( 100 , "000004091D2F061C0B0101070301000000000000801098FCF0F2F6FC18306" ) 
  370 CALL CHAR ( 104 , "000000005C484F79794F485C000000000000383B13FBFBFFFFFBFB133838" ) 
  380 CALL CHAR ( 108 , "0001030701010B1C062F1D0904000000603018FCF6F2F0FC98108" ) 
  390 CALL CHAR ( 116 , "1F1F01373F37070703020A0F09010F00F8F880ECFCECE0E0C04050F09080F" ) 
  400 CALL CHAR ( 120 , "00060C183F6F4F0F3F19080100000000000080C0E08080D03860F4B8902" ) 
  410 CALL CHAR ( 124 , "00001CDCC8DFDFFFFFDFDFC8DC1C0000000000003A12F29E9EF2123A" ) 
  420 CALL CHAR ( 128 , "000000000108193F0F4F6F3F180C060000002090B8F46038D08080E0C08" ) 
  430 CALL CHAR ( 132 , "000000010812000B23034B100A050000000000504CA008C0D2C0E208A0002" ) 
  440 CALL CLEAR 
  450 CALL SCREEN ( 4 ) 
  460 CALL COLOR ( 11 , 16 , 15 ) 
  470 FOR X = 12 TO 18 STEP 2 
  480 CALL VCHAR ( 1 , X , 112 , 24 ) 
  490 CALL VCHAR ( 1 , X + 1 , 113 , 24 ) 
  500 NEXT X 
  510  ! @P+
  520 SUBEND 
  530 SUB SPIELER ( A )  :: GOTO 540 :: A = 0  ::  ! @P-
  540 DISPLAY AT ( 12 , 3 )  : "ANZAHL SPIELER(1,2)?:1" 
  550 ACCEPT AT ( 12 , 24 ) BEEP SIZE ( - 1 ) VALIDATE ( "12" )  : A 
  560  ! @P+
  570 SUBEND 
  580 SUB GRENZE ( X , R )  :: GOTO 590 :: A , T , B , D , E , X = R  ::  ! @P-
  590 CALL MOTION ( # 14 , R , X * 1.8 ) 
  600 IF R = 6 THEN 720
  610 CALL PATTERN ( # 14 , 100 )  :: GOSUB 690
  620 CALL PATTERN ( # 14 , 104 )  :: GOSUB 690
  630 CALL PATTERN ( # 14 , 108 )  :: GOSUB 690
  640 CALL PATTERN ( # 14 , 116 )  :: GOSUB 690
  650 CALL PATTERN ( # 14 , 120 )  :: GOSUB 690
  660 CALL PATTERN ( # 14 , 124 )  :: GOSUB 690
  670 CALL PATTERN ( # 14 , 128 )  :: GOSUB 690
  680 CALL PATTERN ( # 14 , 96 )  :: GOSUB 690 :: SUBEXIT 
  690 CALL COINC ( # 14 , # 15 , 8 , A )  :: CALL COINC ( # 14 , # 16 , 8 , B )  :: CALL COINC ( # 14 , # 17 , 8 , D )  :: CALL COINC ( # 14 , # 18 , 8 , E )  :: IF A OR B OR D OR E THEN 720
  700 IF X = 0 THEN CALL MOTION ( # 14 , 8 * RND - 4 , 8 * RND - 4 ) 
  710 RETURN 
  720 CALL MOTION ( # 14 , 0 , 0 , # 17 , 0 , 0 , # 16 , 0 , 0 , # 18 , 0 , 0 , # 15 , 0 , 0 , # 22 , 0 , 0 , # 21 , 0 , 0 )  :: R = 6 
  730 CALL SOUND ( 500 , - 7 , 10 )  :: CALL COLOR ( # 14 , 7 )  :: CALL PATTERN ( # 14 , 132 ) 
  740 FOR T = 1 TO 200  :: NEXT T 
  750  ! @P+
  760 SUBEND 
  770 SUB START ( A )  :: GOTO 780 :: A , K = S  ::  ! @P-
  780 CALL SPRITE ( # 14 , 96 , 5 , 174 , 122 ) 
  790 CALL SPRITE ( # 21 , 140 , 15 , 100 , 60 , # 22 , 140 , 15 , 256 , 164 ) 
  800 CALL SPRITE ( # 15 , 96 , 13 , 10 , 90 , # 16 , 96 , 9 , 15 , 106 , # 17 , 96 , 14 , 20 , 122 , # 18 , 96 , 13 , 25 , 138 ) 
  810 CALL KEY ( A , K , S ) 
  820 IF K < > 18 THEN 810
  830 CALL MOTION ( # 21 , 32 , 0 , # 22 , 32 , 0 , # 15 , 10 , 0 , # 16 , 20 , 0 , # 17 , 22 , 0 , # 18 , 13 , 0 ) 
  840  ! @P+
  850 SUBEND 
  860 SUB PUNKTE ( S , P ( ) )  :: GOTO 870 :: S = W1  ::  ! @P-
  870 ON S GOSUB 920, 930
  880 DISPLAY AT ( 1 , W1 ) SIZE ( 8 )  : "PUNKTE" 
  890 DISPLAY AT ( 3 , W1 ) SIZE ( 9 )  : "SPIELER " & STR$ ( S ) & ":" 
  900 DISPLAY AT ( 5 , W1 ) SIZE ( 8 )  : P ( S ) 
  910 GOTO 950
  920 W1 = 1  :: RETURN 
  930 W1 = 19  :: RETURN 
  940  ! @P+
  950 SUBEND 
