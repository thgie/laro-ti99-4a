   10  ! GRAND-PRIX 2!!
   11 DIM P ( 2 ) 
   15 CALL CLEAR  :: CALL MAGNIFY ( 3 ) 
   20 CALL SPIELER ( SP ) 
   25 CALL TITELBILD 
   30 FOR V = 1 TO SP 
   32 CALL START ( V ) 
   35 R = - 4 
   40 CALL JOYST ( V , X , Y ) 
   60 CALL POSITION ( # 14 , HO , BR ) 
   70 IF BR > 148 OR BR < 82 THEN CALL GRENZE ( X , R )  :: IF R = 6 THEN CALL PUNKTE ( V , P ( ) )  :: GOTO 120ELSE 100
   80 IF HO > 164 THEN R = - 4 
   90 IF HO < 60 THEN R = 4 
   95 CALL COINC ( ALL , CO )  :: IF CO THEN R = 6  :: CALL GRENZE ( X , R )  :: CALL PUNKTE ( V , P ( ) )  :: GOTO 120
  100 CALL MOTION ( # 14 , R , X * 2 ) 
  105 P ( V ) = P ( V ) + 1 
  110 GOTO 40
  120 NEXT V 
  130 GOTO 30
10000 SUB TITELBILD 
10010 CALL CHAR ( 96 , "000F01090F0A02030707373F37011F1F00F08090F05040C0E0E0ECFCEC80F8F8" ) 
10015 CALL CHAR ( 140 , RPT$ ( "7F" , 16 ) & "FF" & RPT$ ( "7F" , 14 ) & "FF" ) 
10020 CALL CHAR ( 112 , "80808080808080800101010101010101" ) 
10030 CALL CHAR ( 100 , "000004091D2F061C0B0101070301000000000000801098FCF0F2F6FC18306" ) 
10031 CALL CHAR ( 104 , "000000005C484F79794F485C000000000000383B13FBFBFFFFFBFB133838" ) 
10032 CALL CHAR ( 108 , "0001030701010B1C062F1D0904000000603018FCF6F2F0FC98108" ) 
10033 CALL CHAR ( 116 , "1F1F01373F37070703020A0F09010F00F8F880ECFCECE0E0C04050F09080F" ) 
10034 CALL CHAR ( 120 , "00060C183F6F4F0F3F19080100000000000080C0E08080D03860F4B8902" ) 
10035 CALL CHAR ( 124 , "00001CDCC8DFDFFFFFDFDFC8DC1C0000000000003A12F29E9EF2123A" ) 
10036 CALL CHAR ( 128 , "000000000108193F0F4F6F3F180C060000002090B8F46038D08080E0C08" ) 
10037 CALL CHAR ( 132 , "000000010812000B23034B100A050000000000504CA008C0D2C0E208A0002" ) 
10040 CALL CLEAR 
10050 CALL SCREEN ( 4 ) 
10060 CALL COLOR ( 11 , 16 , 15 ) 
10070 FOR X = 12 TO 18 STEP 2 
10080 CALL VCHAR ( 1 , X , 112 , 24 ) 
10090 CALL VCHAR ( 1 , X + 1 , 113 , 24 ) 
10100 NEXT X 
11000 SUBEND 
12000 SUB SPIELER ( A ) 
12010 DISPLAY AT ( 12 , 3 )  : "ANZAHL SPIELER(1,2)?:1" 
12020 ACCEPT AT ( 12 , 24 ) BEEP SIZE ( - 1 ) VALIDATE ( "12" )  : A 
12030 SUBEND 
13000 SUB GRENZE ( X , R ) 
13005 CALL MOTION ( # 14 , R , X * 1.8 ) 
13010 IF R = 6 THEN 13400
13020 CALL PATTERN ( # 14 , 100 )  :: GOSUB 13300
13030 CALL PATTERN ( # 14 , 104 )  :: GOSUB 13300
13040 CALL PATTERN ( # 14 , 108 )  :: GOSUB 13300
13050 CALL PATTERN ( # 14 , 116 )  :: GOSUB 13300
13060 CALL PATTERN ( # 14 , 120 )  :: GOSUB 13300
13070 CALL PATTERN ( # 14 , 124 )  :: GOSUB 13300
13080 CALL PATTERN ( # 14 , 128 )  :: GOSUB 13300
13100 CALL PATTERN ( # 14 , 96 )  :: GOSUB 13300 :: SUBEXIT 
13300 CALL COINC ( # 14 , # 15 , 8 , A )  :: CALL COINC ( # 14 , # 16 , 8 , B )  :: CALL COINC ( # 14 , # 17 , 8 , D )  :: CALL COINC ( # 14 , # 18 , 8 , E )  :: IF A OR B OR D OR E THEN 13400
13310 IF X = 0 THEN CALL MOTION ( # 14 , 8 * RND - 4 , 8 * RND - 4 ) 
13320 RETURN 
13400 CALL MOTION ( # 14 , 0 , 0 , # 17 , 0 , 0 , # 16 , 0 , 0 , # 18 , 0 , 0 , # 15 , 0 , 0 , # 22 , 0 , 0 , # 21 , 0 , 0 )  :: R = 6 
13410 CALL SOUND ( 500 , - 7 , 10 )  :: CALL COLOR ( # 14 , 7 )  :: CALL PATTERN ( # 14 , 132 ) 
13990 FOR T = 1 TO 200  :: NEXT T  :: SUBEND 
14000 SUB START ( A ) 
14001 CALL SPRITE ( # 14 , 96 , 5 , 174 , 122 ) 
14002 CALL SPRITE ( # 21 , 140 , 15 , 100 , 60 , # 22 , 140 , 15 , 256 , 164 ) 
14003 CALL SPRITE ( # 15 , 96 , 13 , 10 , 90 , # 16 , 96 , 9 , 15 , 106 , # 17 , 96 , 14 , 20 , 122 , # 18 , 96 , 13 , 25 , 138 ) 
14010 CALL KEY ( A , K , S ) 
14020 IF K < > 18 THEN 14010
14030 CALL MOTION ( # 21 , 32 , 0 , # 22 , 32 , 0 , # 15 , 10 , 0 , # 16 , 20 , 0 , # 17 , 22 , 0 , # 18 , 13 , 0 ) 
14990 SUBEND 
15000 SUB PUNKTE ( S , P ( ) ) 
15010 ON S GOSUB 15100, 15200
15020 DISPLAY AT ( 1 , W1 ) SIZE ( 8 )  : "PUNKTE" 
15030 DISPLAY AT ( 3 , W1 ) SIZE ( 9 )  : "SPIELER " & STR$ ( S ) & ":" 
15040 DISPLAY AT ( 5 , W1 ) SIZE ( 8 )  : P ( S ) 
15050 GOTO 15990
15100 W1 = 1  :: RETURN 
15200 W1 = 19  :: RETURN 
15990 SUBEND 
