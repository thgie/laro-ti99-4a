    5 GOTO 25 :: I , Z$ , A , B , C , D , J , K 
   10 CALL CLEAR  :: CALL CHAR  :: CALL LOCATE  :: CALL PEEK  :: CALL MAGNIFY  :: CALL CHARSET  :: CALL SCREEN  :: CALL SPRITE  :: CALL SOUND  :: CALL KEY  :: CALL POSITION  :: CALL COLOR  :: CALL MOTION  :: CALL DELSPRITE  :: CALL DISTANCE 
   15 DATA 40 , EF8AEA2AEA000000001F11111F10101093AABBA8AB000000007D45457D714945 , 44 , A929B9A8A900000000F70404E70000F7DD15D555DD00000000DF1010DE5050DF 
   20  ! @P-
   25 CALL CLEAR 
   30 CALL SCREEN ( 2 ) 
   35 FOR I = 0 TO 14  :: CALL COLOR ( I , 16 , 2 )  :: NEXT I 
   40 READ C , Z$  :: IF C = 0 THEN 95
   45 CALL SCREEN ( 10 ) 
   50 CALL CHAR ( C , Z$ ) 
   55 CALL KEY ( 0 , I , J )  :: IF J THEN 230
   60 CALL SCREEN ( 5 )  :: GOTO 40
   65 DATA 48 , DD09C9090800000000456464544C4C4452555755A500000000F7444447404047 , 52 , 775467545700000000C00000C04040C000000000000000000 
   70 DATA 36 , 8000000000000000000000000000000000000000000000000000000000000001 
   75 DATA 56 , 00070810214284488F509050904080FF00C1229C808181829EA2A2A25D0000FF , 60 , 00C020908807000042444951600000FF0000000000FF0000718AF204F40000FF 
   80 DATA 64 , 0000030409F10207E424284A440000FF0000804020100F0022224445390000FF , 68 , 000000000001FE00C3A48F08070000FF001F21419915151599559515190101FF 
   85 DATA 0 , 0 , 51 , 134 , 60 , 15 , 35 , 98 , 157 , 79 , 52 , 157 , 222 , 108 , 177 , 11 , 16 , 146 , 199 , 150 , 71 , 5 , 28 , 159 , 40 
   90 DATA 28 , 9 , 46 , 86 , 88 , 154 , 136 , 176 , 28 , 81 , 87 , 33 , 127 , 199 , 131 
   95 CALL MAGNIFY ( 4 ) 
  100 FOR I = 9 TO 27 
  105 READ A , B 
  110 CALL SPRITE ( # I , 36 , 16 , B , A , 12 , 0 ) 
  115 NEXT I 
  120 FOR I = 1 TO 4 
  125 CALL SPRITE ( # I , 36 + I * 4 , 12 , 50 , 256 , 0 , - 16 ) 
  130 READ A , B , C  :: CALL SOUND ( - 4250 , A , 10 , B , 15 , C , 15 ) 
  135 FOR J = 1 TO 48  :: NEXT J 
  140 NEXT I 
  145 CALL KEY ( 0 , I , J )  :: IF J THEN 230
  150 CALL DISTANCE ( # 1 , 50 , 73 , D )  :: IF D > 9 THEN 150
  155 CALL DELSPRITE ( # 1 , # 2 , # 3 , # 4 )  :: CALL LOCATE ( # 1 , 50 , 73 , # 2 , 50 , 105 , # 3 , 50 , 137 , # 4 , 50 , 169 ) 
  160 DATA 262 , 330 , 392 , 262 , 330 , 392 , 294 , 370 , 440 , 262 , 330 , 392 
  165 FOR I = 0 TO 3 
  170 CALL SPRITE ( # I + 5 , 56 + I * 4 , 8 , 193 , 73 + I * 32 ) 
  175 NEXT I 
  180 CALL MOTION ( # 5 , - 8 , 0 , # 6 , - 8 , 0 , # 7 , - 8 , 0 , # 8 , - 8 , 0 ) 
  185 CALL DISTANCE ( # 5 , 120 , 73 , D )  :: IF D > 8 THEN 185
  190 CALL DELSPRITE ( # 5 , # 6 , # 7 , # 8 )  :: CALL LOCATE ( # 5 , 120 , 73 , # 6 , 120 , 105 , # 7 , 120 , 137 , # 8 , 120 , 169 ) 
  195 CALL MOTION ( # 1 , - 12 , 0 , # 2 , - 12 , 0 , # 3 , - 12 , 0 , # 4 , - 12 , 0 )  :: J = 9 
  200 CALL DELSPRITE ( # J )  :: J = J + .5  :: CALL POSITION ( # 1 , I , K )  :: IF I < 192 OR I > 244 THEN 200
  205 FOR J = J TO 28  :: CALL DELSPRITE ( # J )  :: NEXT J 
  210 CALL DELSPRITE ( ALL ) 
  215 FOR I = 0 TO 4  :: FOR J = 0 TO 3  :: CALL SPRITE ( # 1 + I * 4 + J , 56 + J * 4 , 10 + I , 9 + I * 36 , 69 + J * 32 )  :: NEXT J  :: NEXT I 
  220 CALL KEY ( 0 , I , J )  :: IF J < 1 THEN 220
  225 CALL SOUND ( - 4250 , - 5 , 10 ) 
  230 CALL DELSPRITE ( ALL ) 
  235 CALL SCREEN ( 16 ) 
  240 CALL CHARSET 
  245 CALL SOUND ( - 1 , 110 , 30 ) 
  250 CALL SCREEN ( 8 ) 
  255  ! @P+
  260 DIM MON ( 10 , 2 ) , TRA ( 10 , 2 ) 
  290 CALL CLEAR  :: CALL CHARSET  :: CALL SCREEN ( 4 ) 
  300 DISPLAY AT ( 1 , 3 )  : "IHRE WAHL ?"  :  : TAB ( 5 )  ; "1 SPIEL"  :  : TAB ( 5 )  ; "2 SPIELFELD AUFSTELLEN"  :  : TAB ( 5 )  ; "3 SPIELFELD LADEN"  :  : TAB ( 5 )  ; "4 BEENDEN" 
  310 CALL KEY ( 0 , K , S )  :: IF K < 49 OR K > 52 THEN 310
  320 CALL CLEAR  :: CALL SCREEN ( 2 )  :: ON K - 48 GOTO 400, 1000, 32767, 32767
  400 SPIEL = 0  :: GOSUB 10000
  410 SPIEL = SPIEL + 1 
  420 ON SPIEL GOTO 500, 600, 700, 800
  430 GOSUB 5000
  440 IF ANZ < 1 THEN 290
  450 GOTO 410
  500 DISPLAY AT ( 1 , 1 )  : "" 
  510 DISPLAY AT ( 5 , 1 )  : "" 
  520 DISPLAY AT ( 9 , 1 )  : "" 
  530 DISPLAY AT ( 13 , 1 ) 
  540 DISPLAY AT ( 17 , 1 ) 
  550 DISPLAY AT ( 21 , 1 ) 
  560 GOTO 430
 1000 DISPLAY AT ( 24 , 1 )  : " !"#$ ( 8 D E F G       @ A"  :: FOR I = 1 TO 10  :: TRA ( I , 1 ) , TRA ( I , 2 ) , MON ( I , 1 ) , MON ( I , 2 ) = 0  :: NEXT I  :: MNX , MNY = 0 
 1010 CALL MAGNIFY ( 1 )  :: GOSUB 10000 :: GOSUB 10800
 1020 X0 = 3  :: Y0 = 1  :: C = 32  :: CALL SPRITE ( # 1 , 66 , 16 , 1 , 17 ) 
 1030 CALL JOYST ( 1 , X1 , Y1 ) 
 1040 X0 = X0 + X1 / 4  :: IF X0 > 30 THEN X0 = 30 ELSE IF X0 < 3 THEN X0 = 3 
 1050 Y0 = Y0 - Y1 / 4  :: IF Y0 > 24 THEN Y0 = 24 ELSE IF Y0 < 1 THEN Y0 = 1 
 1060 CALL LOCATE ( # 1 , Y0 * 8 - 7 , X0 * 8 - 7 ) 
 1070 CALL KEY ( 1 , K , S )  :: IF K < > 18 THEN 1030
 1080 IF Y0 > 22 THEN CALL GCHAR ( Y0 , X0 , C )  :: IF C = 32 THEN CALL PATTERN ( # 1 , 66 )  :: GOTO 1030ELSE CALL PATTERN ( # 1 , C )  :: IF C < 68 THEN 1030ELSE GOTO 2100
 1090 CALL GCHAR ( Y0 , X0 , Z )  :: IF Z < 56 THEN IF C < 56 THEN CALL HCHAR ( Y0 , X0 , C )  :: GOTO 1030ELSE 1500
 1100 IF Z = 64 THEN MNX , MNY = 0  :: GOTO 1500
 1110 IF Z < > 65 THEN 1150
 1120 FOR I = 1 TO 10  :: IF MON ( I , 1 ) = Y0 AND MON ( I , 2 ) = X0 THEN MON ( I , 1 ) , MON ( I , 2 ) = 0  :: GOTO 1500
 1130 NEXT I  :: GOTO 1500
 1150 IF Z < > 56 THEN 1200
 1160 FOR I = 1 TO 10  :: IF TRA ( I , 1 ) = Y0 AND TRA ( I , 2 ) = X0 THEN TRA ( I , 1 ) , TRA ( I , 2 ) = 0  :: GOTO 1500
 1170 NEXT I  :: GOTO 1500
 1200  ! 
 1210 GOTO 1030
 1500 IF C < > 56 THEN 1550
 1510 FOR I = 1 TO 10  :: IF TRA ( I , 1 ) = 0 AND TRA ( I , 2 ) = 0 THEN TRA ( I , 1 ) = Y0  :: TRA ( I , 2 ) = X0  :: GOTO 2000
 1520 NEXT I  :: C = 32  :: GOTO 2000
 1550 CALL GCHAR ( Y0 + 1 , X0 , Z1 )  :: IF C < > 65 OR Z1 < > 32 THEN 1600
 1560 FOR I = 1 TO 10  :: IF MON ( I , 1 ) = 0 AND MON ( I , 2 ) = 0 THEN MON ( I , 1 ) = Y0  :: MON ( I , 2 ) = X0  :: GOTO 2000
 1570 NEXT I  :: C = 32  :: GOTO 2000
 1600 CALL GCHAR ( Y0 + 1 , X0 , Z1 )  :: IF C = 64 AND Z1 = 32 THEN IF MNY = 0 AND MNX = 0 THEN MNY = Y0  :: MNX = X0  :: GOTO 2000ELSE C = 32 
 2000 CALL HCHAR ( Y0 , X0 , C )  :: GOTO 1030
 2100 IF C = 68 THEN CALL CLEAR  :: GOTO 1000
 2110 IF C < > 69 THEN 2200
 2120 CALL COLOR ( 5 , 1 , 1 ) 
 2130 ANZ = 5 
 2140 GOSUB 5000
 2150 IF ANZ < 1 THEN END ELSE 2140
 2200 IF C < > 70 THEN 2250
 2210 CALL COLOR ( 5 , 1 , 1 )  :: GOSUB 5000 :: GOTO 1030
 2250 IF C < > 71 THEN STOP 
 2260 GOTO 2260
 5000 CALL MAGNIFY ( 3 ) 
 5010 CALL COLOR ( 5 , 1 , 1 ) 
 5020 CALL HCHAR ( 24 , 1 , 32 , 32 ) 
 5030 CALL SPRITE ( # 11 , 60 , 16 , MNY * 8 - 7 , MNX * 8 - 7 ) 
 5040 FOR I = 1 TO 10 
 5050 FOR J = 1 TO I - 1 
 5060 IF ABS ( MON ( J , 1 ) - MON ( I , 1 ) ) < 2 THEN 5100
 5070 NEXT J 
 5080 IF MON ( I , 1 ) = 0 OR MON ( I , 2 ) = 0 THEN 5100
 5090 CALL SPRITE ( # I , 44 , INT ( RND * 3 + 12 ) , MON ( I , 1 ) * 8 - 7 , MON ( I , 2 ) * 8 - 7 , 0 , SGN ( RND - .5 ) * INT ( RND * 4 + 4 ) ) 
 5100 NEXT I 
 5110 GOTO 5110
10000 RESTORE 10100
10010 READ C , Z$  :: IF C = 0 THEN RETURN 
10020 CALL CHAR ( C , Z$ )  :: GOTO 10010
10100 DATA 33 , 1F3F316161313F0FF8FC8C86868CFCF8FFFF81999981FFFFFFFF81818181FFFF , 37 , FFFF81818181FFFF 
10110 DATA 64 , 183C183CFF183C66146E7FEA7FFE7F2AFF818181818181FF , 40 , C3FFFFC3C3FFFFC3 , 56 , FFAA55AA55AA55FF 
10120 DATA 68 , 00D3929391DB000078444444784040407C101010101010103C42403C02423C 
10130 DATA 44 , 071F3F33737FFFFFFFFFFFF7E7E7E7E7E0F8FCCCCEFEFFFFFFFFFFEFE7E7E7E7 
10140 DATA 60 , 0307070703070F1F3F3F0F0E0E0E0E0E80C0C0C080C0E0F0F8F8E0E0E0E0E0E0 
10500 DATA 0 , 0 
10800 CALL COLOR ( 1 , 4 , 1 , 2 , 12 , 1 , 4 , 16 , 1 , 5 , 16 , 1 ) 
10810 RETURN 
32767 END 
