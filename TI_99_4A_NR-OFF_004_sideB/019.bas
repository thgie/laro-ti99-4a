  100 REM   PROGRAM:3-D TIC TAC TOE    
  110 REM    VERSION 1 / GERMAN / NOV 1982 
  120 REM    COPYRIGHT 1982 BY TEXAS INSTRUMENTS DEUTSCHLAND GMBH 
  130 CALL CLEAR 
  140 FOR I = 1 TO 8 
  150 CALL COLOR ( I , 2 , 8 ) 
  160 NEXT I 
  170 CALL COLOR ( 9 , 2 , 5 ) 
  180 CALL COLOR ( 10 , 2 , 16 ) 
  190 CALL COLOR ( 11 , 2 , 7 ) 
  200 CALL COLOR ( 12 , 2 , 8 ) 
  210 CALL CHAR ( 34 , "0101010101010101" ) 
  220 CALL CHAR ( 35 , "808080808080808" ) 
  230 CALL CHAR ( 43 , "3C4299A1A199423C" ) 
  240 CALL CHAR ( 96 , "0" ) 
  250 CALL CHAR ( 122 , "FFC0A09088848281" ) 
  260 CALL CHAR ( 120 , "FF000000000000FF" ) 
  270 CALL CHAR ( 123 , "80C06030180C06FF" ) 
  280 CALL CHAR ( 121 , "FF6030180C0603FF" ) 
  290 CALL CHAR ( 124 , "8040201008040201" ) 
  300 CALL CHAR ( 125 , "FF01010101010101" ) 
  310 CALL CHAR ( 126 , "0303030303030303" ) 
  320 CALL CHAR ( 127 , "0303030303030301" ) 
  330 CALL CHAR ( 104 , "FF000000000000FF" ) 
  340 CALL CHAR ( 112 , "FF000000000000FF" ) 
  350 CALL CHAR ( 91 , "FF" ) 
  360 CALL CHAR ( 92 , "0101010101010101" ) 
  370 REM  TITLE SCREEN**** 
  380 GOSUB 3110
  390 PRINT "      3-D TIC TAC TOE"  :  : "  "  ; CHR$ ( 43 )  ; " 1982 TEXAS INSTRUMENTS"  :  :  :  :  :  :  :  :  :  : 
  400 PRINT "   DRUECKEN SIE EINE TASTE" 
  410 CALL KEY ( 0 , KEY , ST ) 
  420 IF ST < = 0 THEN 410
  430 OPTION BASE 1 
  440 DIM X ( 64 ) , L ( 76 ) , M ( 76 , 4 ) , Y$ ( 16 ) 
  450 REM  PRINT INSTRUCTIONS***    
  460 GOSUB 3110
  470 PRINT " 3-D TIC TAC TOE IST EINE"  : " COMPUTERVERSION DIESES"  : " SPIELES AUF 4 RAUMEBENEN."  : " " 
  480 PRINT " DAS ZIEL IST ES, 4 STEINE"  : " LAENGS EINER DIAGONALEN," 
  490 PRINT " HORIZONTALEN ODER VERTIKA-"  : " LEN REIHE ZU SETZEN."  :  : " EINE DREISTELLIGE ZAHL," 
  500 PRINT " BESTEHEND AUS ZIFFERN VON"  : " 1 BIS 4, BESTIMMT DEN ZUG."  : " AN ERSTER STELLE STEHT" 
  510 PRINT " DIE EBENE, AN ZWEITER DIE"  : " REIHE UND AN DRITTER DIE"  : " SPALTE." 
  520 PRINT  :  :  : "  DRUECKEN SIE EINE TASTE" 
  530 CALL KEY ( 0 , KEY , ST ) 
  540 IF ST < = 0 THEN 530
  550 GOSUB 3110
  560 PRINT "       VORBEREITUNGEN"  : "        SIND IM GANG"  :  :  :  :  :  :  :  :  :  :  :  :  : "        BITTE WARTEN" 
  570 FOR I = 1 TO 16 
  580 READ Y$ ( I ) 
  590 NEXT I 
  600 FOR I = 1 TO 76 
  610 FOR J = 1 TO 4 
  620 READ M ( I , J ) 
  630 NEXT J 
  640 NEXT I 
  650 FOR I = 1 TO 64 
  660 X ( I ) = 0 
  670 NEXT I 
  680 Z = 1 
  690 REM  MAKE BOARD******** 
  700 CALL CLEAR 
  710 CALL SCREEN ( 8 ) 
  720 S1$ = CHR$ ( 120 ) & CHR$ ( 120 ) 
  730 FOR N = 1 TO 4 
  740 S$ = "          " & CHR$ ( 124 ) 
  760 FOR I = 1 TO 4 
  770 PRINT S$  ; CHR$ ( 122 )  ; S1$  ; CHR$ ( 121 )  ; S1$  ; CHR$ ( 121 )  ; S1$  ; CHR$ ( 121 )  ; S1$  ; CHR$ ( 123 ) 
  780 S$ = " " & S$ 
  790 NEXT I 
  800 PRINT S$ 
  810 CALL HCHAR ( 19 , 13 , 32 ) 
  820 PRINT TAB ( 16 )  ; "[[[[[[[[[[[[ "  ; 
  830 FOR COL = 20 TO 29 STEP 3 
  840 CALL HCHAR ( 23 , COL , 92 ) 
  850 NEXT COL 
  860 NEXT N 
  870 CALL VCHAR ( 1 , 13 , 126 , 18 ) 
  880 CALL VCHAR ( 19 , 13 , 127 ) 
  890 S$ = "ZIEHEN SIEZUERST?   (J/N)_" 
  900 GOSUB 3170
  910 CALL KEY ( 0 , KEY , ST ) 
  920 IF ST < = 0 THEN 910
  930 CALL HCHAR ( 7 , 8 , KEY ) 
  940 S$ = "" 
  950 GOSUB 3170
  960 IF KEY = 78 THEN 1160
  970 S$ = "IHR ZUG?  " 
  980 FOR I = 1 TO 10 
  990 CALL HCHAR ( 2 , I + 2 , ASC ( SEG$ ( S$ , I , 10 ) ) ) 
 1000 NEXT I 
 1010 CALL HCHAR ( 3 , 3 , 32 , 4 ) 
 1020 GOSUB 3310
 1030 J1 = VAL ( S$ ) 
 1040 GOSUB 3060
 1050 K1 = INT ( J1 / 100 ) 
 1060 J2 = ( J1 - K1 * 100 ) 
 1070 K2 = INT ( J2 / 10 ) 
 1080 K3 = J1 - K1 * 100 - K2 * 10 
 1090 M1 = 16 * K1 + 4 * K2 + K3 - 20 
 1100 IF X ( M1 ) = 0 THEN 1140
 1110 S$ = "NICHT FREINOCHEINMAL" 
 1120 GOSUB 3170
 1130 GOTO 970
 1140 X ( M1 ) = 1 
 1150 CALL HCHAR ( ( K1 - 1 ) * 6 + K2 , 15 + ( K3 - 1 ) * 3 + K2 - 1 , 104 , 2 ) 
 1160 S$ = "COMPUTER  DENKT..." 
 1170 GOSUB 3170
 1180 GOSUB 2180
 1190 FOR J = 1 TO 3 
 1200 FOR I = 1 TO 76 
 1210 IF J = 1 THEN 1270
 1220 IF J = 2 THEN 1310
 1230 IF J = 3 THEN 1420
 1240 NEXT I 
 1250 NEXT J 
 1260 GOTO 1810
 1270 IF L ( I ) < > 4 THEN 1240
 1280 S$ = "SIE HABEN GEWONNEN!" 
 1290 GOSUB 3170
 1300 GOTO 2000
 1310 IF L ( I ) < > 15 THEN 1240
 1320 FOR J = 1 TO 4 
 1330 M1 = M ( I , J ) 
 1340 IF X ( M1 ) < > 0 THEN 1380
 1350 X ( M1 ) = 5 
 1360 GOSUB 2100
 1370 GOTO 1390
 1380 NEXT J 
 1390 S$ = "COMPUTER  ZIEHT     " & STR$ ( M1 ) & " UND   SIEGT!!" 
 1400 GOSUB 3170
 1410 GOTO 2000
 1420 IF L ( I ) < > 3 THEN 1240
 1430 FOR J = 1 TO 4 
 1440 M1 = M ( I , J ) 
 1450 IF X ( M1 ) < > 0 THEN 1510
 1460 X ( M1 ) = 5 
 1470 GOSUB 2100
 1480 S$ = "GUTE IDEE!COMPUTER  ZIEHT     " & STR$ ( M1 ) & "." 
 1490 GOSUB 3170
 1500 GOTO 970
 1510 NEXT J 
 1520 GOTO 1810
 1530 FOR I = 1 TO 76 
 1540 L ( I ) = X ( M ( I , 1 ) ) + X ( M ( I , 2 ) ) + X ( M ( I , 3 ) ) + X ( M ( I , 4 ) ) 
 1550 L1 = L ( I ) 
 1560 IF L1 < 2 THEN 1630
 1570 IF L1 > = 3 THEN 1630
 1580 IF L1 > 2 THEN 2750
 1590 FOR J = 1 TO 4 
 1600 IF X ( M ( I , J ) ) < > 0 THEN 1620
 1610 X ( M ( I , J ) ) = 1 / 8 
 1620 NEXT J 
 1630 NEXT I 
 1640 GOSUB 2180
 1650 FOR I = 1 TO 76 
 1660 IF L ( I ) = 1 / 2 THEN 2910
 1670 IF L ( I ) = 1 + 3 / 8 THEN 2910
 1680 NEXT I 
 1690 GOTO 2350
 1700 Z = 1 
 1710 IF X ( VAL ( Y$ ( Z ) ) ) = 0 THEN 1750
 1720 Z = Z + 1 
 1730 IF Z < > 17 THEN 1710
 1740 GOTO 2230
 1750 M1 = VAL ( Y$ ( Z ) ) 
 1760 X ( M1 ) = 5 
 1770 GOSUB 2100
 1780 S$ = "COMPUTER  ZIEHT     " & STR$ ( M1 ) & "." 
 1790 GOSUB 3170
 1800 GOTO 970
 1810 REM  
 1820 FOR I = 1 TO 76 
 1830 L ( I ) = X ( M ( I , 1 ) ) + X ( M ( I , 2 ) ) + X ( M ( I , 3 ) ) + X ( M ( I , 4 ) ) 
 1840 L1 = L ( I ) 
 1850 IF L1 < 10 THEN 1920
 1860 IF L1 > = 11 THEN 1920
 1870 IF L1 > 10 THEN 2750
 1880 FOR J = 1 TO 4 
 1890 IF X ( M ( I , J ) ) < > 0 THEN 1910
 1900 X ( M ( I , J ) ) = 1 / 8 
 1910 NEXT J 
 1920 NEXT I 
 1930 GOSUB 2180
 1940 FOR I = 1 TO 76 
 1950 IF L ( I ) = .5 THEN 2910
 1960 IF L ( I ) = 5 + 3 / 8 THEN 2910
 1970 NEXT I 
 1980 GOSUB 3060
 1990 GOTO 1530
 2000 S$ = "NOCH EIN  SPIEL     (J/N)?_" 
 2010 ROW = 11 
 2020 COL = 3 
 2030 GOSUB 3230
 2040 CALL KEY ( 0 , KEY , ST ) 
 2050 IF ST < = 0 THEN 2040
 2060 IF KEY = 74 THEN 650
 2070 CALL CLEAR 
 2080 STOP 
 2090 REM  ****  
 2100 K1 = INT ( ( M1 - 1 ) / 16 ) + 1 
 2110 J2 = M1 - 16 * ( K1 - 1 ) 
 2120 K2 = INT ( ( J2 - 1 ) / 4 ) + 1 
 2130 K3 = M1 - ( K1 - 1 ) * 16 - ( K2 - 1 ) * 4 
 2140 M1 = K1 * 100 + K2 * 10 + K3 
 2150 CALL HCHAR ( ( K1 - 1 ) * 6 + K2 , 15 + ( K3 - 1 ) * 3 + K2 - 1 , 112 , 2 ) 
 2160 RETURN 
 2170 REM  *******************     
 2180 FOR S = 1 TO 76 
 2190 L ( S ) = X ( M ( S , 1 ) ) + X ( M ( S , 2 ) ) + X ( M ( S , 3 ) ) + X ( M ( S , 4 ) ) 
 2200 NEXT S 
 2210 RETURN 
 2220 REM  *******************     
 2230 FOR I = 1 TO 64 
 2240 IF X ( I ) < > 0 THEN 2310
 2250 X ( I ) = 5 
 2260 M1 = I 
 2270 GOSUB 2100
 2280 S$ = "COMPUTER  ERFREUT   " & STR$ ( M1 ) & "." 
 2290 GOSUB 3170
 2300 GOTO 970
 2310 NEXT I 
 2320 S$ = "UNENT-    SCHIEDEN ." 
 2330 GOSUB 3170
 2340 GOTO 2000
 2350 FOR K = 1 TO 18 
 2360 P = 0 
 2370 FOR I = 4 * K - 3 TO 4 * K 
 2380 FOR J = 1 TO 4 
 2390 P = P + X ( M ( I , J ) ) 
 2400 NEXT J 
 2410 NEXT I 
 2420 IF P < 4 THEN 2460
 2430 IF P < 5 THEN 2490
 2440 IF P < 9 THEN 2460
 2450 IF P < 10 THEN 2490
 2460 NEXT K 
 2470 GOSUB 3060
 2480 GOTO 1700
 2490 S = 1 / 8 
 2500 FOR I = 4 * K - 3 TO 4 * K 
 2510 GOTO 2920
 2520 NEXT I 
 2530 S = 0 
 2540 GOTO 2500
 2550 DATA 1 , 49 , 52 , 4 , 13 , 61 , 64 , 16 , 22 , 39 , 23 , 38 , 26 , 42 , 27 , 43 
 2560 DATA 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 
 2570 DATA 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 
 2580 DATA 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 
 2590 DATA 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 
 2600 DATA 1 , 17 , 33 , 49 , 5 , 21 , 37 , 53 , 9 , 25 , 41 , 57 , 13 , 29 , 45 , 61 
 2610 DATA 2 , 18 , 34 , 50 , 6 , 22 , 38 , 54 , 10 , 26 , 42 , 58 , 14 , 30 , 46 , 62 
 2620 DATA 3 , 19 , 35 , 51 , 7 , 23 , 39 , 55 , 11 , 27 , 43 , 59 , 15 , 31 , 47 , 63 
 2630 DATA 4 , 20 , 36 , 52 , 8 , 24 , 40 , 56 , 12 , 28 , 44 , 60 , 16 , 32 , 48 , 64 
 2640 DATA 1 , 5 , 9 , 13 , 17 , 21 , 25 , 29 , 33 , 37 , 41 , 45 , 49 , 53 , 57 , 61 
 2650 DATA 2 , 6 , 10 , 14 , 18 , 22 , 26 , 30 , 34 , 38 , 42 , 46 , 50 , 54 , 58 , 62 
 2660 DATA 3 , 7 , 11 , 15 , 19 , 23 , 27 , 31 , 35 , 39 , 43 , 47 , 51 , 55 , 59 , 63 
 2670 DATA 4 , 8 , 12 , 16 , 20 , 24 , 28 , 32 , 36 , 40 , 44 , 48 , 52 , 56 , 60 , 64 
 2680 DATA 1 , 6 , 11 , 16 , 17 , 22 , 27 , 32 , 33 , 38 , 43 , 48 , 49 , 54 , 59 , 64 
 2690 DATA 13 , 10 , 7 , 4 , 29 , 26 , 23 , 20 , 45 , 42 , 39 , 36 , 61 , 58 , 55 , 52 
 2700 DATA 1 , 21 , 41 , 61 , 2 , 22 , 42 , 62 , 3 , 23 , 43 , 63 , 4 , 24 , 44 , 64 
 2710 DATA 49 , 37 , 25 , 13 , 50 , 38 , 26 , 14 , 51 , 39 , 27 , 15 , 52 , 40 , 28 , 16 
 2720 DATA 1 , 18 , 35 , 52 , 5 , 22 , 39 , 56 , 9 , 26 , 43 , 60 , 13 , 30 , 47 , 64 
 2730 DATA 49 , 34 , 19 , 4 , 53 , 38 , 23 , 8 , 57 , 42 , 27 , 12 , 61 , 46 , 31 , 16 
 2740 DATA 1 , 22 , 43 , 64 , 16 , 27 , 38 , 49 , 4 , 23 , 42 , 61 , 13 , 26 , 39 , 52 
 2750 FOR J = 1 TO 4 
 2760 IF X ( M ( I , J ) ) < > 1 / 8 THEN 2870
 2770 X ( M ( I , J ) ) = 5 
 2780 M1 = M ( I , J ) 
 2790 GOSUB 2100
 2800 IF L ( I ) < 5 THEN 2840
 2810 S$ = "ZEIGEN SIEWAS SIE   JETZT NOCHSPIELEN:  COMPUTER  ZIEHT     " & STR$ ( M1 ) & "." 
 2820 GOSUB 3170
 2830 GOTO 2860
 2840 S$ = "SIE FUCHS!GENAU IM  RICHTIGEN MOMENT!   COMPUTER  ZIEHT     " & STR$ ( M1 ) & "." 
 2850 GOSUB 3170
 2860 GOTO 970
 2870 NEXT J 
 2880 S$ = "COMPUTER  GIBT DAS  SPIEL AUF." 
 2890 GOSUB 3170
 2900 GOTO 2000
 2910 S = 1 / 8 
 2920 IF I - INT ( I / 4 ) * 4 > 1 THEN 2950
 2930 A = 1 
 2940 GOTO 2960
 2950 A = 2 
 2960 FOR J = A TO 5 - A STEP 5 - 2 * A 
 2970 IF X ( M ( I , J ) ) = S THEN 3000
 2980 NEXT J 
 2990 GOTO 2520
 3000 X ( M ( I , J ) ) = 5 
 3010 M1 = M ( I , J ) 
 3020 GOSUB 2100
 3030 S$ = "COMPUTER  NIMMT " & STR$ ( M1 ) & "." 
 3040 GOSUB 3170
 3050 GOTO 970
 3060 FOR I = 1 TO 64 
 3070 IF X ( I ) < > 1 / 8 THEN 3090
 3080 X ( I ) = 0 
 3090 NEXT I 
 3100 RETURN 
 3110 REM  SCREEN CLEAR*** 
 3120 CALL CLEAR 
 3130 CALL SCREEN ( 5 ) 
 3140 CALL VCHAR ( 1 , 1 , 96 , 48 ) 
 3150 CALL VCHAR ( 1 , 31 , 96 , 48 ) 
 3160 RETURN 
 3170 REM  DISPLAY MESSAGE*****    
 3180 ROW = 5 
 3190 COL = 3 
 3200 FOR N = ROW TO 12 
 3210 CALL HCHAR ( N , COL , 32 , 10 ) 
 3220 NEXT N 
 3230 FOR N = 1 TO LEN ( S$ ) 
 3240 CALL HCHAR ( ROW , COL , ASC ( SEG$ ( S$ , N , 28 ) ) ) 
 3250 COL = COL + 1 
 3260 IF COL < 13 THEN 3290
 3270 COL = 3 
 3280 ROW = ROW + 1 
 3290 NEXT N 
 3300 RETURN 
 3310 REM  CURSOR ***** 
 3320 ROW = 3 
 3330 BEG = 3 
 3340 CUR = BEG 
 3350 IND = BEG + 2 
 3360 IF CUR > = BEG THEN 3390
 3370 CUR = BEG 
 3380 GOTO 3410
 3390 IF CUR < = IND THEN 3410
 3400 CUR = IND 
 3410 CALL GCHAR ( ROW , CUR , G ) 
 3420 CALL HCHAR ( ROW , CUR , 95 ) 
 3430 IF CURI < > 6 THEN 3460
 3440 CURI = 0 
 3450 CALL HCHAR ( ROW , CUR , G ) 
 3460 CURI = CURI + 1 
 3470 CALL KEY ( 0 , KEY , ST ) 
 3480 IF ST < = 0 THEN 3420
 3490 CALL HCHAR ( ROW , CUR , G ) 
 3500 IF KEY = 32 THEN 3540
 3510 IF KEY = 45 THEN 3540
 3520 IF KEY < 49 THEN 3570
 3530 IF KEY > 52 THEN 3570
 3540 CALL HCHAR ( ROW , CUR , KEY ) 
 3550 CUR = CUR + 1 
 3560 GOTO 3360
 3570 IF KEY = 13 THEN 3640
 3580 IF KEY < > 8 THEN 3610
 3590 CUR = CUR - 1 
 3600 GOTO 3360
 3610 IF KEY < > 9 THEN 3360
 3620 CUR = CUR + 1 
 3630 GOTO 3360
 3640 REM  LOAD INPUT**** 
 3650 S$ = "" 
 3660 FOR N = BEG TO IND 
 3670 CALL GCHAR ( ROW , N , G ) 
 3680 S$ = S$ & CHR$ ( G ) 
 3690 NEXT N 
 3700 IF VAL ( S$ ) < 111 THEN 3310
 3710 IF VAL ( S$ ) > 444 THEN 3310
 3720 RETURN 
