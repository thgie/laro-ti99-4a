  220 GOTO 410 :: CALL CHAR  :: CALL CHARSET  :: CALL CLEAR  :: CALL COLOR  :: CALL GCHAR  :: CALL HCHAR  :: CALL SCREEN  :: CALL SOUND  :: CALL VCHAR 
  230 CALL MAGNIFY  :: CALL SPRITE  :: CALL DELSPRITE  :: CALL MOTION  :: CALL LOCATE  :: CALL POSITION  :: CALL COINC  :: CALL JOYST  :: CALL KEY 
  240 D , GF , H , FC , B , RETT , FROE , V , VV , X , X1 , Y , Y1 , Z , K , S , VERZ , DEL , PUNKTE , R , CO 
  250 DIM C ( 14 ) 
  260  ! @P-
  410 CALL CLEAR  :: CALL CHARSET  :: CALL SCREEN ( 5 ) 
  420 CALL COLOR ( 0 , 16 , 1 , 1 , 16 , 1 , 2 , 16 , 1 , 3 , 16 , 1 , 4 , 16 , 1 , 5 , 16 , 1 , 6 , 16 , 1 , 7 , 16 , 1 , 8 , 16 , 1 ) 
  430 CALL COLOR ( 10 , 16 , 1 , 12 , 16 , 5 , 13 , 16 , 9 )  :: CALL CHAR ( 64 , "3C4299A1A199423C" , 104 , "000000FF" ) 
  440 CALL CHAR ( 128 , "FF8083838383BFBFFF01C1C1C1C1FDFDBFBF8383838380FFFDFDC1C1C1C101FF" ) 
  450 DISPLAY AT ( 1 , 11 )  : "19"  :: CALL HCHAR ( 1 , 16 , 128 )  :: CALL HCHAR ( 1 , 17 , 129 )  :: CALL HCHAR ( 2 , 16 , 130 )  :: CALL HCHAR ( 2 , 17 , 131 )  :: DISPLAY AT ( 1 , 17 )  : "84" 
  460 DISPLAY AT ( 5 , 6 )  : "@ TI HOME COMPUTER"  :: CALL HCHAR ( 6 , 8 , 104 , 18 )  :: DISPLAY AT ( 7 , 2 )  : "BENUTZER-CLUB SCHWEIZ (TIC)"  :: CALL HCHAR ( 8 , 4 , 104 , 27 ) 
  462 DISPLAY AT ( 10 , 9 )  : "PRAESENTIERT"  :: DISPLAY AT ( 15 , 8 )  : "F R O G P A T H"  :  : "     (BESTELLNUMMER 1222)" 
  464 CALL HCHAR ( 12 , 3 , 42 , 29 )  :: CALL VCHAR ( 13 , 31 , 42 , 7 )  :: CALL HCHAR ( 20 , 3 , 42 , 29 )  :: CALL VCHAR ( 13 , 3 , 42 , 7 ) 
  466 DISPLAY AT ( 24 , 6 )  : "## MOMENT BITTE ##" 
  468 CALL SOUND ( 250 , 880 , 5 , 587 , 9 , 370 , 9 )  :: CALL SOUND ( 250 , 880 , 5 , 587 , 9 , 370 , 9 )  :: CALL SOUND ( 250 , 988 , 5 , 587 , 9 , 392 , 9 ) 
  470 CALL SOUND ( 250 , 880 , 5 , 587 , 9 , 370 , 9 )  :: CALL SOUND ( 250 , 740 , 5 , 494 , 9 , 440 , 9 )  :: CALL SOUND ( 250 , 587 , 5 , 370 , 9 , 294 , 9 ) 
  472 CALL SOUND ( 250 , 740 , 5 , 587 , 9 , 440 , 9 )  :: CALL SOUND ( 250 , 880 , 5 , 587 , 5 , 370 , 9 )  :: CALL SOUND ( 250 , 988 , 5 , 587 , 9 , 392 , 9 ) 
  474 CALL SOUND ( 250 , 880 , 5 , 587 , 9 , 370 , 9 )  :: CALL SOUND ( 750 , 740 , 5 , 587 , 9 , 440 , 9 )  :: CALL SOUND ( 750 , 880 , 5 , 587 , 9 , 440 , 9 ) 
  476 CALL SOUND ( 700 , 988 , 5 , 622 , 9 , 500 , 9 )  :: CALL SOUND ( 400 , 784 , 5 , 622 , 9 , 494 , 9 )  :: CALL SOUND ( 220 , 740 , 5 , 622 , 9 , 440 , 9 ) 
  480 CALL SOUND ( 350 , 784 , 5 , 622 , 9 , 494 , 9 )  :: CALL SOUND ( 1000 , 659 , 5 , 392 , 9 , 330 , 9 )  :: FOR VERZ = 1 TO 500  :: NEXT VERZ  :: CALL CLEAR  :: CALL CHARSET 
  520 CALL CLEAR  :: RANDOMIZE 
  530 CALL DELSPRITE ( ALL ) 
  540 DISPLAY AT ( 23 , 1 ) 
  550 V , R , RETT , PUNKTE = 0  :: FROE = 10 
  560 CALL SCREEN ( 12 )  :: CALL COLOR ( 9 , 14 , 14 , 10 , 6 , 6 , 11 , 8 , 8 , 14 , 13 , 1 ) 
  570 DISPLAY AT ( 1 , 1 )  : "PUNKTE:" 
  580 CALL MAGNIFY ( 3 ) 
  590 CALL HCHAR ( 2 , 1 , 97 , 32 )  :: CALL HCHAR ( 22 , 1 , 97 , 32 ) 
  600 CALL HCHAR ( 21 , 1 , 104 , 32 )  :: CALL HCHAR ( 3 , 1 , 104 , 32 )  :: CALL HCHAR ( 4 , 1 , 104 , 3 )  :: CALL HCHAR ( 4 , 5 , 105 , 5 )  :: CALL HCHAR ( 4 , 11 , 104 , 5 ) 
  610 CALL HCHAR ( 4 , 17 , 104 , 5 )  :: CALL HCHAR ( 4 , 23 , 104 , 5 )  :: CALL HCHAR ( 4 , 29 , 104 , 4 ) 
  620 CALL HCHAR ( 7 , 1 , 104 , 32 )  :: CALL HCHAR ( 12 , 1 , 104 , 32 )  :: CALL HCHAR ( 8 , 1 , 112 , 128 ) 
  630 CALL CHAR ( 36 , "00000CD2CA310000000000000000000000006094528C000000" )  !  SCHLANGE
  640 CALL CHAR ( 96 , "00000000001F22627F7FFF3C180000000000000000C02010FEFEFF3C18" )  !  PW
  650 CALL CHAR ( 104 , "00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF" )  !  FLOSS
  660 CALL CHAR ( 112 , "000084FBFBFBFBFBFBFBFBFBFB840000000021DFDFDFDFDFDFDFDFDFDF21" )  !   FASS
  670 CALL CHAR ( 120 , "000C0C1F2343437F7F7F7FFF3C180000000000FCCECE0202CECEFEFF3C18" )  !   KRANKENWAGEN
  680 CALL CHAR ( 124 , "00000000001E21207F7F7FFF3C1800000000000000000080FCFEFEFF3C18" )  !   SPORTWAGEN
  690 CALL CHAR ( 128 , "00001D25457D7D7D7D7FFF78783000000000FFFFFFFFFFFFFFFFFF1E1E0C" )  !   LASTWAGEN
  700 CALL CHAR ( 132 , "000000000000001C3FD5FF7F20100000000000000002060EFE57FCE0205" )  !    FLUGZEUG
  710 CALL CHAR ( 136 , "815A3C3C182424C3" )  !  FROSCH
  720 CALL SPRITE ( # 1 , 96 , 3 , 145 , 256 , # 2 , 96 , 5 , 145 , 128 , # 3 , 96 , 10 , 145 , 64 ) 
  730 CALL SPRITE ( # 4 , 124 , 7 , 129 , 220 , # 5 , 124 , 6 , 129 , 135 , # 6 , 124 , 4 , 129 , 40 ) 
  740 CALL SPRITE ( # 24 , 120 , 16 , 113 , 175 , # 25 , 120 , 16 , 113 , 100 , # 12 , 128 , 2 , 98 , 250 ) 
  750 CALL SPRITE ( # 10 , 128 , 13 , 98 , 160 , # 11 , 128 , 13 , 98 , 70 , # 12 , 128 , 2 , 98 , 250 ) 
  760 CALL SPRITE ( # 20 , 112 , 2 , 73 , 250 , # 21 , 112 , 2 , 73 , 100 ) 
  770 CALL SPRITE ( # 19 , 104 , 13 , 57 , 200 , # 18 , 104 , 13 , 57 , 120 , # 17 , 104 , 13 , 57 , 50 ) 
  780 CALL SPRITE ( # 15 , 132 , 2 , 33 , 250 , # 22 , 132 , 2 , 33 , 125 ) 
  790 GOTO 1420
  800 R = 0  :: CALL SOUND ( 100 , 789 , 0 )  :: CALL HCHAR ( 24 , 27 , 136 )  :: IF FROE = 0 THEN 550ELSE DISPLAY AT ( 24 , 26 )  : FROE - 1 
  810 X1 = 161  :: Y1 = INT ( RND * 160 ) + 40 
  820 CALL SPRITE ( # 16 , 136 , 16 , X1 , Y1 ) 
  830 CALL JOYST ( 2 , Y , X ) 
  840 IF X = 4 THEN X1 = X1 - 8 ELSE IF Y = 4 THEN Y1 = Y1 + 8 ELSE IF Y = - 4 THEN Y1 = Y1 - 8 ELSE IF X = - 4 AND X1 > 116 THEN 830ELSE 860
  850 GOTO 890
  860 IF X = - 4 THEN X1 = X1 + 8  :: GOTO 890
  870 CALL COINC ( ALL , B )  :: FC = FC + 1  :: IF B = - 1 THEN 1140ELSE IF FC = 16 THEN 880ELSE 830
  880 FC = 0  :: H = - 1 * H  :: GF = - H  :: CALL MOTION ( # 28 , 0 , H * ( INT ( RND * 15 ) + 5 ) )  :: CALL SOUND ( - 1 , - 5 , 0 )  :: CALL MOTION ( # 27 , 0 , GF * ( INT ( RND * 27 ) + 6 ) )  :: GOTO 830
  890 IF X1 < 89 THEN 960ELSE CALL LOCATE ( # 16 , X1 , Y1 )  :: CALL SOUND ( - 5 , 1000 , 5 )  :: R = R + SGN ( X )  :: CALL COINC ( ALL , B )  :: IF B = - 1 THEN 1140ELSE 830
  900 IF X1 = 89 THEN CALL MOTION ( # 16 , 0 , 0 )  :: GOTO 830
  910 CALL JOYST ( 2 , X , Y ) 
  920 IF Y = 4 THEN 960ELSE IF Y = - 4 THEN 930ELSE IF X = - 4 THEN 990ELSE IF X = 4 THEN 1010ELSE 900
  930 CALL POSITION ( # 16 , X1 , Y1 )  :: R = R - 1 
  940 X1 = X1 + 8  :: CALL LOCATE ( # 16 , X1 , Y1 )  :: CALL MOTION ( # 16 , 0 , C ( R ) )  :: CALL SOUND ( - 5 , 980 , 5 , 995 , 6 )  :: CALL COINC ( ALL , B )  :: IF B = - 1 THEN 900ELSE 950
  950 IF X1 = 89 THEN 900ELSE 1140
  960 CALL POSITION ( # 16 , X1 , Y1 )  :: R = R + 1 
  970 X1 = X1 - 8  :: CALL LOCATE ( # 16 , X1 , Y1 )  :: CALL MOTION ( # 16 , 0 , C ( R ) )  :: CALL SOUND ( - 5 , 980 , 5 , 995 , 6 )  :: CALL COINC ( ALL , B )  :: IF B = - 1 THEN 900ELSE 980
  980 IF X1 = 49 THEN 1020ELSE 1140
  990 CALL POSITION ( # 16 , X1 , Y1 )  :: Y1 = Y1 - 8 
 1000 CALL LOCATE ( # 16 , X1 , Y1 )  :: CALL SOUND ( - 5 , 980 , 5 , 995 , 6 )  :: CALL COINC ( ALL , B )  :: IF B = - 1 THEN 1140ELSE 900
 1010 CALL POSITION ( # 16 , X1 , Y1 )  :: Y1 = Y1 + 8  :: CALL LOCATE ( # 16 , X1 , Y1 )  :: CALL SOUND ( - 5 , 980 , 5 , 995 , 6 )  :: CALL COINC ( ALL , B )  :: IF B = - 1 THEN 1140ELSE 900
 1020 CALL MOTION ( # 16 , 0 , 0 )  :: CALL LOCATE ( # 16 , INT ( X1 / 8 ) * 8 + 1 , INT ( Y1 / 8 ) * 8 + 8 )  :: X1 = INT ( X1 / 8 ) * 8 + 1  :: Y1 = INT ( Y1 / 8 ) * 8 + 8 
 1030 CALL JOYST ( 2 , X , Y ) 
 1040 IF X1 = 33 AND Y = 4 THEN 1090ELSE IF Y = - 4 AND X1 = 49 THEN 910
 1050 IF Y = 4 THEN X1 = X1 - 8 ELSE IF X = 4 THEN Y1 = Y1 + 8 ELSE IF X = - 4 THEN Y1 = Y1 - 8 ELSE IF Y = - 4 THEN X1 = X1 + 8 ELSE 1070
 1060 GOTO 1130
 1070 CALL COINC ( ALL , B )  :: IF B = - 1 THEN 1140
 1080 GOTO 1030
 1090 CALL GCHAR ( 4 , INT ( Y1 / 8 ) + 1 , D )  :: IF D < > 32 THEN 1140
 1100 PUNKTE = PUNKTE + ( 100 * ( ( V / 1.2 ) + 1 ) )  :: DISPLAY AT ( 1 , 9 ) SIZE ( 12 )  : PUNKTE 
 1110 CALL POSITION ( # 16 , X1 , Y1 )  :: CALL DELSPRITE ( # 16 )  :: CALL HCHAR ( X1 / 8 , ( Y1 / 8 ) + 1 , 136 )  :: GOTO 1170
 1120 RETURN 
 1130 CALL LOCATE ( # 16 , X1 , Y1 )  :: CALL SOUND ( - 5 , 980 , 5 , 995 , 6 )  :: CALL COINC ( ALL , B )  :: IF B = - 1 THEN 1140ELSE 1030
 1140 CALL DELSPRITE ( # 16 )  :: FOR X = 1 TO 5  :: CALL SOUND ( 120 , 180 , 3 , 190 , 4 )  :: CALL SOUND ( 240 , - 2 , 3 , 280 , 4 )  :: NEXT X  :: FROE = FROE - 1 
 1150 IF FROE = 0 THEN 1370
 1160 GOTO 800
 1170 FOR Z = 1 TO 3  :: CALL SOUND ( 60 , 560 , 6 , 780 , 7 )  :: CALL SOUND ( 50 , 980 , 4 , 990 , 6 )  :: NEXT Z  :: RETT = RETT + 1  :: IF RETT = 5 THEN 1190
 1180 GOTO 800
 1190 FOR X = 1 TO 4  :: CALL SOUND ( 120 , 450 , 2 , 460 , 3 )  :: CALL SOUND ( 120 , 780 , 3 , 790 , 3 )  :: CALL SOUND ( 120 , 670 , 3 , 680 , 2 )  :: NEXT X 
 1200 DISPLAY BEEP AT ( 23 , 1 )  : "FREISPIEL ! !"  :: PUNKTE = PUNKTE + ( FROE * ( 100 * ( ( V / 1.2 ) + 1 ) ) )  :: DISPLAY AT ( 1 , 9 ) SIZE ( 12 )  : PUNKTE 
 1210 FROE = 10  :: RETT = 0 
 1220 FOR VERZ = 1 TO 250  :: NEXT VERZ  :: DISPLAY AT ( 23 , 1 ) SIZE ( 15 ) 
 1230 V = V + 1.2  :: VV = V  :: IF V > 40 THEN V = 40 
 1240 DISPLAY AT ( 1 , 26 )  : V / 1.2  :: CALL SOUND ( 390 , 780 , 5 , 790 , 6 , 770 , 7 , - 1 , 0 ) 
 1250 CALL HCHAR ( 4 , 4 , 32 )  :: CALL HCHAR ( 4 , 10 , 32 )  :: CALL HCHAR ( 4 , 16 , 32 )  :: CALL HCHAR ( 4 , 22 , 32 )  :: CALL HCHAR ( 4 , 28 , 32 ) 
 1260 FOR X = 1 TO 3  :: CALL MOTION ( # X , 0 , VV + INT ( 6 + ( V / 5 ) ) )  :: NEXT X 
 1270 FOR X = 4 TO 8  :: CALL MOTION ( # X , 0 , VV + INT ( 8 + ( V / 4 ) ) )  :: NEXT X 
 1280 FOR X = 24 TO 26  :: CALL MOTION ( # X , 0 , - ( VV + INT ( 10 + ( V / 3 ) ) ) )  :: NEXT X 
 1290 FOR X = 10 TO 12  :: CALL MOTION ( # X , 0 , - ( VV + INT ( 4 + ( V / 6 ) ) ) )  :: NEXT X 
 1300 CALL MOTION ( # 15 , 0 , - ( VV + INT ( 12 + ( V / 2 ) ) ) , # 22 , 0 , - ( VV + INT ( 12 + ( V / 2 ) ) ) ) 
 1310 C ( 10 ) = - ( V + 5 )  :: C ( 11 ) = - ( V + 5 )  :: C ( 12 ) = V + 7  :: C ( 13 ) = V + 7 
 1320 FOR X = 20 TO 21  :: CALL MOTION ( # X , 0 , C ( 10 ) )  :: NEXT X  :: FOR X = 17 TO 19  :: CALL MOTION ( # X , 0 , C ( 12 ) )  :: NEXT X 
 1330 IF V < 3 THEN 1360ELSE H = INT ( RND * 2 )  :: IF H = 0 THEN H = - 1 
 1340 CALL SPRITE ( # 28 , 36 , 15 , 89 , 200 , 0 , H * ( INT ( RND * 22 ) + 5 ) ) 
 1350 IF V < 7 THEN 1360ELSE GF = - H  :: CALL SPRITE ( # 27 , 36 , 15 , 47 , 50 , 0 , GF * ( INT ( RND * 28 ) + 5 ) ) 
 1360 GOTO 800
 1370 DISPLAY AT ( 23 , 1 )  : "NOCH EIN SPIEL ?(J/N)" 
 1380 CALL KEY ( 2 , K , S )  :: IF S = 0 THEN 1380ELSE IF K = 2 THEN 530ELSE IF K < > 15 THEN 1380
 1390 CALL CLEAR  :: CALL CHARSET  :: CALL DELSPRITE ( ALL ) 
 1400 DISPLAY AT ( 5 , 3 )  : "TI BENUTZER-CLUB SCHWEIZ"  : "  "  ; RPT$ ( "*" , 24 )  :  :  :  :  :  :  :  : TAB ( 5 )  ; "*** PROGRAMMENDE ***" 
 1410 DISPLAY AT ( 20 , 17 )  : "Maerz 1984"  :: END 
 1420 DISPLAY AT ( 24 , 1 )  : "SPIELSTAERKE(1-9)?" 
 1430 ACCEPT AT ( 24 , 25 ) VALIDATE ( "123456789" ) SIZE ( 1 ) BEEP  : VV 
 1440 V = 3.6 * ( VV - 1 ) 
 1450 VV = 0  :: DISPLAY AT ( 24 , 1 ) BEEP  :: GOTO 1250
